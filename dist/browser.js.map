{"mappings":"A,C,KGGA,IAAM,EAAgB,KAAK,SAA3B,CAkKM,EAAW,IAAI,QAER,EAAU,AAAC,IACvB,GAAI,EAAS,GAAA,CAAI,GAAM,CACtB,IAAI,EAAO,EAAS,GAAA,CAAI,GACxB,GAAI,EAAK,IAAA,CACR,OAAO,EAAK,IADb,AAGD,QACA,AAAI,MAAM,OAAA,CAAQ,GACV,QAED,OAAO,CACf,EAEa,EAAQ,CACpB,SAAS,QAAQ,SAAS,SAAS,UACnC,UAAU,QAAQ,OAAO,MAAM,OAAO,OAAO,OAAO,WAAY,WAAY,YAC5E,OAAQ,OAAQ,QAAS,QAAS,OAAQ,QAC1C,MAAO,OAAQ,QAAS,QAAS,QACjC,OAAQ,QAAS,SAAU,SAAU,SACrC,QAAS,UAAW,UACpB,CAEY,EAAU,CAAC,EAAK,KAC5B,GAAI,AAAe,UAAf,OAAO,EACV,MAAM,AAAI,UAAU,iFAErB,IAAI,EAAO,CAAC,EAIZ,GAHI,EAAS,GAAA,CAAI,IAChB,CAAA,EAAO,EAAS,GAAA,CAAI,EADrB,EAGI,CAAC,EAAM,QAAA,CAAS,GACnB,MAAM,AAAI,UAAU,gBAAgB,EAErC,CAAA,EAAK,IAAA,CAAO,EACmB,KAAA,IAApB,EAAK,UAAA,EACf,CAAA,EAAK,UAAA,CAAa,CAAC,CAAA,EAEpB,EAAS,GAAA,CAAI,EAAK,EACnB,EAEa,EAAe,CAAC,EAAK,EAAM,KACvC,GAAI,AAAe,UAAf,OAAO,EACV,MAAM,AAAI,UAAU,iFAKrB,GAHI,MAAM,OAAA,CAAQ,IACjB,CAAA,EAAQ,EAAM,IAAA,CAAK,IADpB,EAGI,AAAiB,UAAjB,OAAO,EACV,MAAM,AAAI,UAAU,4DAErB,GAAI,AAAqB,KAArB,EAAM,OAAA,CAAQ,KACjB,MAAM,AAAI,UAAU,gDAEI,CAAA,KAArB,EAAM,OAAA,CAAQ,MACjB,CAAA,EAAQ,EAAM,KAAA,CAAM,IADrB,EAGA,IAAI,EAAO,EAAS,GAAA,CAAI,IAAQ,CAAE,WAAY,CAAC,CAAC,CAChD,CAAA,EAAK,UAAU,CAAC,EAAK,CAAG,EACxB,EAAS,GAAA,CAAI,EAAK,EACnB,EAEa,EAAgB,CAAC,EAAK,KAClC,GAAI,AAAe,UAAf,OAAO,EACV,MAAM,AAAI,UAAU,iFAErB,GAAI,AAAsB,UAAtB,OAAO,EACV,MAAM,AAAI,UAAU,sCAErB,OAAO,IAAA,CAAK,GAAY,OAAA,CAAQ,AAAA,IAC/B,EAAa,EAAK,EAAK,CAAU,CAAC,EAAI,CACvC,EACD,EAEa,EAAe,CAAC,EAAK,IAE1B,AADI,CAAA,EAAS,GAAA,CAAI,IAAQ,CAAE,WAAY,CAAC,CAAC,CAAA,EACpC,UAAU,CAAC,EAAK,CAmChB,EAAgB,AAAC,GAEtB,OAAO,MAAA,CAAO,CAAC,EAAE,AADb,CAAA,EAAS,GAAA,CAAI,IAAQ,CAAE,WAAY,CAAC,CAAC,CAAA,EACnB,UAA7B,EAcY,EAAgB,AAAC,IAC7B,IAAI,EAAO,EAAQ,GAEf,EAAmB,OAAO,OAAA,CADb,EAAc,IAE7B,GAAA,CAAI,CAAC,CAAC,EAAM,EAAU,IAClB,MAAM,OAAA,CAAQ,IACjB,CAAA,EAAY,EAAU,IAAA,CAAK,IAD5B,EAGO,EAAK,KAAK,EAAU,MAE3B,IAAA,CAAK,WAMP,CALK,GACA,AAA+D,KAA/D,CAAC,SAAS,QAAQ,SAAS,SAAS,UAAU,CAAC,OAAA,CAAQ,IAC1D,CAAA,EAAO,EAD0C,EAI/C,GAAQ,GACJ,IAAM,CAAC,EAAM,EAAiB,CAAC,MAAA,CAAO,SAAS,IAAA,CAAK,KAAO,IAE3D,EAET,CDxTA,OAAM,EACL,aACA,CACC,OAAO,IAAI,MAAM,IAAI,CAAC,CACrB,IAAK,CAAC,EAAO,KACZ,GAAI,AAAwB,KAAA,IAAjB,CAAM,CAAC,EAAK,CACtB,OAAO,CAAM,CAAC,EAAK,CAEpB,GAAI,AAAQ,QAAR,EAIJ,MADA,QAAQ,KAAA,CAAM,8BAA+B,EAAM,OAAO,EAAM,KAAK,SAAA,CAAU,IACzE,AAAI,MAAM,qBAAqB,EAAK,aAC3C,EACA,IAAK,CAAC,EAAO,EAAK,KAEjB,MADA,QAAQ,KAAA,CAAM,qBAAqB,EAAK,cAAc,GAChD,AAAI,MAAM,qBAAqB,EAAK,WAC3C,CACD,EACD,CAED,CAEe,MAAA,UAAmB,EAEjC,OAAS,CAAA,CAAK,AAEd,CAAA,UACA,CACC,MAAO,EACR,CAEA,QACA,CACC,MAAO,MACR,CAEA,WACA,CAEC,OAAO,AADI,AAAA,EAAc,IAAI,EACjB,IAAI,CAAC,MAAjB,EACD,CAED,CDzCA,OAAO,OAAA,CAAU,CAChB,KAAM,EACN,UEDwB,CAAC,EAAO,EAAS,IAAI,CAAE,EAAM,EAAE,IAEvD,IAAI,EAAa,IAAI,QAEjB,EAAS,GACT,EAAM,GAQV,GANI,AAAiB,UAAjB,OAAO,EACV,GAAU,IAAI,MAAA,CAAO,GACM,UAAjB,OAAO,GACjB,CAAA,EAAS,CADH,EAIH,GAAY,AAAoB,YAApB,OAAO,GAChB,CAAA,AAAoB,UAApB,OAAO,GACJ,AAA2B,UAA3B,OAAO,EAAS,MAAA,AAAW,EAE9B,MAAM,AAAI,MAAM,qBAGvB,IAAM,EAAmB,AAAC,IACzB,IAAI,EAAO,EACX,GAAO,EACP,IAAI,EAAW,GACX,EAAS,GACT,EAAO,OAAO,IAAA,CAAK,GACnB,MAAM,OAAA,CAAQ,IACjB,CAAA,EAAO,EAAK,MAAA,CAAO,AAAA,GAAO,AAAwB,KAAxB,EAAS,OAAA,CAAQ,GAD5C,EAGI,IACH,EAAU,KAAK,EACf,EAAS,KAAK,GAEf,IAAI,EAAS,EAAS,EAAK,GAAA,CAAI,AAAA,GACvB,IAAI,EAAK,KAAK,EAAI,EAAM,IAC7B,IAAA,CAAK,IAAI,GAAU,EAEtB,OADA,EAAM,EACC,CACR,EAEM,EAAgB,AAAC,IACtB,IAAI,EAAO,EAEP,EAAW,GACX,EAAS,GAFb,CAAA,GAAO,CAAP,IAIC,EAAW,KAAK,EAChB,EAAS,KAAK,GAEf,IAAI,EAAS,EAAS,EAAI,GAAA,CAAI,CAAC,EAAM,IAC7B,EAAI,EAAO,IAChB,IAAA,CAAK,IAAI,GAAU,EAEtB,OADA,EAAM,EACC,CACR,EAEM,EAAM,CAAC,EAAK,KACjB,IAAI,EAAQ,CAAM,CAAC,EAAI,CAIvB,GAHwB,YAApB,OAAO,GAA2B,AAAM,KAAN,GACrC,CAAA,EAAQ,EAAS,IAAA,CAAK,EAAQ,EAAK,EADpC,EAGI,AAAiB,UAAjB,OAAO,GAAsB,EAAW,GAAA,CAAI,GAAQ,CACvD,IAAI,EAAK,EAAa,EAAO,MAI7B,OAHK,GACJ,CAAA,EAAK,AA2ET,SAAkB,CAAK,EACtB,GAAI,AAAkB,aAAlB,OAAO,OAEV,MADA,QAAQ,KAAA,CAAM,8DACR,AAAI,MAAM,yEAEjB,GAAI,AAA6B,YAA7B,OAAO,OAAO,UAAA,CACjB,IAAI,EAAK,OAAO,UADjB,QAGC,IAAI,EAAM,uCAA4B,OAAA,CAAQ,SAAU,AAAA,GACtD,AAAA,CAAA,EAAI,OAAO,eAAA,CAAgB,IAAI,WAAW,GAAG,CAAC,EAAE,CAAG,IAAM,EAAI,CAAA,EAAG,QAAA,CAAS,KAI5E,OADA,EAAa,EAAO,KAAM,GACnB,CACR,EAzFkB,EADf,EAGO,UAAU,EAAG,GACrB,CACA,GAAI,MAAO,EACV,MAAO,OAKR,GAHqB,UAAjB,OAAO,GACV,EAAW,GAAA,CAAI,EAAO,CAAA,GAEnB,AAA0B,YAA1B,OAAO,EAAM,SAAA,CAChB,OAAO,EAAM,SAAA,CAAU,EAAY,EAAU,GACvC,GAAI,MAAM,OAAA,CAAQ,GACxB,OAAO,EAAc,GAAS,IAAI,EAAc,GAAO,IACjD,IAAI,CAAA,aAAiB,MAAA,EAsD3B,OAAO,EAAc,EAAO,EAAU,GArDtC,OAAQ,EAAQ,IACf,IAAK,SACL,IAAK,UACL,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,OACL,IAAK,WACL,IAAK,QACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,WACJ,OAAO,EAAc,GAAS,EAAc,GAAG,EAAO,EAAU,EAEjE,KAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,YACL,IAAK,SACL,IAAK,UACJ,OAAO,EAAc,GAAS,EAAc,EAAO,EAAU,EAE9D,KAAK,QACJ,IAAI,EAAU,EAAc,GAC5B,OAAO,EAAc,GAAS,IAAM,EAAU,GAE/C,KAAK,SACJ,GAAI,AAAU,OAAV,EACH,MAAO,OAER,IAAI,EAAQ,EAAiB,GAC7B,OAAO,EAAc,GAAS,IAAM,EAAQ,GAE7C,SACC,MAAM,AAAI,MAAM,EAAQ,GAAO,4BAEjC,CAIF,EAEA,OAAO,EAAI,GAAI,CAAC,GAAI,CAAK,EAC1B,EFvIC,MGHc,SAAe,CAAK,CAAE,CAAO,CAAE,CAAI,MAiB7C,EAAI,EAAI,EAAO,EAhBd,GACJ,CAAA,EAAO,CAAC,CAAA,EAEJ,EAAK,KAAA,EACT,CAAA,EAAK,KAAA,CAAQ,CAAC,CAAA,EAEV,EAAK,KAAA,CAAM,EAAA,EACf,CAAA,EAAK,KAAA,CAAM,EAAA,CAAK,IAAI,GADrB,EAGK,EAAK,UAAA,EACT,CAAA,EAAK,UAAA,CAAa,IAAI,GADvB,EAGK,EAAK,OAAA,EACT,CAAA,EAAK,OAAA,CAAU,mBADhB,EAKA,IAAI,EAAU,CACb,IAAK,IACL,KAAK,KACL,IAAK,IACL,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,GACJ,EAEI,EAAQ,SAAS,CAAC,EACrB,KAAM,CACL,KAAM,cACN,QAAS,EACT,GAAI,EACJ,MAAO,CACR,CACD,EAEI,EAAO,SAAS,CAAC,EAMpB,OALI,GAAK,IAAI,GACZ,EAAM,aAAa,EAAE,iBAAiB,EAAG,KAE1C,EAAK,EAAM,MAAA,CAAO,GAClB,GAAI,EACG,CACR,EAEI,EAAS,SAAS,CAAO,EAC5B,IAAI,EAAY,GAKhB,IAJS,MAAL,IACH,EAAY,IACZ,EAAK,MAEA,GAAI,KAAO,GAAI,KACpB,GAAa,EACb,IAED,GAAI,AAAK,MAAL,EAEH,IADA,GAAW,IACL,KAAU,GAAM,KAAO,GAAM,KAClC,GAAa,EAGf,GAAI,AAAO,MAAP,GAAc,AAAO,MAAP,EAOjB,IANA,GAAa,EACb,IACI,CAAA,AAAO,MAAP,GAAc,AAAO,MAAP,CAAO,IACxB,GAAa,EACb,KAEM,GAAM,KAAO,GAAM,KACzB,GAAa,EACb,IAGF,IAAI,EAAS,IAAI,OAAO,GAAW,OAAnC,GACA,GAAI,EACH,OAAO,GACN,IAAK,MACJ,EAAM,GACN,KACD,KAAK,OACJ,EAAM,EAAW,CAAC,EAAE,IAAS,EAC7B,KACD,KAAK,OACJ,EAAM,EAAW,CAAC,KAAK,IAAI,EAC3B,KACD,KAAK,QACJ,EAAM,EAAW,CAAC,EAAE,IAAI,EACxB,KACD,KAAK,QACJ,EAAM,EAAW,CAAC,OAAO,MAAM,EAC/B,KACD,KAAK,SACJ,EAAM,EAAW,CAAC,EAAE,MAAM,EAC1B,KACD,KAAK,QACJ,EAAM,EAAW,CAAC,YAAa,WAAW,EAC1C,KACD,KAAK,SACJ,EAAM,EAAW,CAAC,EAAE,WAAW,EAC/B,KACD,KAAK,YACL,IAAK,QACJ,EAAM,EAAW,CAAC,oBAAqB,mBAAoB,EAC3D,KACD,KAAK,SACJ,EAAM,EAAW,CAAC,EAAE,oBAAqB,EACzC,KACD,KAAK,QACJ,EAAQ,GACR,KACD,KAAK,UACJ,EAAQ,EAAW,CAAC,OAAS,MAAQ,EACrC,KACD,KAAK,UACJ,EAAQ,EAAW,CAAC,QAAU,OAAU,EACxC,KACD,KAAK,SAEJ,KACD,SACC,EAAY,EAEd,CAED,OAAO,CACR,EAEI,EAAc,SAAS,CAAI,EAC9B,EAAM,0BAA0B,EACjC,EAEM,EAAU,CACf,MAAO,2EACP,MAAO,qDACP,KAAO,wFACP,QAAS,cACT,MAAO,sBACP,SAAU,2GACV,MAAO,yHACP,KAAM,2CACN,KAAM,wEACN,SAAU,uEACV,MAAO,oCACR,EAEI,EAAU,SAAS,CAAK,CAAE,CAAK,EAClC,IAAI,EAAO,IAAI,OAAO,WAAW,IAC7B,EAAM,EAAK,QAAf,GACI,IAAQ,GACX,EAAM,sCAEH,IACqB,UAApB,OAAO,CAAK,CAAC,EAAE,EACd,EAAK,CAAK,CAAC,EAAE,EAChB,EAAM,0CAGgB,UAApB,OAAO,CAAK,CAAC,EAAE,EACd,EAAK,CAAK,CAAC,EAAE,EAChB,EAAM,0CAIV,EACI,EAAQ,SAAS,CAAG,CAAE,CAAK,EAC9B,IAAI,EAAO,IAAI,OAAO,SAAS,IAC3B,EAAM,EAAK,QAAf,GACI,IAAM,GACT,EAAM,wCAEH,IACqB,UAApB,OAAO,CAAK,CAAC,EAAE,EACd,EAAK,CAAK,CAAC,EAAE,EAChB,EAAM,4CAGgB,UAApB,OAAO,CAAK,CAAC,EAAE,EACd,EAAK,CAAK,CAAC,EAAE,EAChB,EAAM,4CAIV,EACI,EAAU,SAAS,CAAK,EAC3B,IAAI,EAAS,CAAA,EAaV,MAZI,AAAoB,MAApB,EAAM,MAAA,CAAO,GAGT,AADJ,CAAA,EAAS,CAAE,EAAG,EAAG,EAAG,EAAE,CAAC,OAAA,CAAQ,AAD/B,CAAA,EAAQ,EAAM,SAAA,CAAU,EAAxB,EACqC,MAAA,EAAU,IAAO,CAAC,MAAM,SAAS,EAAO,IAAvD,EACX,QAAA,CAAS,MAAM,GACzB,EAAY,SAGb,EAAS,EAAQ,KAAA,CAAM,IAAA,CAAK,GAE3B,GACJ,EAAY,SAEN,CAAA,CACX,EA+BI,EAAQ,SAAS,CAAG,EACvB,GAAI,CACH,OAAO,AAAQ,IAAI,IAAI,EAAK,EAAK,OAAjC,EAAO,CAAA,CACR,CAAE,MAAM,EAAG,CACV,QAAQ,GAAA,CAAI,GACZ,EAAY,MACb,CACD,EA4CI,EAAkB,SAAS,CAAO,CAAE,CAAK,EAC5C,GAAK,GAGL,OAAO,GACN,IAAK,SACL,IAAK,QACL,IAAK,UACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,MACL,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,QACL,IAAK,YACJ,EAAY,GACZ,KACD,KAAK,OACJ,OAhGW,EAAQ,IAAA,CAAK,IAAA,CAgGV,IA9FZ,EAAY,QAEN,CAAA,CA6FT,KAAK,UACJ,OA3FW,EAAQ,OAAA,CAAQ,IAAA,CA2FV,IAzFf,EAAY,WAEN,CAAA,CAwFT,KAAK,QACJ,OAtFW,EAAQ,KAAA,CAAM,IAAA,CAsFV,IApFb,EAAY,SAEN,CAAA,CAmFT,KAAK,MACJ,OAAO,EAAM,EACd,KAAK,OACL,IAAK,SACL,IAAK,OACL,IAAK,OACL,IAAK,OAEJ,MAAO,CAAA,CACR,KAAK,QACJ,OAAO,EAAQ,EAChB,KAAK,QACJ,OAzHW,EAAQ,KAAA,CAAM,IAAA,CAyHV,IAvHb,EAAY,SAEN,CAAA,CAsHT,KAAK,WACJ,OAtFW,EAAQ,QAAA,CAAS,IAAA,CAsFV,IApFhB,EAAY,YAEN,CAAA,CAmFT,KAAK,QACJ,OAjFW,EAAQ,KAAA,CAAM,IAAA,CAiFV,IA/Eb,EAAY,SAEN,CAAA,CA8ET,KAAK,QACJ,OA5EW,EAAQ,KAAA,CAAM,IAAA,CA4EV,IA1Eb,EAAY,SAEN,CAAA,CAyET,KAAK,OACJ,OAvEW,EAAQ,IAAA,CAAK,IAAA,CAuEV,IArEZ,EAAY,QAEN,CAAA,CAoET,KAAK,OACJ,OAlEW,EAAQ,IAAA,CAAK,IAAA,CAkEV,IAhEZ,EAAY,QAEN,CAAA,CA+DT,KAAK,WACJ,OA7DW,EAAQ,QAAA,CAAS,IAAA,CA6DV,IA3DhB,EAAY,YAEN,CAAA,CA0DV,CACA,EAAM,iCAAiC,GACxC,EAEI,EAAS,SAAS,CAAO,EAC5B,IAAI,EAAQ,GAAI,EAAK,EAAG,EAKxB,IAJW,MAAP,GACH,EAAM,gBAEP,EAAK,KACC,GAAI,CACT,GAAI,AAAK,MAAL,EAGH,OAFA,IACA,EAAgB,EAAS,GAClB,EAER,GAAI,AAAK,OAAL,GAEH,GADA,IACI,AAAK,MAAL,EAAU,CAEb,IAAK,EAAE,EADP,EAAM,EAGL,AAFS,EAAE,GAEN,SADL,EAAM,SAAS,IAAQ,KADT,IAKd,EAAQ,AAAQ,GAAR,EAAa,EAEtB,GAAS,OAAO,YAAA,CAAa,GAC7B,GACD,MAAO,GAAI,AAAuB,UAAvB,OAAO,CAAO,CAAC,EAAG,CAC5B,GAAS,CAAO,CAAC,EAAG,CACpB,SAEA,WAGD,GAAS,EACT,GAEF,CACA,EAAM,kCACP,EAEI,EAAM,WACT,IAAI,EAAK,EAAK,EAAM,CACnB,WAAY,CAAC,CACd,EAWA,IAVW,MAAP,GACH,EAAM,gBAEP,EAAK,KACL,CAAA,EAAM,GAAN,GAEC,EAAM,mCAEP,EAAM,OAAA,CAAU,EAChB,IACM,GAAI,CACT,GAAI,AAAK,MAAL,EAEH,OADA,EAAK,KACE,EAER,CAAA,EAAM,GAAN,GAEC,EAAM,yCAEP,IACA,EAAK,KACL,IACA,EAAM,IACN,EAAM,UAAU,CAAC,EAAI,CAAG,EACxB,GACD,CACA,EAAM,wCACP,EAEI,EAAa,WAChB,KAAO,GACN,OAAO,GACN,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACJ,IACD,KACA,SACC,MAEF,CAEF,EAEI,EAAO,WAEV,IAAI,EAAI,GAOR,IANK,GAAI,KAAO,GAAI,KAAS,GAAI,KAAO,GAAI,KAC3C,GAAO,EACP,KAEA,EAAM,+BAEA,GAAI,KAAO,GAAI,KAAS,GAAI,KAAO,GAAI,KAAS,GAAI,KAAO,GAAI,KAAQ,AAAI,KAAJ,GAC7E,GAAO,EACP,IAED,OAAO,CACR,EAEI,EAAa,SAAS,CAAO,EAChC,IAAI,EAAI,IAIR,OAHK,GAAK,AAAa,UAAb,OAAO,GAChB,EAAM,gDAAgD,EAAE,KAElD,EAAE,WAAT,IACC,IAAK,OAIJ,OAHI,GAAW,AAAU,YAAV,GACd,EAAY,GAEN,CAAA,CAER,KAAK,QAIJ,OAHI,GAAW,AAAU,YAAV,GACd,EAAY,GAEN,CAAA,CAER,KAAK,OACJ,OAAO,IAER,SACC,EAAM,gDAAgD,EAAE,IAE1D,CACD,EAEI,EAAkB,SAAS,CAAI,CAAE,CAAM,CAAE,CAAG,EAC/C,GAAI,AAAwB,SAAxB,EAAgB,GAAgB,CACnC,IAAI,EAAO,GAAG,EACV,EAAQ,EAAK,UAAA,CAAW,GAAA,CAAI,EACX,MAAA,IAAV,IACV,EAAK,UAAA,CAAW,GAAA,CAAI,EAAK,EAAE,EAC3B,EAAQ,EAAK,UAAA,CAAW,GAAA,CAAI,IAEjB,EAAM,IAAA,CAAK,CACtB,IAAK,IAAI,QAAQ,GACjB,IAAK,CACN,EACD,CACD,EAEI,EAAQ,WACX,IAAI,EAAM,EAAQ,EAAE,CAMpB,GALW,MAAP,GACH,EAAM,gBAEP,EAAK,KACL,IACI,AAAK,MAAL,EAEH,OADA,EAAK,KACE,EAER,KAAM,GAAI,CAKT,GAJA,EAAO,IACP,EAAgB,EAAM,EAAO,EAAM,MAAnC,EACA,EAAM,IAAA,CAAK,GACX,IACI,AAAK,MAAL,EAEH,OADA,EAAK,KACE,EAER,EAAK,KACL,GACD,CACA,EAAM,sBACP,EAEI,EAAS,WACZ,IAAI,EAAK,EAAK,EAAO,CAAC,EAMtB,GALW,MAAP,GACH,EAAM,gBAEP,EAAK,KACL,IACI,AAAK,MAAL,EAEH,OADA,EAAK,KACE,EAER,KAAM,GAAI,CAWT,GATU,cADV,CAAA,EAAM,GAAN,GAEC,EAAM,kCAEP,IACA,EAAK,KACL,EAAM,IACN,CAAM,CAAC,EAAI,CAAG,EACd,EAAgB,EAAK,EAAQ,GAC7B,IACI,AAAK,MAAL,EAEH,OADA,EAAK,KACE,EAER,EAAK,KACL,GACD,CACA,EAAM,sBACP,EAEA,EAAQ,WACP,IAAI,EAAO,EAAQ,EAOnB,OANA,IACS,MAAL,IAEH,EAAU,AADV,CAAA,EAAQ,GAAR,EACgB,OAAhB,CACA,KAEM,GACN,IAAK,IACA,GAAW,AAAU,WAAV,GACd,EAAY,GAEb,EAAS,IACV,KACA,KAAK,IACA,GAAW,AAAU,UAAV,GACd,EAAY,GAEb,EAAS,IACV,KACA,KAAK,IACJ,EAAS,EAAO,GACjB,KACA,KAAK,IACJ,EAAS,EAAO,GACjB,KACA,SAEE,EADG,GAAI,KAAO,GAAI,IACT,EAAO,GAEP,EAAW,EAGvB,CACA,GAAI,EAAO,CAIV,GAHe,OAAX,GACH,CAAA,EAAS,IAAI,CADd,EAGI,AAAkB,UAAlB,OAAO,EACV,OAAO,OAAO,GACb,IAAK,SACJ,EAAS,IAAI,OAAO,GACpB,KACD,KAAK,SACJ,EAAS,IAAI,OAAO,GACpB,KACD,KAAK,UACJ,EAAS,IAAI,QAAQ,GACrB,KACD,SACC,EAAM,iCAAkC,OAAO,EAEjD,CAEG,EAAM,OAAA,EACT,EAAgB,EAAQ,EAAM,OAD/B,EAGI,EAAM,UAAA,GACT,EAAsB,EAAQ,EAAM,UAApC,EACI,EAAM,UAAA,EAAY,IACrB,EAAK,KAAA,CAAM,EAAA,CAAG,GAAA,CAAI,EAAM,UAAA,CAAW,EAAA,CAAI,IAAI,QAAQ,IAGtD,CACA,OAAO,CACR,EAEA,EAAK,EACL,EAAK,IACL,EAAS,IACT,IACI,GACH,EAAM,gBAGgB,YAAnB,OAAO,GA6BV,AA5BA,SAAS,EAAK,CAAM,CAAE,CAAG,EAGpB,IAFC,EACG,EACA,EAAQ,CAAM,CAAC,EAAI,CACvB,GAAI,AAAU,OAAV,GACC,AAAiB,UAAjB,OAAO,GACP,CAAE,CAAA,aAAiB,QACnB,aAAiB,QACjB,aAAiB,OAAA,EAElB,IAAK,KAAK,EACF,OAAO,SAAA,CAAU,cAAA,CAAe,IAAA,CAAK,EAAO,KAExC,AAAM,KAAA,IADV,CAAA,EAAI,EAAK,EAAO,EAAhB,GAEQ,CAAA,AAAoB,KAAA,IAAb,CAAK,CAAC,EAAE,EAAoB,CAAK,CAAC,EAAE,GAAG,CAAA,GAElD,CAAK,CAAC,EAAE,CAAG,EACc,SAArB,EAAgB,IACjB,EAAgB,EAAG,EAAO,IAEhB,KAAA,IAAN,GACP,OAAO,CAAK,CAAC,EAAE,EAK/B,OAAO,EAAQ,IAAA,CAAK,EAAQ,EAAK,EAAO,EAC1C,EACE,CAAC,GAAG,CAAM,EAAG,IAGnB,IAAI,EAAc,SAAS,CAAC,CAAC,CAAK,EACjC,GAAI,AAAiB,KAAA,IAAV,EAAuB,CACjC,IAAI,EAAM,EAAE,GAAA,CAAI,KAAhB,GACA,GAAI,AAAc,KAAA,IAAP,GAAsB,AAA8B,SAA9B,EAAgB,CAAG,CAAC,EAAE,GAAA,CAAI,EAE1D,OADA,CAAG,CAAC,EAAE,GAAA,CAAI,CAAG,EACN,CAAA,CAET,CACD,EAyBA,OAvBI,EAAK,KAAA,CAAM,EAAA,CAAG,IAAA,CAAK,EAAK,UAAA,CAAW,IAAA,CACtC,EAAK,UAAA,CAAW,OAAA,CAAQ,CAAC,EAAM,KAC9B,IAAI,EAAQ,EAAK,KAAA,CAAM,EAAA,CAAG,GAAA,CAAI,IAAK,OACvB,MAAA,IAAR,GACH,EAAM,OAAA,CAAQ,CAAC,EAAE,KACZ,EAAY,EAAE,IACjB,OAAO,CAAK,CAAC,EAAE,AAEjB,EAEF,GAEA,EAAK,KAAA,CAAM,EAAA,CAAG,OAAA,CAAQ,CAAC,EAAI,KAC1B,IAAI,EAAQ,EAAI,KAAhB,GACI,EAAQ,EAAK,UAAA,CAAW,GAAA,CAAI,EACpB,MAAA,IAAR,GAAqB,AAAiB,KAAA,IAAV,IAC/B,EAAM,OAAA,CAAQ,CAAC,EAAE,KAChB,EAAY,EAAE,EACf,GACA,EAAK,UAAA,CAAW,MAAA,CAAO,GAEzB,GAEM,CACR,EH3qBC,QAAS,EACT,QAAS,EACT,cAAe,EACf,aAAc,EACd,aAAc,EACd,aEwO2B,CAAC,EAAK,EAAM,KACvC,GAAI,AAAiB,UAAjB,OAAO,EACV,MAAM,AAAI,UAAU,qCAErB,GAAI,AAAqB,KAArB,EAAM,OAAA,CAAQ,KACjB,MAAM,AAAI,UAAU,kDAErB,IAAI,EAAO,EAAS,GAAA,CAAI,IAAQ,CAAE,WAAY,CAAC,CAAC,CAC5C,AAAiC,MAAA,IAA1B,EAAK,UAAU,CAAC,EAAK,CAC/B,EAAa,EAAK,EAAM,IAEnB,MAAM,OAAA,CAAQ,EAAK,UAAU,CAAC,EAAK,GACvC,CAAA,EAAK,UAAU,CAAC,EAAK,CAAG,CAAE,EAAK,UAAU,CAAC,EAAK,CAAE,AAAA,EAGjD,EADG,AAAqB,KAArB,EAAM,OAAA,CAAQ,KACT,EAAM,KAAA,CAAM,KAEZ,CAAE,EAAO,CAElB,EAAK,UAAU,CAAC,EAAK,CAAG,EAAK,UAAU,CAAC,EAAK,CAAC,MAAA,CAAO,GACrD,EAAS,GAAA,CAAI,EAAK,GAEpB,EF7PC,gBE+P8B,CAAC,EAAK,KACpC,IAAI,EAAO,EAAS,GAAA,CAAI,IAAQ,CAAE,WAAY,CAAC,CAAC,CACV,MAAA,IAA1B,EAAK,UAAU,CAAC,EAAK,GAChC,OAAO,EAAK,UAAU,CAAC,EAAK,CAC5B,EAAS,GAAA,CAAI,EAAK,GAEpB,EFpQC,cAAe,EACf,cAAe,EACf,oBEyQkC,AAAC,GAC5B,OAAO,OAAA,CAAQ,EAAc,IAClC,GAAA,CAAI,CAAC,CAAC,EAAM,EAAU,IAClB,MAAM,OAAA,CAAQ,IACjB,CAAA,EAAY,EAAU,IAAA,CAAK,IAD5B,EAGO,EAAK,KAAK,EAAU,MAE3B,IAAA,CAAK,KFhRP,OE8IqB,AAAC,GACT,AAAO,OAAP,GAAiB,AAAoB,KAAA,IAAb,EAAE,MAAA,EAA0B,EAAE,MAAnE,AF9ID,C,C","sources":["<anon>","src/browser.mjs","src/lib/Null.mjs","src/lib/functions.mjs","src/lib/fast-parse.mjs"],"sourcesContent":["(() => {\n//import crypto from 'node:crypto' // remove this line before running parcel build\n// keep reference to original JSON.stringify, in case someone monkeypatches it\nconst $8e1f6d594b3b3e33$var$jsonStringify = JSON.stringify;\nconst $8e1f6d594b3b3e33$export$fac44ee5b035f737 = (value, replacer = null, space = \"\")=>{\n    let references = new WeakMap();\n    let indent = \"\";\n    let gap = \"\";\n    if (typeof space === \"number\") indent += \" \".repeat(space);\n    else if (typeof space === \"string\") indent = space;\n    if (replacer && typeof replacer !== \"function\" && (typeof replacer !== \"object\" || typeof replacer.length !== \"number\")) throw new Error(\"JSONTag.stringify\");\n    const encodeProperties = (obj)=>{\n        let mind = gap;\n        gap += indent;\n        let gapstart = \"\";\n        let gapend = \"\";\n        let keys = Object.keys(obj);\n        if (Array.isArray(replacer)) keys = keys.filter((key)=>replacer.indexOf(key) !== -1);\n        if (gap) {\n            gapstart = \"\\n\" + gap;\n            gapend = \"\\n\" + mind;\n        }\n        let result = gapstart + keys.map((prop)=>{\n            return '\"' + prop + '\":' + str(prop, obj);\n        }).join(\",\" + gapstart) + gapend;\n        gap = mind;\n        return result;\n    };\n    const encodeEntries = (arr)=>{\n        let mind = gap;\n        gap += indent;\n        let gapstart = \"\";\n        let gapend = \"\";\n        if (gap) {\n            gapstart = \"\\n\" + gap;\n            gapend = \"\\n\" + mind;\n        }\n        let result = gapstart + arr.map((value, index)=>{\n            return str(index, arr);\n        }).join(\",\" + gapstart) + gapend;\n        gap = mind;\n        return result;\n    };\n    const str = (key, holder)=>{\n        let value = holder[key];\n        if (typeof replacer === \"function\" && key !== \"\") value = replacer.call(holder, key, value);\n        if (typeof value === \"object\" && references.has(value)) {\n            let id = $8e1f6d594b3b3e33$export$735ee1799fd02602(value, \"id\");\n            if (!id) id = $8e1f6d594b3b3e33$var$createId(value);\n            return '<link>\"' + id + '\"';\n        }\n        if (typeof value === \"undefined\" || value === null) return \"null\";\n        if (typeof value === \"object\") references.set(value, true);\n        if (typeof value.toJSONTag == \"function\") return value.toJSONTag(references, replacer, space);\n        else if (Array.isArray(value)) return $8e1f6d594b3b3e33$export$e8bbf06ddab4542c(value) + \"[\" + encodeEntries(value) + \"]\";\n        else if (value instanceof Object) switch($8e1f6d594b3b3e33$export$e2b5c5db9e2009fd(value)){\n            case \"string\":\n            case \"decimal\":\n            case \"money\":\n            case \"link\":\n            case \"text\":\n            case \"blob\":\n            case \"color\":\n            case \"email\":\n            case \"hash\":\n            case \"duration\":\n            case \"phone\":\n            case \"url\":\n            case \"uuid\":\n            case \"date\":\n            case \"time\":\n            case \"datetime\":\n                return $8e1f6d594b3b3e33$export$e8bbf06ddab4542c(value) + $8e1f6d594b3b3e33$var$jsonStringify(\"\" + value, replacer, space);\n            case \"int\":\n            case \"uint\":\n            case \"int8\":\n            case \"uint8\":\n            case \"int16\":\n            case \"uint16\":\n            case \"int32\":\n            case \"uint32\":\n            case \"int64\":\n            case \"uint64\":\n            case \"float\":\n            case \"float32\":\n            case \"float64\":\n            case \"timestamp\":\n            case \"number\":\n            case \"boolean\":\n                return $8e1f6d594b3b3e33$export$e8bbf06ddab4542c(value) + $8e1f6d594b3b3e33$var$jsonStringify(value, replacer, space);\n            case \"array\":\n                let entries = encodeEntries(value) // calculate children first so parent references can add id attribute\n                ;\n                return $8e1f6d594b3b3e33$export$e8bbf06ddab4542c(value) + \"[\" + entries + \"}\";\n            case \"object\":\n                if (value === null) return \"null\";\n                let props = encodeProperties(value); // calculate children first so parent references can add id attribute\n                return $8e1f6d594b3b3e33$export$e8bbf06ddab4542c(value) + \"{\" + props + \"}\";\n            default:\n                throw new Error($8e1f6d594b3b3e33$export$e2b5c5db9e2009fd(value) + \" type not yet implemented\");\n        }\n        else return $8e1f6d594b3b3e33$var$jsonStringify(value, replacer, space);\n    };\n    return str(\"\", {\n        \"\": value\n    });\n};\nfunction $8e1f6d594b3b3e33$var$createId(value) {\n    if (typeof crypto === \"undefined\") {\n        console.error(\"JSONTag: cannot generate uuid, crypto support is disabled.\");\n        throw new Error(\"Cannot create links to resolve references, crypto support is disabled\");\n    }\n    if (typeof crypto.randomUUID === \"function\") var id = crypto.randomUUID();\n    else var id = \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, (c)=>(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n    $8e1f6d594b3b3e33$export$9fec4d97f1922e0b(value, \"id\", id);\n    return id;\n}\nconst $8e1f6d594b3b3e33$export$630801d484da15df = (v)=>{\n    let result = v === null || typeof v.isNull !== \"undefined\" && v.isNull;\n    return result;\n};\nconst $8e1f6d594b3b3e33$var$typeInfo = new WeakMap();\nconst $8e1f6d594b3b3e33$export$e2b5c5db9e2009fd = (obj)=>{\n    if ($8e1f6d594b3b3e33$var$typeInfo.has(obj)) {\n        let info = $8e1f6d594b3b3e33$var$typeInfo.get(obj);\n        if (info.type) return info.type;\n    }\n    if (Array.isArray(obj)) return \"array\";\n    return typeof obj;\n};\nconst $8e1f6d594b3b3e33$export$b14ad400b1d09e0f = [\n    \"object\",\n    \"array\",\n    \"string\",\n    \"number\",\n    \"boolean\",\n    \"decimal\",\n    \"money\",\n    \"uuid\",\n    \"url\",\n    \"link\",\n    \"date\",\n    \"time\",\n    \"datetime\",\n    \"duration\",\n    \"timestamp\",\n    \"text\",\n    \"blob\",\n    \"color\",\n    \"email\",\n    \"hash\",\n    \"phone\",\n    \"int\",\n    \"int8\",\n    \"int16\",\n    \"int32\",\n    \"int64\",\n    \"uint\",\n    \"uint8\",\n    \"uint16\",\n    \"uint32\",\n    \"uint64\",\n    \"float\",\n    \"float32\",\n    \"float64\"\n];\nconst $8e1f6d594b3b3e33$export$1bf7f05044e9c5cb = (obj, type)=>{\n    if (typeof obj !== \"object\") throw new TypeError(\"JSONTag can only add attributes to objects, convert literals to objects first\");\n    let info = {};\n    if ($8e1f6d594b3b3e33$var$typeInfo.has(obj)) info = $8e1f6d594b3b3e33$var$typeInfo.get(obj);\n    if (!$8e1f6d594b3b3e33$export$b14ad400b1d09e0f.includes(type)) throw new TypeError(\"unknown type \" + type);\n    info.type = type;\n    if (typeof info.attributes === \"undefined\") info.attributes = {};\n    $8e1f6d594b3b3e33$var$typeInfo.set(obj, info);\n};\nconst $8e1f6d594b3b3e33$export$9fec4d97f1922e0b = (obj, attr, value)=>{\n    if (typeof obj !== \"object\") throw new TypeError(\"JSONTag can only add attributes to objects, convert literals to objects first\");\n    if (Array.isArray(value)) value = value.join(\" \");\n    if (typeof value !== \"string\") throw new TypeError(\"attribute values must be a string or an array of strings\");\n    if (value.indexOf('\"') !== -1) throw new TypeError('attribute values must not contain \" character');\n    if (value.indexOf(\" \") !== -1) value = value.split(\" \");\n    let info = $8e1f6d594b3b3e33$var$typeInfo.get(obj) || {\n        attributes: {}\n    };\n    info.attributes[attr] = value;\n    $8e1f6d594b3b3e33$var$typeInfo.set(obj, info);\n};\nconst $8e1f6d594b3b3e33$export$74da2cba014bdc09 = (obj, attributes)=>{\n    if (typeof obj !== \"object\") throw new TypeError(\"JSONTag can only add attributes to objects, convert literals to objects first\");\n    if (typeof attributes !== \"object\") throw new TypeError(\"attributes param must be an object\");\n    Object.keys(attributes).forEach((key)=>{\n        $8e1f6d594b3b3e33$export$9fec4d97f1922e0b(obj, key, attributes[key]);\n    });\n};\nconst $8e1f6d594b3b3e33$export$735ee1799fd02602 = (obj, attr)=>{\n    let info = $8e1f6d594b3b3e33$var$typeInfo.get(obj) || {\n        attributes: {}\n    };\n    return info.attributes[attr];\n};\nconst $8e1f6d594b3b3e33$export$5dcb5c23b6ba980a = (obj, attr, value)=>{\n    if (typeof value !== \"string\") throw new TypeError(\"attribute values must be a string\");\n    if (value.indexOf('\"') !== -1) throw new TypeError('attribute values must not contain \" characters');\n    let info = $8e1f6d594b3b3e33$var$typeInfo.get(obj) || {\n        attributes: {}\n    };\n    if (typeof info.attributes[attr] === \"undefined\") $8e1f6d594b3b3e33$export$9fec4d97f1922e0b(obj, attr, value);\n    else {\n        if (!Array.isArray(info.attributes[attr])) info.attributes[attr] = [\n            info.attributes[attr]\n        ];\n        if (value.indexOf(\" \") !== -1) value = value.split(\" \");\n        else value = [\n            value\n        ];\n        info.attributes[attr] = info.attributes[attr].concat(value);\n        $8e1f6d594b3b3e33$var$typeInfo.set(obj, info);\n    }\n};\nconst $8e1f6d594b3b3e33$export$6399f3bb52316b2c = (obj, attr)=>{\n    let info = $8e1f6d594b3b3e33$var$typeInfo.get(obj) || {\n        attributes: {}\n    };\n    if (typeof info.attributes[attr] !== \"undefined\") {\n        delete info.attributes[attr];\n        $8e1f6d594b3b3e33$var$typeInfo.set(obj, info);\n    }\n};\nconst $8e1f6d594b3b3e33$export$fe94072fee8a6976 = (obj)=>{\n    let info = $8e1f6d594b3b3e33$var$typeInfo.get(obj) || {\n        attributes: {}\n    };\n    return Object.assign({}, info.attributes);\n};\nconst $8e1f6d594b3b3e33$export$f4cc4d0befd5def7 = (obj)=>{\n    return Object.entries($8e1f6d594b3b3e33$export$fe94072fee8a6976(obj)).map(([attr, attrValue])=>{\n        if (Array.isArray(attrValue)) attrValue = attrValue.join(\" \");\n        return attr + '=\"' + attrValue + '\"';\n    }).join(\" \");\n};\nconst $8e1f6d594b3b3e33$export$e8bbf06ddab4542c = (obj)=>{\n    let type = $8e1f6d594b3b3e33$export$e2b5c5db9e2009fd(obj);\n    let attributes = $8e1f6d594b3b3e33$export$fe94072fee8a6976(obj);\n    let attributesString = Object.entries(attributes).map(([attr, attrValue])=>{\n        if (Array.isArray(attrValue)) attrValue = attrValue.join(\" \");\n        return attr + '=\"' + attrValue + '\"';\n    }).join(\" \");\n    if (!attributesString) {\n        if ([\n            \"object\",\n            \"array\",\n            \"string\",\n            \"number\",\n            \"boolean\"\n        ].indexOf(type) !== -1) type = \"\";\n    }\n    if (type || attributesString) return \"<\" + [\n        type,\n        attributesString\n    ].filter(Boolean).join(\" \") + \">\";\n    else return \"\";\n};\nconst $8e1f6d594b3b3e33$export$9cd59f9826255e47 = (obj)=>{\n    let type = $8e1f6d594b3b3e33$export$e2b5c5db9e2009fd(obj);\n    let attributes = $8e1f6d594b3b3e33$export$fe94072fee8a6976(obj);\n    let clone = Object.assign({}, obj);\n    if (type && type !== \"object\") $8e1f6d594b3b3e33$export$1bf7f05044e9c5cb(clone, type);\n    if (attributes) $8e1f6d594b3b3e33$export$74da2cba014bdc09(clone, attributes);\n    return clone;\n};\n\n\nclass $5bb19b6c90f503ab$var$ExtendableProxy {\n    constructor(){\n        return new Proxy(this, {\n            get: (target, name)=>{\n                if (typeof target[name] !== \"undefined\") return target[name];\n                if (name == \"then\") return undefined;\n                console.error(\"Attempting to get from Null\", name, typeof name, JSON.stringify(name));\n                throw new Error(\"Attempting to get \" + name + \" from Null\");\n            },\n            set: (target, name, newValue)=>{\n                console.error(\"Attempting to set \" + name + \" in Null to\", newValue);\n                throw new Error(\"Attempting to set \" + name + \" in Null\");\n            }\n        });\n    }\n}\nclass $5bb19b6c90f503ab$export$2e2bcd8739ae039 extends $5bb19b6c90f503ab$var$ExtendableProxy {\n    isNull = true;\n    toString() {\n        return \"\";\n    }\n    toJSON() {\n        return \"null\";\n    }\n    toJSONTag() {\n        let type = (0, $8e1f6d594b3b3e33$export$e8bbf06ddab4542c)(this);\n        return type + this.toJSON();\n    }\n}\n\n\n\n// non streaming handbuilt jsontag parser\n\n\nfunction $17b808af512fadd0$export$2e2bcd8739ae039(input, reviver, meta) {\n    if (!meta) meta = {};\n    if (!meta.index) meta.index = {};\n    if (!meta.index.id) meta.index.id = new Map();\n    if (!meta.unresolved) meta.unresolved = new Map();\n    if (!meta.baseURL) meta.baseURL = \"http://localhost/\";\n    let at, ch, value, result;\n    let escapee = {\n        '\"': '\"',\n        \"\\\\\": \"\\\\\",\n        \"/\": \"/\",\n        b: \"\\b\",\n        f: \"\\f\",\n        n: \"\\n\",\n        r: \"\\r\",\n        t: \"\t\"\n    };\n    let error = function(m) {\n        throw {\n            name: \"SyntaxError\",\n            message: m,\n            at: at,\n            input: input\n        };\n    };\n    let next = function(c) {\n        if (c && c !== ch) error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        ch = input.charAt(at);\n        at += 1;\n        return ch;\n    };\n    let number = function(tagName) {\n        let numString = \"\";\n        if (ch === \"-\") {\n            numString = \"-\";\n            next(\"-\");\n        }\n        while(ch >= \"0\" && ch <= \"9\"){\n            numString += ch;\n            next();\n        }\n        if (ch === \".\") {\n            numString += \".\";\n            while(next() && ch >= \"0\" && ch <= \"9\")numString += ch;\n        }\n        if (ch === \"e\" || ch === \"E\") {\n            numString += ch;\n            next();\n            if (ch === \"-\" || ch === \"+\") {\n                numString += ch;\n                next();\n            }\n            while(ch >= \"0\" && ch <= \"9\"){\n                numString += ch;\n                next();\n            }\n        }\n        let result = new Number(numString).valueOf();\n        if (tagName) switch(tagName){\n            case \"int\":\n                isInt(numString);\n                break;\n            case \"uint\":\n                isInt(numString, [\n                    0,\n                    Infinity\n                ]);\n                break;\n            case \"int8\":\n                isInt(numString, [\n                    -128,\n                    127\n                ]);\n                break;\n            case \"uint8\":\n                isInt(numString, [\n                    0,\n                    255\n                ]);\n                break;\n            case \"int16\":\n                isInt(numString, [\n                    -32768,\n                    32767\n                ]);\n                break;\n            case \"uint16\":\n                isInt(numString, [\n                    0,\n                    65535\n                ]);\n                break;\n            case \"int32\":\n                isInt(numString, [\n                    -2147483648,\n                    2147483647\n                ]);\n                break;\n            case \"uint32\":\n                isInt(numString, [\n                    0,\n                    4294967295\n                ]);\n                break;\n            case \"timestamp\":\n            case \"int64\":\n                isInt(numString, [\n                    -9223372036854776000,\n                    9223372036854775807\n                ]);\n                break;\n            case \"uint64\":\n                isInt(numString, [\n                    0,\n                    18446744073709551615\n                ]);\n                break;\n            case \"float\":\n                isFloat(numString);\n                break;\n            case \"float32\":\n                isFloat(numString, [\n                    -340000000000000000000000000000000000000,\n                    3.4e+38\n                ]);\n                break;\n            case \"float64\":\n                isFloat(numString, [\n                    -170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,\n                    170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n                ]);\n                break;\n            case \"number\":\n                break;\n            default:\n                isTypeError(tagName);\n                break;\n        }\n        return result;\n    };\n    let isTypeError = function(type) {\n        error(\"Syntax error, expected \" + type);\n    };\n    const regexes = {\n        color: /^(rgb|hsl)a?\\((\\d+%?(deg|rad|grad|turn)?[,\\s]+){2,3}[\\s\\/]*[\\d\\.]+%?\\)$/i,\n        email: /^[A-Za-z0-9_!#$%&'*+\\/=?`{|}~^.-]+@[A-Za-z0-9.-]+$/,\n        uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n        decimal: /^\\d*\\.?\\d*$/,\n        money: /^[A-Z]+\\$\\d*\\.?\\d*$/,\n        duration: /^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$/,\n        phone: /^[+]?(?:\\(\\d+(?:\\.\\d+)?\\)|\\d+(?:\\.\\d+)?)(?:[ -]?(?:\\(\\d+(?:\\.\\d+)?\\)|\\d+(?:\\.\\d+)?))*(?:[ ]?(?:x|ext)\\.?[ ]?\\d{1,5})?$/,\n        time: /^(\\d{2}):(\\d{2})(?::(\\d{2}(?:\\.\\d+)?))?$/,\n        date: /^-?[1-9][0-9]{3,}-([0][1-9]|[1][0-2])-([1-2][0-9]|[0][1-9]|[3][0-1])$/,\n        datetime: /^(\\d{4,})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2})(?::(\\d{2}(?:\\.\\d+)?))?$/,\n        range: /^\\[-?(\\d+\\.)?\\d+\\,-?(\\d+\\.)?\\d+\\]$/\n    };\n    let isFloat = function(float, range) {\n        let test = new Number(parseFloat(float));\n        let str = test.toString();\n        if (float !== str) error(\"Syntax Error: expected float value\");\n        if (range) {\n            if (typeof range[0] === \"number\") {\n                if (test < range[0]) error(\"Syntax Error: float value out of range\");\n            }\n            if (typeof range[1] === \"number\") {\n                if (test > range[1]) error(\"Syntax Error: float value out of range\");\n            }\n        }\n    };\n    let isInt = function(int, range) {\n        let test = new Number(parseInt(int));\n        let str = test.toString();\n        if (int !== str) error(\"Syntax Error: expected integer value\");\n        if (range) {\n            if (typeof range[0] === \"number\") {\n                if (test < range[0]) error(\"Syntax Error: integer value out of range\");\n            }\n            if (typeof range[1] === \"number\") {\n                if (test > range[1]) error(\"Syntax Error: integer value out of range\");\n            }\n        }\n    };\n    let isColor = function(color) {\n        let result = false;\n        if (color.charAt(0) === \"#\") {\n            color = color.substring(1);\n            result = [\n                3,\n                4,\n                6,\n                8\n            ].indexOf(color.length) > -1 && !isNaN(parseInt(color, 16));\n            if (result.toString(16) !== color) isTypeError(\"color\");\n        } else result = regexes.color.test(color);\n        if (!result) isTypeError(\"color\");\n        return true;\n    };\n    let isEmail = function(email) {\n        let result = regexes.email.test(email);\n        if (!result) isTypeError(\"email\");\n        return true;\n    };\n    let isUuid = function(uuid) {\n        let result = regexes.uuid.test(uuid);\n        if (!result) isTypeError(\"uuid\");\n        return true;\n    };\n    let isDecimal = function(decimal) {\n        let result = regexes.decimal.test(decimal);\n        if (!result) isTypeError(\"decimal\");\n        return true;\n    };\n    let isMoney = function(money) {\n        let result = regexes.money.test(money);\n        if (!result) isTypeError(\"money\");\n        return true;\n    };\n    let isUrl = function(url) {\n        try {\n            return Boolean(new URL(url, meta.baseURL));\n        } catch (e) {\n            console.log(e);\n            isTypeError(\"url\");\n        }\n    };\n    let isDuration = function(duration) {\n        let result = regexes.duration.test(duration);\n        if (!result) isTypeError(\"duration\");\n        return true;\n    };\n    let isPhone = function(phone) {\n        let result = regexes.phone.test(phone);\n        if (!result) isTypeError(\"phone\");\n        return true;\n    };\n    let isRange = function(range) {\n        let result = regexes.range.test(range);\n        if (!result) isTypeError(\"range\");\n        return true;\n    };\n    let isTime = function(time) {\n        let result = regexes.time.test(time);\n        if (!result) isTypeError(\"time\");\n        return true;\n    };\n    let isDate = function(date) {\n        let result = regexes.date.test(date);\n        if (!result) isTypeError(\"date\");\n        return true;\n    };\n    let isDatetime = function(datetime) {\n        let result = regexes.datetime.test(datetime);\n        if (!result) isTypeError(\"datetime\");\n        return true;\n    };\n    let checkStringType = function(tagName, value) {\n        if (!tagName) return;\n        switch(tagName){\n            case \"object\":\n            case \"array\":\n            case \"boolean\":\n            case \"int8\":\n            case \"uint8\":\n            case \"int16\":\n            case \"uint16\":\n            case \"int32\":\n            case \"uint32\":\n            case \"int64\":\n            case \"uint64\":\n            case \"int\":\n            case \"uint\":\n            case \"float32\":\n            case \"float64\":\n            case \"float\":\n            case \"timestamp\":\n                isTypeError(tagName);\n                break;\n            case \"uuid\":\n                return isUuid(value);\n            case \"decimal\":\n                return isDecimal(value);\n            case \"money\":\n                return isMoney(value);\n            case \"url\":\n                return isUrl(value);\n            case \"link\":\n            case \"string\":\n            case \"text\":\n            case \"blob\":\n            case \"hash\":\n                //anything goes\n                return true;\n            case \"color\":\n                return isColor(value);\n            case \"email\":\n                return isEmail(value);\n            case \"duration\":\n                return isDuration(value);\n            case \"phone\":\n                return isPhone(value);\n            case \"range\":\n                return isRange(value);\n            case \"time\":\n                return isTime(value);\n            case \"date\":\n                return isDate(value);\n            case \"datetime\":\n                return isDatetime(value);\n        }\n        error(\"Syntax error: unknown tagName \" + tagName);\n    };\n    let string = function(tagName) {\n        let value = \"\", hex, i, uffff;\n        if (ch !== '\"') error(\"Syntax Error\");\n        next('\"');\n        while(ch){\n            if (ch === '\"') {\n                next();\n                checkStringType(tagName, value);\n                return value;\n            }\n            if (ch === \"\\\\\") {\n                next();\n                if (ch === \"u\") {\n                    uffff = 0;\n                    for(i = 0; i < 4; i++){\n                        hex = parseInt(next(), 16);\n                        if (!isFinite(hex)) break;\n                        uffff = uffff * 16 + hex;\n                    }\n                    value += String.fromCharCode(uffff);\n                    next();\n                } else if (typeof escapee[ch] === \"string\") {\n                    value += escapee[ch];\n                    next();\n                } else break;\n            } else {\n                value += ch;\n                next();\n            }\n        }\n        error(\"Syntax error: incomplete string\");\n    };\n    let tag = function() {\n        let key, val, tagOb = {\n            attributes: {}\n        };\n        if (ch !== \"<\") error(\"Syntax Error\");\n        next(\"<\");\n        key = word();\n        if (!key) error(\"Syntax Error: expected tag name\");\n        tagOb.tagName = key;\n        whitespace();\n        while(ch){\n            if (ch === \">\") {\n                next(\">\");\n                return tagOb;\n            }\n            key = word();\n            if (!key) error(\"Syntax Error: expected attribute name\");\n            whitespace();\n            next(\"=\");\n            whitespace();\n            val = string();\n            tagOb.attributes[key] = val;\n            whitespace();\n        }\n        error(\"Syntax Error: unexpected end of input\");\n    };\n    let whitespace = function() {\n        while(ch)switch(ch){\n            case \" \":\n            case \"\t\":\n            case \"\\r\":\n            case \"\\n\":\n                next();\n                break;\n            default:\n                return;\n        }\n    };\n    let word = function() {\n        //[a-z][a-z0-9_]*\n        let val = \"\";\n        if (ch >= \"a\" && ch <= \"z\" || ch >= \"A\" && ch <= \"Z\") {\n            val += ch;\n            next();\n        } else error(\"Syntax Error: expected word\");\n        while(ch >= \"a\" && ch <= \"z\" || ch >= \"A\" && ch <= \"Z\" || ch >= \"0\" && ch <= \"9\" || ch == \"_\"){\n            val += ch;\n            next();\n        }\n        return val;\n    };\n    let boolOrNull = function(tagName) {\n        let w = word();\n        if (!w || typeof w !== \"string\") error('Syntax error: expected boolean or null, got \"' + w + '\"');\n        switch(w.toLowerCase()){\n            case \"true\":\n                if (tagName && tagName !== \"boolean\") isTypeError(tagName);\n                return true;\n            case \"false\":\n                if (tagName && tagName !== \"boolean\") isTypeError(tagName);\n                return false;\n            case \"null\":\n                return null;\n            default:\n                error('Syntax error: expected boolean or null, got \"' + w + '\"');\n                break;\n        }\n    };\n    let checkUnresolved = function(item, object, key) {\n        if ($8e1f6d594b3b3e33$export$e2b5c5db9e2009fd(item) === \"link\") {\n            let link = \"\" + item;\n            let links = meta.unresolved.get(link);\n            if (typeof links === \"undefined\") {\n                meta.unresolved.set(link, []);\n                links = meta.unresolved.get(link);\n            }\n            let count = links.push({\n                src: new WeakRef(object),\n                key: key\n            });\n        }\n    };\n    let array = function() {\n        let item, array = [];\n        if (ch !== \"[\") error(\"Syntax error\");\n        next(\"[\");\n        whitespace();\n        if (ch === \"]\") {\n            next(\"]\");\n            return array;\n        }\n        while(ch){\n            item = value();\n            checkUnresolved(item, array, array.length);\n            array.push(item);\n            whitespace();\n            if (ch === \"]\") {\n                next(\"]\");\n                return array;\n            }\n            next(\",\");\n            whitespace();\n        }\n        error(\"Input stopped early\");\n    };\n    let object = function() {\n        let key, val, object = {};\n        if (ch !== \"{\") error(\"Syntax Error\");\n        next(\"{\");\n        whitespace();\n        if (ch === \"}\") {\n            next(\"}\");\n            return object;\n        }\n        while(ch){\n            key = string();\n            if (key === \"__proto__\") error(\"Attempt at prototype pollution\");\n            whitespace();\n            next(\":\");\n            val = value();\n            object[key] = val;\n            checkUnresolved(val, object, key);\n            whitespace();\n            if (ch === \"}\") {\n                next(\"}\");\n                return object;\n            }\n            next(\",\");\n            whitespace();\n        }\n        error(\"Input stopped early\");\n    };\n    value = function() {\n        let tagOb, result, tagName;\n        whitespace();\n        if (ch === \"<\") {\n            tagOb = tag();\n            tagName = tagOb.tagName;\n            whitespace();\n        }\n        switch(ch){\n            case \"{\":\n                if (tagName && tagName !== \"object\") isTypeError(tagName);\n                result = object();\n                break;\n            case \"[\":\n                if (tagName && tagName !== \"array\") isTypeError(tagName);\n                result = array();\n                break;\n            case '\"':\n                result = string(tagName);\n                break;\n            case \"-\":\n                result = number(tagName);\n                break;\n            default:\n                if (ch >= \"0\" && ch <= \"9\") result = number(tagName);\n                else result = boolOrNull(tagName);\n                break;\n        }\n        if (tagOb) {\n            if (result === null) result = new (0, $5bb19b6c90f503ab$export$2e2bcd8739ae039)();\n            if (typeof result !== \"object\") switch(typeof result){\n                case \"string\":\n                    result = new String(result);\n                    break;\n                case \"number\":\n                    result = new Number(result);\n                    break;\n                case \"boolean\":\n                    result = new Boolean(result);\n                    break;\n                default:\n                    error(\"Syntax Error: unexpected type \" + typeof result);\n                    break;\n            }\n            if (tagOb.tagName) $8e1f6d594b3b3e33$export$1bf7f05044e9c5cb(result, tagOb.tagName);\n            if (tagOb.attributes) {\n                $8e1f6d594b3b3e33$export$74da2cba014bdc09(result, tagOb.attributes);\n                if (tagOb.attributes?.id) meta.index.id.set(tagOb.attributes.id, new WeakRef(result));\n            }\n        }\n        return result;\n    };\n    at = 0;\n    ch = \" \";\n    result = value();\n    whitespace();\n    if (ch) error(\"Syntax error\");\n    if (typeof reviver === \"function\") {\n        function walk(holder, key) {\n            var k;\n            var v;\n            var value = holder[key];\n            if (value !== null && typeof value === \"object\" && !(value instanceof String || value instanceof Number || value instanceof Boolean)) {\n                for(k in value)if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined && (typeof value[k] === \"undefined\" || value[k] !== v)) {\n                        value[k] = v;\n                        if ($8e1f6d594b3b3e33$export$e2b5c5db9e2009fd(v) === \"link\") checkUnresolved(v, value, k);\n                    } else if (v === undefined) delete value[k];\n                }\n            }\n            return reviver.call(holder, key, value, meta);\n        }\n        walk({\n            \"\": result\n        }, \"\");\n    }\n    let replaceLink = function(u, value) {\n        if (typeof value !== \"undefined\") {\n            let src = u.src.deref();\n            if (typeof src !== \"undefined\" && $8e1f6d594b3b3e33$export$e2b5c5db9e2009fd(src[u.key]) === \"link\") {\n                src[u.key] = value;\n                return true;\n            }\n        }\n    };\n    if (meta.index.id.size > meta.unresolved.size) meta.unresolved.forEach((links, id)=>{\n        let value = meta.index.id.get(id)?.deref();\n        if (value !== undefined) links.forEach((u, i)=>{\n            if (replaceLink(u, value)) delete links[i];\n        });\n    });\n    else meta.index.id.forEach((ref, id)=>{\n        let value = ref.deref();\n        let links = meta.unresolved.get(id);\n        if (value !== undefined && typeof links !== \"undefined\") {\n            links.forEach((u, i)=>{\n                replaceLink(u, value);\n            });\n            meta.unresolved.delete(id);\n        }\n    });\n    return result;\n}\n\n\nwindow.JSONTag = {\n    Null: (0, $5bb19b6c90f503ab$export$2e2bcd8739ae039),\n    stringify: $8e1f6d594b3b3e33$export$fac44ee5b035f737,\n    parse: (0, $17b808af512fadd0$export$2e2bcd8739ae039),\n    getType: $8e1f6d594b3b3e33$export$e2b5c5db9e2009fd,\n    setType: $8e1f6d594b3b3e33$export$1bf7f05044e9c5cb,\n    getTypeString: $8e1f6d594b3b3e33$export$e8bbf06ddab4542c,\n    setAttribute: $8e1f6d594b3b3e33$export$9fec4d97f1922e0b,\n    getAttribute: $8e1f6d594b3b3e33$export$735ee1799fd02602,\n    addAttribute: $8e1f6d594b3b3e33$export$5dcb5c23b6ba980a,\n    removeAttribute: $8e1f6d594b3b3e33$export$6399f3bb52316b2c,\n    getAttributes: $8e1f6d594b3b3e33$export$fe94072fee8a6976,\n    setAttributes: $8e1f6d594b3b3e33$export$74da2cba014bdc09,\n    getAttributesString: $8e1f6d594b3b3e33$export$f4cc4d0befd5def7,\n    isNull: $8e1f6d594b3b3e33$export$630801d484da15df\n};\n\n})();\n//# sourceMappingURL=browser.js.map\n","import Null from './lib/Null.mjs'\nimport * as attr from './lib/functions.mjs'\nimport parse from './lib/fast-parse.mjs'\n\nwindow.JSONTag = {\n\tNull: Null,\n\tstringify: attr.stringify,\n\tparse: parse,\n\tgetType: attr.getType,\n\tsetType: attr.setType,\n\tgetTypeString: attr.getTypeString,\n\tsetAttribute: attr.setAttribute,\n\tgetAttribute: attr.getAttribute,\n\taddAttribute: attr.addAttribute,\n\tremoveAttribute: attr.removeAttribute,\n\tgetAttributes: attr.getAttributes,\n\tsetAttributes: attr.setAttributes,\n\tgetAttributesString: attr.getAttributesString,\n\tisNull: attr.isNull,\n}","import { getTypeString } from \"./functions.mjs\"\n\nclass ExtendableProxy {\n\tconstructor()\n\t{\n\t\treturn new Proxy(this,{\n\t\t\tget: (target,name) => {\n\t\t\t\tif (typeof target[name] !== 'undefined') {\n\t\t\t\t\treturn target[name]\n\t\t\t\t}\n\t\t\t\tif (name == 'then') {\n\t\t\t\t\treturn undefined\n\t\t\t\t}\n\t\t\t\tconsole.error('Attempting to get from Null', name, typeof name, JSON.stringify(name))\n\t\t\t\tthrow new Error('Attempting to get '+name+' from Null')\n\t\t\t},\n\t\t\tset: (target,name,newValue) => {\n\t\t\t\tconsole.error('Attempting to set '+name+' in Null to',newValue)\n\t\t\t\tthrow new Error('Attempting to set '+name+' in Null')\t\n\t\t\t}\n\t\t})\n\t}\n\n}\n\nexport default class Null extends ExtendableProxy {\n\n\tisNull = true;\n\n\ttoString()\n\t{\n\t\treturn ''\n\t}\n\n\ttoJSON()\n\t{\n\t\treturn 'null'\n\t}\n\n\ttoJSONTag()\n\t{\n\t\tlet type = getTypeString(this)\n\t\treturn type+this.toJSON()\n\t}\n\n}","//import crypto from 'node:crypto' // remove this line before running parcel build\n\n// keep reference to original JSON.stringify, in case someone monkeypatches it\nconst jsonStringify = JSON.stringify\n\nexport const stringify = (value, replacer=null, space=\"\") => {\n\n\tlet references = new WeakMap()\n\n\tlet indent = \"\"\n\tlet gap = \"\"\n\n\tif (typeof space === \"number\") {\n\t\tindent += \" \".repeat(space)\n\t} else if (typeof space === \"string\") {\n\t\tindent = space\n\t}\n\n\tif (replacer && typeof replacer !== \"function\" && (\n        typeof replacer !== \"object\"\n        || typeof replacer.length !== \"number\"\n    )) {\n        throw new Error(\"JSONTag.stringify\");\n    }\n\n\tconst encodeProperties = (obj) => {\n\t\tlet mind = gap\n\t\tgap += indent\n\t\tlet gapstart = \"\"\n\t\tlet gapend = \"\"\n\t\tlet keys = Object.keys(obj)\n\t\tif (Array.isArray(replacer)) {\n\t\t\tkeys = keys.filter(key => replacer.indexOf(key)!==-1)\n\t\t} \n\t\tif (gap) {\n\t\t\tgapstart =\"\\n\"+gap\n\t\t\tgapend = \"\\n\"+mind\n\t\t}\n\t\tlet result = gapstart+keys.map(prop => {\n\t\t\treturn '\"'+prop+'\":'+str(prop, obj)\n\t\t}).join(\",\"+gapstart)+gapend\n\t\tgap = mind\n\t\treturn result\n\t}\n\n\tconst encodeEntries = (arr) => {\n\t\tlet mind = gap\n\t\tgap += indent\n\t\tlet gapstart = \"\"\n\t\tlet gapend = \"\"\n\t\tif (gap) {\n\t\t\tgapstart = \"\\n\"+gap\n\t\t\tgapend = \"\\n\"+mind\n\t\t}\n\t\tlet result = gapstart+arr.map((value,index) => {\n\t\t\treturn str(index, arr)\n\t\t}).join(\",\"+gapstart)+gapend\n\t\tgap = mind\n\t\treturn result\n\t}\n\n\tconst str = (key, holder) => {\n\t\tlet value = holder[key]\n\t\tif (typeof replacer === 'function' && key!=='') {\n\t\t\tvalue = replacer.call(holder, key, value)\n\t\t}\n\t\tif (typeof value === 'object' && references.has(value)) {\n\t\t\tlet id = getAttribute(value, 'id')\n\t\t\tif (!id) {\n\t\t\t\tid = createId(value)\n\t\t\t}\n\t\t\treturn '<link>\"'+id+'\"'\n\t\t}\n\t\tif (typeof value === 'undefined' || value === null) {\n\t\t\treturn 'null'\n\t\t}\n\t\tif (typeof value === 'object') {\n\t\t\treferences.set(value, true)\n\t\t}\n\t\tif (typeof value.toJSONTag == 'function') {\n\t\t\treturn value.toJSONTag(references, replacer, space)\n\t\t} else if (Array.isArray(value)) {\n\t\t\treturn getTypeString(value) + \"[\"+encodeEntries(value)+\"]\"\n\t\t} else if (value instanceof Object) {\n\t\t\tswitch (getType(value)) {\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'decimal':\n\t\t\t\tcase 'money':\n\t\t\t\tcase 'link':\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'blob':\n\t\t\t\tcase 'color':\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'hash':\n\t\t\t\tcase 'duration':\n\t\t\t\tcase 'phone':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'uuid':\n\t\t\t\tcase 'date':\n\t\t\t\tcase 'time':\n\t\t\t\tcase 'datetime':\n\t\t\t\t\treturn getTypeString(value) + jsonStringify(''+value, replacer, space)\n\t\t\t\tbreak\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'uint':\n\t\t\t\tcase 'int8':\n\t\t\t\tcase 'uint8':\n\t\t\t\tcase 'int16':\n\t\t\t\tcase 'uint16':\n\t\t\t\tcase 'int32':\n\t\t\t\tcase 'uint32':\n\t\t\t\tcase 'int64':\n\t\t\t\tcase 'uint64':\n\t\t\t\tcase 'float':\n\t\t\t\tcase 'float32':\n\t\t\t\tcase 'float64':\n\t\t\t\tcase 'timestamp':\n\t\t\t\tcase 'number':\n\t\t\t\tcase 'boolean':\n\t\t\t\t\treturn getTypeString(value) + jsonStringify(value, replacer, space)\n\t\t\t\tbreak\n\t\t\t\tcase 'array': \n\t\t\t\t\tlet entries = encodeEntries(value) // calculate children first so parent references can add id attribute\n\t\t\t\t\treturn getTypeString(value) + '[' + entries + '}'\n\t\t\t\tbreak\n\t\t\t\tcase 'object': \n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\treturn \"null\"\n\t\t\t\t\t}\n\t\t\t\t\tlet props = encodeProperties(value); // calculate children first so parent references can add id attribute\n\t\t\t\t\treturn getTypeString(value) + '{' + props + '}'\n\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(getType(value)+' type not yet implemented')\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\treturn jsonStringify(value, replacer, space)\n\t\t}\n\t}\n\n\treturn str(\"\", {\"\": value})\n}\n\nfunction createId(value) {\n\tif (typeof crypto === 'undefined') {\n\t\tconsole.error('JSONTag: cannot generate uuid, crypto support is disabled.')\n\t\tthrow new Error('Cannot create links to resolve references, crypto support is disabled')\n\t}\n\tif (typeof crypto.randomUUID === 'function') {\n\t\tvar id = crypto.randomUUID()\n\t} else {\n\t\tvar id = ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n\t\t\t(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n\t\t);\n\t}\n\tsetAttribute(value, 'id', id)\n\treturn id\n}\n\nexport const isNull = (v) => {\n\tlet result = (v === null) || (typeof v.isNull !== 'undefined' && v.isNull)\n\treturn result\n}\n\nconst typeInfo = new WeakMap()\n\nexport const getType = (obj) => {\n\tif (typeInfo.has(obj)) {\n\t\tlet info = typeInfo.get(obj)\n\t\tif (info.type) {\n\t\t\treturn info.type\n\t\t}\n\t}\n\tif (Array.isArray(obj)) {\n\t\treturn 'array'\n\t}\n\treturn typeof obj\n}\n\nexport const types = [\n\t'object','array','string','number','boolean',\t\t\t\t// JSON\n\t'decimal','money','uuid','url','link','date','time','datetime', 'duration', 'timestamp',\n\t'text', 'blob', 'color', 'email', 'hash', 'phone',\n\t'int', 'int8', 'int16', 'int32', 'int64',\n\t'uint', 'uint8', 'uint16', 'uint32', 'uint64',\n\t'float', 'float32', 'float64'\n]\n\nexport const setType = (obj, type) => {\n\tif (typeof obj !== 'object') {\n\t\tthrow new TypeError('JSONTag can only add attributes to objects, convert literals to objects first')\n\t}\n\tlet info = {}\n\tif (typeInfo.has(obj)) {\n\t\tinfo = typeInfo.get(obj)\n\t}\n\tif (!types.includes(type)) {\n\t\tthrow new TypeError('unknown type '+type)\n\t}\n\tinfo.type = type\n\tif (typeof info.attributes === 'undefined') {\n\t\tinfo.attributes = {}\n\t}\n\ttypeInfo.set(obj, info)\n}\n\nexport const setAttribute = (obj, attr, value) => {\n\tif (typeof obj !== 'object') {\n\t\tthrow new TypeError('JSONTag can only add attributes to objects, convert literals to objects first')\n\t}\n\tif (Array.isArray(value)) {\n\t\tvalue = value.join(' ')\n\t}\n\tif (typeof value !== 'string') {\n\t\tthrow new TypeError('attribute values must be a string or an array of strings')\n\t}\n\tif (value.indexOf('\"')!==-1) {\n\t\tthrow new TypeError('attribute values must not contain \" character')\n\t}\n\tif (value.indexOf(' ')!==-1) {\n\t\tvalue = value.split(\" \")\n\t}\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\tinfo.attributes[attr] = value\n\ttypeInfo.set(obj, info)\n}\n\nexport const setAttributes = (obj, attributes) => {\n\tif (typeof obj !== 'object') {\n\t\tthrow new TypeError('JSONTag can only add attributes to objects, convert literals to objects first')\n\t}\n\tif (typeof attributes !== 'object') {\n\t\tthrow new TypeError('attributes param must be an object')\n\t}\n\tObject.keys(attributes).forEach(key => {\n\t\tsetAttribute(obj, key, attributes[key])\n\t})\n}\n\nexport const getAttribute = (obj, attr) => {\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\treturn info.attributes[attr]\n}\n\nexport const addAttribute = (obj, attr, value) => {\n\tif (typeof value !== 'string') {\n\t\tthrow new TypeError('attribute values must be a string')\n\t}\n\tif (value.indexOf('\"')!==-1) {\n\t\tthrow new TypeError('attribute values must not contain \" characters')\n\t}\t\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\tif (typeof info.attributes[attr] === 'undefined') {\n\t\tsetAttribute(obj, attr, value)\n\t} else {\n\t\tif (!Array.isArray(info.attributes[attr])) {\n\t\t\tinfo.attributes[attr] = [ info.attributes[attr] ]\n\t\t}\n\t\tif (value.indexOf(' ')!==-1) {\n\t\t\tvalue = value.split(\" \")\n\t\t} else {\n\t\t\tvalue = [ value ]\n\t\t}\n\t\tinfo.attributes[attr] = info.attributes[attr].concat(value)\n\t\ttypeInfo.set(obj, info)\n\t}\n}\n\nexport const removeAttribute = (obj, attr) => {\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\tif ( typeof info.attributes[attr] !== 'undefined') {\n\t\tdelete info.attributes[attr]\n\t\ttypeInfo.set(obj, info)\n\t}\n}\n\nexport const getAttributes = (obj) => {\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\treturn Object.assign({},info.attributes)\n}\n\nexport const getAttributesString = (obj) => {\n\treturn Object.entries(getAttributes(obj))\n\t\t.map(([attr, attrValue]) => {\n\t\t\tif (Array.isArray(attrValue)) {\n\t\t\t\tattrValue = attrValue.join(' ')\n\t\t\t}\t\n\t\t\treturn attr+'=\"'+attrValue+'\"'\n\t\t})\n\t\t.join(' ')\n}\n\nexport const getTypeString = (obj) => {\n\tlet type = getType(obj)\n\tlet attributes = getAttributes(obj)\n\tlet attributesString = Object.entries(attributes)\n\t\t.map(([attr, attrValue]) => {\n\t\t\tif (Array.isArray(attrValue)) {\n\t\t\t\tattrValue = attrValue.join(' ')\n\t\t\t}\t\n\t\t\treturn attr+'=\"'+attrValue+'\"'\n\t\t})\n\t\t.join(' ')\n\tif (!attributesString) {\n\t\tif (['object','array','string','number','boolean'].indexOf(type)!==-1) {\n\t\t\ttype = ''\n\t\t}\n\t}\n\tif (type || attributesString) {\n\t\treturn '<' + [type, attributesString].filter(Boolean).join(' ') + '>'\n\t} else {\n\t\treturn '';\n\t}\n}\n\nexport const clone = (obj) => {\n\tlet type = getType(obj)\n\tlet attributes = getAttributes(obj)\n\tlet clone = Object.assign({}, obj)\n\tif (type && type!=='object') {\n\t\tsetType(clone, type)\n\t}\n\tif (attributes) {\n\t\tsetAttributes(clone, attributes)\n\t}\n\treturn clone\n}\n\n","// non streaming handbuilt jsontag parser\nimport * as JSONTag from './functions.mjs'\nimport Null from './Null.mjs'\n\nexport default function parse(input, reviver, meta) {\n\tif (!meta) {\n\t\tmeta = {}\n\t}\n\tif (!meta.index) {\n\t\tmeta.index = {}\n\t}\n\tif (!meta.index.id) {\n\t\tmeta.index.id = new Map()\n\t}\n\tif (!meta.unresolved) {\n\t\tmeta.unresolved = new Map()\n\t}\n\tif (!meta.baseURL) {\n\t\tmeta.baseURL = 'http://localhost/'\n\t}\n\n\tlet at, ch, value, result;\n\tlet escapee = {\n\t\t'\"': '\"',\n\t\t\"\\\\\":\"\\\\\",\n\t\t'/': '/',\n\t\tb: \"\\b\",\n\t\tf: \"\\f\",\n\t\tn: \"\\n\",\n\t\tr: \"\\r\",\n\t\tt: \"\\t\"\n\t}\n\n\tlet error = function(m) {\n\t\tthrow {\n\t\t\tname: 'SyntaxError',\n\t\t\tmessage: m,\n\t\t\tat: at,\n\t\t\tinput: input\n\t\t}\n\t}\n\n\tlet next = function(c) {\n\t\tif (c && c!==ch) {\n\t\t\terror(\"Expected '\"+c+\"' instead of '\"+ch+\"'\")\n\t\t}\n\t\tch = input.charAt(at)\n\t\tat+=1\n\t\treturn ch\n\t}\n\t\n\tlet number = function(tagName) {\n\t\tlet numString = ''\n\t\tif (ch==='-') {\n\t\t\tnumString = '-'\n\t\t\tnext('-')\n\t\t}\n\t\twhile(ch>='0' && ch<='9') {\n\t\t\tnumString += ch\n\t\t\tnext()\n\t\t}\n\t\tif (ch==='.') {\n\t\t\tnumString+='.'\n\t\t\twhile(next() && ch >= '0' && ch <= '9') {\n\t\t\t\tnumString += ch\n\t\t\t}\n\t\t}\n\t\tif (ch === 'e' || ch === 'E') {\n\t\t\tnumString += ch\n\t\t\tnext()\n\t\t\tif (ch === '-' || ch === '+') {\n\t\t\t\tnumString += ch\n\t\t\t\tnext()\n\t\t\t}\n\t\t\twhile (ch >= '0' && ch <= '9') {\n\t\t\t\tnumString += ch\n\t\t\t\tnext()\n\t\t\t}\n\t\t}\n\t\tlet result = new Number(numString).valueOf()\n\t\tif (tagName) {\n\t\t\tswitch(tagName) {\n\t\t\t\tcase \"int\":\n\t\t\t\t\tisInt(numString)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"uint\":\n\t\t\t\t\tisInt(numString, [0,Infinity])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"int8\":\n\t\t\t\t\tisInt(numString, [-128,127])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"uint8\":\n\t\t\t\t\tisInt(numString, [0,255])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"int16\":\n\t\t\t\t\tisInt(numString, [-32768,32767])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"uint16\":\n\t\t\t\t\tisInt(numString, [0,65535])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"int32\":\n\t\t\t\t\tisInt(numString, [-2147483648, 2147483647])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"uint32\":\n\t\t\t\t\tisInt(numString, [0,4294967295])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"timestamp\":\n\t\t\t\tcase \"int64\":\n\t\t\t\t\tisInt(numString, [-9223372036854775808,9223372036854775807])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"uint64\":\n\t\t\t\t\tisInt(numString, [0,18446744073709551615])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"float\":\n\t\t\t\t\tisFloat(numString)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"float32\":\n\t\t\t\t\tisFloat(numString, [-3.4e+38,3.4e+38])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"float64\":\n\t\t\t\t\tisFloat(numString, [-1.7e+308,+1.7e+308])\n\t\t\t\t\tbreak\n\t\t\t\tcase \"number\":\n\t\t\t\t\t//FIXME: what to check? should already be covered by JSON parsing rules?\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tisTypeError(tagName)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tlet isTypeError = function(type) {\n\t\terror('Syntax error, expected '+type)\n\t}\n\n\tconst regexes = {\n\t\tcolor: /^(rgb|hsl)a?\\((\\d+%?(deg|rad|grad|turn)?[,\\s]+){2,3}[\\s\\/]*[\\d\\.]+%?\\)$/i,\n\t\temail: /^[A-Za-z0-9_!#$%&'*+\\/=?`{|}~^.-]+@[A-Za-z0-9.-]+$/,\n\t\tuuid:  /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n\t\tdecimal: /^\\d*\\.?\\d*$/,\n\t\tmoney: /^[A-Z]+\\$\\d*\\.?\\d*$/,\n\t\tduration: /^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$/,\n\t\tphone: /^[+]?(?:\\(\\d+(?:\\.\\d+)?\\)|\\d+(?:\\.\\d+)?)(?:[ -]?(?:\\(\\d+(?:\\.\\d+)?\\)|\\d+(?:\\.\\d+)?))*(?:[ ]?(?:x|ext)\\.?[ ]?\\d{1,5})?$/,\n\t\ttime: /^(\\d{2}):(\\d{2})(?::(\\d{2}(?:\\.\\d+)?))?$/,\n\t\tdate: /^-?[1-9][0-9]{3,}-([0][1-9]|[1][0-2])-([1-2][0-9]|[0][1-9]|[3][0-1])$/,\n\t\tdatetime: /^(\\d{4,})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2})(?::(\\d{2}(?:\\.\\d+)?))?$/,\n\t\trange: /^\\[-?(\\d+\\.)?\\d+\\,-?(\\d+\\.)?\\d+\\]$/\n\t}\n\n\tlet isFloat = function(float, range) {\n\t\tlet test = new Number(parseFloat(float))\n\t\tlet str = test.toString()\n\t\tif (float!==str) {\n\t\t\terror('Syntax Error: expected float value')\n\t\t}\n\t\tif (range) {\n\t\t\tif (typeof range[0] === 'number') {\n\t\t\t\tif (test<range[0]) {\n\t\t\t\t\terror('Syntax Error: float value out of range')\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof range[1] === 'number') {\n\t\t\t\tif (test>range[1]) {\n\t\t\t\t\terror('Syntax Error: float value out of range')\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlet isInt = function(int, range) {\n\t\tlet test = new Number(parseInt(int))\n\t\tlet str = test.toString()\n\t\tif (int!==str) {\n\t\t\terror('Syntax Error: expected integer value')\n\t\t}\n\t\tif (range) {\n\t\t\tif (typeof range[0] === 'number') {\n\t\t\t\tif (test<range[0]) {\n\t\t\t\t\terror('Syntax Error: integer value out of range')\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof range[1] === 'number') {\n\t\t\t\tif (test>range[1]) {\n\t\t\t\t\terror('Syntax Error: integer value out of range')\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlet isColor = function(color) {\n\t\tlet result = false\n\t    if (color.charAt(0) === \"#\") {\n\t        color = color.substring(1)\n\t        result = ([3, 4, 6, 8].indexOf(color.length) > -1) && !isNaN(parseInt(color, 16))\n\t        if (result.toString(16)!==color) {\n\t        \tisTypeError('color')\n\t        }\n\t    } else {\n\t        result = regexes.color.test(color)\n\t    }\n\t    if (!result) {\n\t    \tisTypeError('color')\n\t    }\n\t    return true\n\t}\n\n\tlet isEmail = function(email) {\n\t\tlet result = regexes.email.test(email)\n\t    if (!result) {\n\t    \tisTypeError('email')\n\t    }\n\t    return true\n\t}\n\n\tlet isUuid = function(uuid) {\n\t\tlet result = regexes.uuid.test(uuid)\n\t    if (!result) {\n\t    \tisTypeError('uuid')\n\t    }\n\t    return true\n\t}\n\tlet isDecimal = function(decimal) {\n\t\tlet result = regexes.decimal.test(decimal)\n\t    if (!result) {\n\t    \tisTypeError('decimal')\n\t    }\n\t    return true\n\t}\n\tlet isMoney = function(money) {\n\t\tlet result = regexes.money.test(money)\n\t    if (!result) {\n\t    \tisTypeError('money')\n\t    }\n\t    return true\n\t}\n\tlet isUrl = function(url) {\n\t\ttry {\n\t\t\treturn Boolean(new URL(url, meta.baseURL))\n\t\t} catch(e) {\n\t\t\tconsole.log(e)\n\t\t\tisTypeError('url')\n\t\t}\n\t}\n\tlet isDuration = function(duration) {\n\t\tlet result = regexes.duration.test(duration)\n\t    if (!result) {\n\t    \tisTypeError('duration')\n\t    }\n\t    return true\n\t}\n\tlet isPhone = function(phone) {\n\t\tlet result = regexes.phone.test(phone)\n\t    if (!result) {\n\t    \tisTypeError('phone')\n\t    }\n\t    return true\n\t}\n\tlet isRange = function(range) {\n\t\tlet result = regexes.range.test(range)\n\t    if (!result) {\n\t    \tisTypeError('range')\n\t    }\n\t    return true\n\t}\n\tlet isTime = function(time) {\n\t\tlet result = regexes.time.test(time)\n\t    if (!result) {\n\t    \tisTypeError('time')\n\t    }\n\t    return true\n\t}\n\tlet isDate = function(date) {\n\t\tlet result = regexes.date.test(date)\n\t    if (!result) {\n\t    \tisTypeError('date')\n\t    }\n\t    return true\n\t}\n\tlet isDatetime = function(datetime) {\n\t\tlet result = regexes.datetime.test(datetime)\n\t    if (!result) {\n\t    \tisTypeError('datetime')\n\t    }\n\t    return true\n\t}\n\n\tlet checkStringType = function(tagName, value) {\n\t\tif (!tagName) {\n\t\t\treturn\n\t\t}\n\t\tswitch(tagName){\n\t\t\tcase \"object\":\n\t\t\tcase \"array\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"int8\":\n\t\t\tcase \"uint8\":\n\t\t\tcase \"int16\":\n\t\t\tcase \"uint16\":\n\t\t\tcase \"int32\":\n\t\t\tcase \"uint32\":\n\t\t\tcase \"int64\":\n\t\t\tcase \"uint64\":\n\t\t\tcase \"int\":\n\t\t\tcase \"uint\":\n\t\t\tcase \"float32\":\n\t\t\tcase \"float64\":\n\t\t\tcase \"float\":\n\t\t\tcase \"timestamp\":\n\t\t\t\tisTypeError(tagName)\n\t\t\t\tbreak\n\t\t\tcase \"uuid\":\n\t\t\t\treturn isUuid(value)\n\t\t\tcase \"decimal\":\n\t\t\t\treturn isDecimal(value)\n\t\t\tcase \"money\":\n\t\t\t\treturn isMoney(value)\n\t\t\tcase \"url\":\n\t\t\t\treturn isUrl(value)\n\t\t\tcase \"link\":\n\t\t\tcase \"string\":\n\t\t\tcase \"text\":\n\t\t\tcase \"blob\":\n\t\t\tcase \"hash\":\n\t\t\t\t//anything goes\n\t\t\t\treturn true\n\t\t\tcase \"color\":\n\t\t\t\treturn isColor(value)\n\t\t\tcase \"email\":\n\t\t\t\treturn isEmail(value)\n\t\t\tcase \"duration\":\n\t\t\t\treturn isDuration(value)\n\t\t\tcase \"phone\":\n\t\t\t\treturn isPhone(value)\n\t\t\tcase \"range\":\n\t\t\t\treturn isRange(value)\n\t\t\tcase \"time\":\n\t\t\t\treturn isTime(value)\n\t\t\tcase \"date\":\n\t\t\t\treturn isDate(value)\n\t\t\tcase \"datetime\":\n\t\t\t\treturn isDatetime(value)\n\t\t}\n\t\terror('Syntax error: unknown tagName '+tagName)\n\t}\t\n\n\tlet string = function(tagName) {\n\t\tlet value = \"\", hex, i, uffff;\n\t\tif (ch !== '\"') {\n\t\t\terror(\"Syntax Error\")\n\t\t}\n\t\tnext('\"')\n\t\twhile(ch) {\n\t\t\tif (ch==='\"') {\n\t\t\t\tnext()\n\t\t\t\tcheckStringType(tagName, value)\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (ch==='\\\\') {\n\t\t\t\tnext()\n\t\t\t\tif (ch==='u') {\n\t\t\t\t\tuffff=0\n\t\t\t\t\tfor (i=0; i<4; i++) {\n\t\t\t\t\t\thex = parseInt(next(), 16)\n\t\t\t\t\t\tif (!isFinite(hex)) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuffff = uffff * 16 + hex\n\t\t\t\t\t}\n\t\t\t\t\tvalue += String.fromCharCode(uffff)\n\t\t\t\t\tnext()\n\t\t\t\t} else if (typeof escapee[ch] === 'string') {\n\t\t\t\t\tvalue += escapee[ch]\n\t\t\t\t\tnext()\n\t\t\t\t} else {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvalue += ch\n\t\t\t\tnext()\n\t\t\t}\n\t\t}\n\t\terror(\"Syntax error: incomplete string\")\n\t}\n\n\tlet tag = function() {\n\t\tlet key, val, tagOb={\n\t\t\tattributes: {}\n\t\t}\n\t\tif (ch !== '<') {\n\t\t\terror(\"Syntax Error\")\n\t\t}\n\t\tnext('<')\n\t\tkey = word()\n\t\tif (!key) {\n\t\t\terror('Syntax Error: expected tag name')\n\t\t}\n\t\ttagOb.tagName = key\n\t\twhitespace()\n\t\twhile(ch) {\n\t\t\tif (ch==='>') {\n\t\t\t\tnext('>')\n\t\t\t\treturn tagOb\n\t\t\t}\n\t\t\tkey = word()\n\t\t\tif (!key) {\n\t\t\t\terror('Syntax Error: expected attribute name')\n\t\t\t}\n\t\t\twhitespace()\n\t\t\tnext('=')\n\t\t\twhitespace()\n\t\t\tval = string()\n\t\t\ttagOb.attributes[key] = val\n\t\t\twhitespace()\n\t\t}\n\t\terror('Syntax Error: unexpected end of input')\n\t}\n\n\tlet whitespace = function() {\n\t\twhile (ch) {\n\t\t\tswitch(ch) {\n\t\t\t\tcase ' ':\n\t\t\t\tcase \"\\t\":\n\t\t\t\tcase \"\\r\":\n\t\t\t\tcase \"\\n\":\n\t\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treturn\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tlet word = function() {\n\t\t//[a-z][a-z0-9_]*\n\t\tlet val='';\n\t\tif ((ch>='a' && ch<='z') || (ch>='A' && ch<='Z')) {\n\t\t\tval += ch\n\t\t\tnext()\n\t\t} else {\n\t\t\terror('Syntax Error: expected word')\n\t\t}\n\t\twhile((ch>='a' && ch<='z') || (ch>='A' && ch<='Z') || (ch>='0' && ch<='9') || ch=='_') {\n\t\t\tval += ch\n\t\t\tnext()\n\t\t}\n\t\treturn val\n\t}\n\n\tlet boolOrNull = function(tagName) {\n\t\tlet w = word()\n\t\tif (!w || typeof w !== 'string') {\n\t\t\terror('Syntax error: expected boolean or null, got \"'+w+'\"')\n\t\t}\n\t\tswitch(w.toLowerCase()) {\n\t\t\tcase 'true':\n\t\t\t\tif (tagName && tagName!=='boolean') {\n\t\t\t\t\tisTypeError(tagName)\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\tbreak\n\t\t\tcase 'false':\n\t\t\t\tif (tagName && tagName!=='boolean') {\n\t\t\t\t\tisTypeError(tagName)\n\t\t\t\t}\n\t\t\t\treturn false \n\t\t\tbreak\n\t\t\tcase 'null':\n\t\t\t\treturn null\n\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\terror('Syntax error: expected boolean or null, got \"'+w+'\"')\n\t\t\tbreak\n\t\t}\n\t}\n\n\tlet checkUnresolved = function(item, object, key) {\n\t\tif (JSONTag.getType(item)==='link') {\n\t\t\tlet link = ''+item\n\t\t\tlet links = meta.unresolved.get(link)\n\t\t\tif (typeof links === 'undefined') {\n\t\t\t\tmeta.unresolved.set(link,[])\n\t\t\t\tlinks = meta.unresolved.get(link)\n\t\t\t}\n\t\t\tlet count = links.push({\n\t\t\t\tsrc: new WeakRef(object),\n\t\t\t\tkey: key\n\t\t\t})\n\t\t}\n\t}\n\n\tlet array = function() {\n\t\tlet item, array = []\n\t\tif (ch !== '[') {\n\t\t\terror(\"Syntax error\")\n\t\t}\n\t\tnext('[')\n\t\twhitespace()\n\t\tif (ch===']') {\n\t\t\tnext(']')\n\t\t\treturn array\n\t\t}\n\t\twhile(ch) {\n\t\t\titem = value()\n\t\t\tcheckUnresolved(item, array, array.length)\n\t\t\tarray.push(item)\n\t\t\twhitespace()\n\t\t\tif (ch===']') {\n\t\t\t\tnext(']')\n\t\t\t\treturn array\n\t\t\t}\n\t\t\tnext(',')\n\t\t\twhitespace()\n\t\t}\n\t\terror(\"Input stopped early\")\n\t}\n\n\tlet object = function() {\n\t\tlet key, val, object={}\n\t\tif (ch !== '{') {\n\t\t\terror(\"Syntax Error\")\n\t\t}\n\t\tnext('{')\n\t\twhitespace()\n\t\tif (ch==='}') {\n\t\t\tnext('}')\n\t\t\treturn object\n\t\t}\n\t\twhile(ch) {\n\t\t\tkey = string()\n\t\t\tif (key==='__proto__') {\n\t\t\t\terror(\"Attempt at prototype pollution\")\n\t\t\t}\n\t\t\twhitespace()\n\t\t\tnext(':')\n\t\t\tval = value()\n\t\t\tobject[key] = val\n\t\t\tcheckUnresolved(val, object, key)\n\t\t\twhitespace()\n\t\t\tif (ch==='}') {\n\t\t\t\tnext('}')\n\t\t\t\treturn object\n\t\t\t}\n\t\t\tnext(',')\n\t\t\twhitespace()\n\t\t}\n\t\terror(\"Input stopped early\")\n\t}\n\n\tvalue = function() {\n\t\tlet tagOb, result, tagName;\n\t\twhitespace()\n\t\tif (ch==='<') {\n\t\t\ttagOb = tag()\n\t\t\ttagName = tagOb.tagName\n\t\t\twhitespace()\n\t\t}\n\t\tswitch(ch) {\n\t\t\tcase '{':\n\t\t\t\tif (tagName && tagName!=='object') {\n\t\t\t\t\tisTypeError(tagName)\n\t\t\t\t}\n\t\t\t\tresult = object()\n\t\t\tbreak\n\t\t\tcase '[':\n\t\t\t\tif (tagName && tagName!=='array') {\n\t\t\t\t\tisTypeError(tagName)\n\t\t\t\t}\n\t\t\t\tresult = array()\n\t\t\tbreak\n\t\t\tcase '\"':\n\t\t\t\tresult = string(tagName)\n\t\t\tbreak\n\t\t\tcase '-':\n\t\t\t\tresult = number(tagName)\n\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tif (ch>='0' && ch<='9') {\n\t\t\t\t\tresult = number(tagName)\n\t\t\t\t} else {\n\t\t\t\t\tresult = boolOrNull(tagName)\n\t\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tif (tagOb) {\n\t\t\tif (result === null) {\n\t\t\t\tresult = new Null()\n\t\t\t}\n\t\t\tif (typeof result !== 'object') {\n\t\t\t\tswitch(typeof result) {\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tresult = new String(result)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tresult = new Number(result)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\tresult = new Boolean(result)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\terror('Syntax Error: unexpected type '+(typeof result))\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tagOb.tagName) {\n\t\t\t\tJSONTag.setType(result, tagOb.tagName)\n\t\t\t}\n\t\t\tif (tagOb.attributes) {\n\t\t\t\tJSONTag.setAttributes(result, tagOb.attributes)\n\t\t\t\tif (tagOb.attributes?.id) {\n\t\t\t\t\tmeta.index.id.set(tagOb.attributes.id, new WeakRef(result))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tat = 0\n\tch = \" \"\n\tresult = value()\n\twhitespace()\n\tif (ch) {\n\t\terror(\"Syntax error\")\n\t}\n\n\tif (typeof reviver === 'function') {\n\t\tfunction walk(holder, key) {\n\t\t  var k;\n\t      var v;\n\t      var value = holder[key];\n\t      if (value !== null \n\t      \t\t&& typeof value === \"object\" \n\t      \t\t&& !(value instanceof String \n\t      \t\t|| value instanceof Number\n\t      \t\t|| value instanceof Boolean)\n\t      ) {\n\t          for (k in value) {\n\t              if (Object.prototype.hasOwnProperty.call(value, k)) {\n\t                  v = walk(value, k);\n\t                  if (v !== undefined \n\t                  \t  && ( typeof value[k] === 'undefined' || value[k]!==v) )\n\t                  {\n\t                      value[k] = v;\n\t                      if (JSONTag.getType(v)==='link') {\n\t                      \t  checkUnresolved(v, value, k)\n\t                      }\n\t                  } else if (v === undefined) {\n\t                      delete value[k];\n\t                  }\n\t              }\n\t          }\n\t      }\n\t      return reviver.call(holder, key, value, meta);\n\t    }\n\t\twalk({\"\":result}, \"\")\n\t}\n\n\tlet replaceLink = function(u,value) {\n\t\tif (typeof value !== 'undefined') {\n\t\t\tlet src = u.src.deref()\n\t\t\tif (typeof src!== 'undefined' && JSONTag.getType(src[u.key])==='link') {\n\t\t\t\tsrc[u.key] = value\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\n\tif (meta.index.id.size>meta.unresolved.size) {\n\t\tmeta.unresolved.forEach((links,id) => {\n\t\t\tlet value = meta.index.id.get(id)?.deref()\n\t\t\tif (value!==undefined) {\n\t\t\t\tlinks.forEach((u,i) => {\n\t\t\t\t\tif (replaceLink(u,value)) {\n\t\t\t\t\t\tdelete links[i]\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t} else {\n\t\tmeta.index.id.forEach((ref,id) => {\n\t\t\tlet value = ref.deref()\n\t\t\tlet links = meta.unresolved.get(id)\n\t\t\tif (value!==undefined && typeof links !== 'undefined') {\n\t\t\t\tlinks.forEach((u,i) => {\n\t\t\t\t\treplaceLink(u,value)\n\t\t\t\t})\n\t\t\t\tmeta.unresolved.delete(id)\n\t\t\t}\n\t\t})\n\t}\n\treturn result\n}"],"names":["$8e1f6d594b3b3e33$var$jsonStringify","JSON","stringify","$8e1f6d594b3b3e33$var$typeInfo","WeakMap","$8e1f6d594b3b3e33$export$e2b5c5db9e2009fd","obj","has","info","get","type","Array","isArray","$8e1f6d594b3b3e33$export$b14ad400b1d09e0f","$8e1f6d594b3b3e33$export$1bf7f05044e9c5cb","TypeError","includes","attributes","set","$8e1f6d594b3b3e33$export$9fec4d97f1922e0b","attr","value","join","indexOf","split","$8e1f6d594b3b3e33$export$74da2cba014bdc09","Object","keys","forEach","key","$8e1f6d594b3b3e33$export$735ee1799fd02602","$8e1f6d594b3b3e33$export$fe94072fee8a6976","assign","$8e1f6d594b3b3e33$export$e8bbf06ddab4542c","attributesString","entries","map","attrValue","filter","Boolean","$5bb19b6c90f503ab$var$ExtendableProxy","constructor","Proxy","target","name","console","error","Error","newValue","$5bb19b6c90f503ab$export$2e2bcd8739ae039","isNull","toString","toJSON","toJSONTag","window","JSONTag","Null","replacer","space","references","indent","gap","repeat","length","encodeProperties","mind","gapstart","gapend","result","prop","str","encodeEntries","arr","index","holder","call","id","$8e1f6d594b3b3e33$var$createId","crypto","randomUUID","replace","c","getRandomValues","Uint8Array","props","parse","input","reviver","meta","at","ch","Map","unresolved","baseURL","escapee","b","f","n","r","t","m","message","next","charAt","number","tagName","numString","Number","valueOf","isInt","Infinity","isFloat","isTypeError","regexes","color","email","uuid","decimal","money","duration","phone","time","date","datetime","range","float","test","parseFloat","int","parseInt","isColor","substring","isNaN","isUrl","url","URL","e","log","checkStringType","string","hex","i","uffff","isFinite","String","fromCharCode","tag","val","tagOb","word","whitespace","boolOrNull","w","toLowerCase","checkUnresolved","item","object","link","links","push","src","WeakRef","array","walk","k","v","prototype","hasOwnProperty","undefined","replaceLink","u","deref","size","ref","delete","getType","setType","getTypeString","setAttribute","getAttribute","addAttribute","concat","removeAttribute","getAttributes","setAttributes","getAttributesString"],"version":3,"file":"browser.js.map"}