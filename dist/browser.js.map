{"mappings":"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","sources":["node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/regex.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/v4.js","src/lib/functions.mjs","src/lib/UUID.mjs","src/lib/Decimal.mjs","src/lib/Money.mjs","src/lib/Null.mjs","src/lib/types.mjs","node_modules/ohm-js/dist/ohm.esm.js","src/browser.mjs","src/lib/parse.mjs"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import * as uuid from 'uuid'\n\n// keep reference to original JSON.stringify, in case someone monkeypatches it\nconst jsonStringify = JSON.stringify\n\nexport const stringify = (value, replacer=null, space=\"\") => {\n\n\tlet references = new WeakMap()\n\n\tlet indent = \"\"\n\tlet gap = \"\"\n\n\tif (typeof space === \"number\") {\n\t\tindent += \" \".repeat(space)\n\t} else if (typeof space === \"string\") {\n\t\tindent = space\n\t}\n\n\tif (replacer && typeof replacer !== \"function\" && (\n        typeof replacer !== \"object\"\n        || typeof replacer.length !== \"number\"\n    )) {\n        throw new Error(\"JSONTag.stringify\");\n    }\n\n\tconst encodeProperties = (obj) => {\n\t\tlet mind = gap\n\t\tgap += indent\n\t\tlet gapstart = \"\"\n\t\tlet gapend = \"\"\n\t\tlet keys = Object.keys(obj)\n\t\tif (Array.isArray(replacer)) {\n\t\t\tkeys = keys.filter(key => replacer.indexOf(key)!==-1)\n\t\t} \n\t\tif (gap) {\n\t\t\tgapstart =\"\\n\"+gap\n\t\t\tgapend = \"\\n\"+mind\n\t\t}\n\t\tlet result = gapstart+keys.map(prop => {\n\t\t\treturn '\"'+prop+'\":'+str(prop, obj)\n\t\t}).join(\",\"+gapstart)+gapend\n\t\tgap = mind\n\t\treturn result\n\t}\n\n\tconst encodeEntries = (arr) => {\n\t\tlet mind = gap\n\t\tgap += indent\n\t\tlet gapstart = \"\"\n\t\tlet gapend = \"\"\n\t\tif (gap) {\n\t\t\tgapstart = \"\\n\"+gap\n\t\t\tgapend = \"\\n\"+mind\n\t\t}\n\t\tlet result = gapstart+arr.map((value,index) => {\n\t\t\treturn str(index, arr)\n\t\t}).join(\",\"+gapstart)+gapend\n\t\tgap = mind\n\t\treturn result\n\t}\n\n\tconst str = (key, holder) => {\n\t\tlet value = holder[key]\n\t\tif (typeof value === 'object' && references.has(value)) {\n\t\t\tlet id = getAttribute(value, 'id')\n\t\t\tif (!id) {\n\t\t\t\tid = createId(value)\n\t\t\t}\n\t\t\treturn '<link>\"#'+id+'\"'\n\t\t}\n\t\tif (typeof value === 'undefined' || value === null) {\n\t\t\treturn 'null'\n\t\t}\n\t\tif (typeof value.toJSONTag == 'function') {\n\t\t\treturn value.toJSONTag(references, replacer, space)\n\t\t} else if (Array.isArray(value)) {\n\t\t\treturn getTypeString(value) + \"[\"+encodeEntries(value)+\"]\"\n\t\t} else if (value instanceof Object) {\n\t\t\tswitch (getType(value)) {\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'decimal':\n\t\t\t\tcase 'money':\n\t\t\t\tcase 'link':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'uuid':\n\t\t\t\t\treturn getTypeString(value) + jsonStringify(''+value, replacer, space)\n\t\t\t\tbreak\n\t\t\t\tcase 'number':\n\t\t\t\tcase 'boolean':\n\t\t\t\t\treturn getTypeString(value) + jsonStringify(value, replacer, space)\n\t\t\t\tbreak\n\t\t\t\tcase 'array': \n\t\t\t\t\treturn getTypeString(value) + '[' + encodeEntries(value) + '}'\n\t\t\t\tbreak\n\t\t\t\tcase 'object': \n\t\t\t\t\tif (typeof replacer === 'function') {\n\t\t\t\t\t\tvalue = replacer.call(holder, key, value)\n\t\t\t\t\t}\n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\treturn \"null\"\n\t\t\t\t\t}\n\t\t\t\t\treturn getTypeString(value) + '{' + encodeProperties(value) + '}'\n\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(getType(value)+' type not yet implemented')\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\treturn jsonStringify(value, replacer, space)\n\t\t}\n\t}\n\n\treturn str(\"\", {\"\": value})\n}\n\nfunction createId(value) {\n\tlet id = uuid.v4()\n\tsetAttribute(value, 'id', id)\n\treturn id\n}\n\nexport const isNull = (v) => {\n\tlet result = (v === null) || (typeof v.isNull !== 'undefined' && v.isNull)\n\treturn result\n}\n\nconst typeInfo = new WeakMap()\n\nexport const getType = (obj) => {\n\tif (typeInfo.has(obj)) {\n\t\tlet info = typeInfo.get(obj)\n\t\tif (info.type) {\n\t\t\treturn info.type\n\t\t}\n\t}\n\tif (Array.isArray(obj)) {\n\t\treturn 'array'\n\t}\n\treturn typeof obj\n}\n\nexport const types = [\n\t'object','array','string','number','boolean',\n\t'decimal','money','uuid','link'\n]\n\nexport const setType = (obj, type) => {\n\tlet info = {}\n\tif (typeInfo.has(obj)) {\n\t\tinfo = typeInfo.get(obj)\n\t}\n\tif (!types.includes(type)) {\n\t\tthrow new TypeError('unknown type '+type)\n\t}\n\tinfo.type = type\n\tif (typeof info.attributes === 'undefined') {\n\t\tinfo.attributes = {}\n\t}\n\ttypeInfo.set(obj, info)\n}\n\nexport const setAttribute = (obj, attr, value) => {\n\tif (Array.isArray(value)) {\n\t\tvalue = value.join(' ')\n\t}\n\tif (typeof value !== 'string') {\n\t\tthrow new TypeError('attribute values must be a string or an array of strings')\n\t}\n\tif (value.indexOf('\"')!==-1) {\n\t\tthrow new TypeError('attribute values must not contain \" character')\n\t}\n\tif (value.indexOf(' ')!==-1) {\n\t\tvalue = value.split(\" \")\n\t}\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\tinfo.attributes[attr] = value\n\ttypeInfo.set(obj, info)\n}\n\nexport const setAttributes = (obj, attributes) => {\n\tif (typeof attributes !== 'object') {\n\t\tthrow new TypeError('attributes param must be an object')\n\t}\n\tObject.keys(attributes).forEach(key => {\n\t\tsetAttribute(obj, key, attributes[key])\n\t})\n}\n\nexport const getAttribute = (obj, attr) => {\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\treturn info.attributes[attr]\n}\n\nexport const addAttribute = (obj, attr, value) => {\n\tif (typeof value !== 'string') {\n\t\tthrow new TypeError('attribute values must be a string')\n\t}\n\tif (value.indexOf('\"')!==-1) {\n\t\tthrow new TypeError('attribute values must not contain \" characters')\n\t}\t\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\tif (typeof info.attributes[attr] === 'undefined') {\n\t\tsetAttribute(obj, attr, value)\n\t} else {\n\t\tif (!Array.isArray(info.attributes[attr])) {\n\t\t\tinfo.attributes[attr] = [ info.attributes[attr] ]\n\t\t}\n\t\tif (value.indexOf(' ')!==-1) {\n\t\t\tvalue = value.split(\" \")\n\t\t} else {\n\t\t\tvalue = [ value ]\n\t\t}\n\t\tinfo.attributes[attr] = info.attributes[attr].concat(value)\n\t\ttypeInfo.set(obj, info)\n\t}\n}\n\nexport const removeAttribute = (obj, attr) => {\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\tif ( typeof info.attributes[attr] !== 'undefined') {\n\t\tdelete info.attributes[attr]\n\t\ttypeInfo.set(obj, info)\n\t}\n}\n\nexport const getAttributes = (obj) => {\n\tlet info = typeInfo.get(obj) || { attributes: {}}\n\treturn Object.assign({},info.attributes)\n}\n\nexport const getAttributesString = (obj) => {\n\treturn Object.entries(getAttributes(obj))\n\t\t.map(([attr, attrValue]) => {\n\t\t\tif (Array.isArray(attrValue)) {\n\t\t\t\tattrValue = attrValue.join(' ')\n\t\t\t}\t\n\t\t\treturn attr+'=\"'+attrValue+'\"'\n\t\t})\n\t\t.join(' ')\n}\n\nexport const getTypeString = (obj) => {\n\tlet type = getType(obj)\n\tlet attributes = getAttributes(obj)\n\tlet attributesString = Object.entries(attributes)\n\t\t.map(([attr, attrValue]) => {\n\t\t\tif (Array.isArray(attrValue)) {\n\t\t\t\tattrValue = attrValue.join(' ')\n\t\t\t}\t\n\t\t\treturn attr+'=\"'+attrValue+'\"'\n\t\t})\n\t\t.join(' ')\n\tif (!attributesString) {\n\t\tif (['object','array','string','number','boolean'].indexOf(type)!==-1) {\n\t\t\ttype = ''\n\t\t}\n\t}\n\tif (type || attributesString) {\n\t\treturn '<' + [type, attributesString].filter(Boolean).join(' ') + '>'\n\t} else {\n\t\treturn '';\n\t}\n}","import { getAttributesString } from \"./functions.mjs\"\n\nexport default class UUID {\n\t#value;\n\n\tconstructor(uuid)\n\t{\n\t\tlet re = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-8][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i\n\t\tif (!re.test(uuid)) {\n\t\t\tthrow new TypeError(uuid+' is not a valid UUID')\n\t\t}\n\t\tthis.#value = uuid\n\t}\n\n\ttoString()\n\t{\n\t\treturn this.#value\n\t}\n\n\ttoJSON()\n\t{\n\t\treturn '\"'+this.#value+'\"'\n\t}\n\n\ttoJSONTag()\n\t{\n\t\tlet attributes = getAttributesString(this)\n\t\treturn '<uuid'+(attributes ? ' ' + attributes : '')+'>'+this.toJSON()\n\t}\n\n}","if (!String.prototype.padStart) {\n\tString.prototype.padStart = function padStart(targetLength,padString) {\n\t\ttargetLength = targetLength>>0; //truncate if number or convert non-number to 0;\n\t\tpadString = String((typeof padString !== 'undefined' ? padString : ' '));\n\t\tif (this.length > targetLength) {\n\t\t\treturn String(this);\n\t\t}\n\t\telse {\n\t\t\ttargetLength = targetLength-this.length;\n\t\t\tif (targetLength > padString.length) {\n\t\t\t\tpadString += padString.repeat(targetLength/padString.length); //append to original to ensure we are longer than needed\n\t\t\t}\n\t\t\treturn padString.slice(0,targetLength) + String(this);\n\t\t}\n\t};\n}\n\nexport default class Decimal {\n\t#i;\n\t#e;\n\n\tconstructor(i,e)\n\t{\n\t\tif (isNaN(i)) {\n\t\t\tthrow new TypeError(i+' is not a number')\n\t\t}\n\t\tthis.#i = i\n\t\tthis.#e = e\t\t\n\t}\n\n\tstatic from(i, e=0)\n\t{\n\t\tif (i instanceof Decimal) {\n\t\t\treturn i\n\t\t}\n\t\tlet oi = i\n\t\tif (typeof i === 'string') {\n\t\t\tif (i.indexOf('.')!==-1) {\n\t\t\t\te = -1 * i.substring(i.indexOf('.')+1).length\n\t\t\t} else {\n\t\t\t\te = 0\n\t\t\t}\n\t\t\ti = parseInt(i.replace(/[,.]/g, ''))\n\t\t}\n\t\tif (isNaN(i)) {\n\t\t\tthrow new TypeError(oi+' is not a number')\n\t\t}\n\t\tif (isNaN(e)) {\n\t\t\tthrow new TypeError(e+' is not a number')\n\t\t}\n\t\treturn new Decimal(i, e)\n\t}\n\n\ttoJSON()\n\t{\n\t\treturn '\"'+this.toString()+'\"'\n\t}\n\n\ttoJSONTag()\n\t{\n\t\tlet attributes = getAttributesString(this)\n\t\treturn '<decimal'+(attributes ? ' ' + attributes : '')+'>'+this.toJSON()\n\t}\n\n\thoist(a,b)\n\t{\n\t\ta = Decimal.from(a)\n\t\tb = Decimal.from(b)\n\t\tlet [ ai, ae ] = a.toExp()\n\t\tlet [ bi, be ] = b.toExp()\n\t\tif (be<ae) {\n\t\t\tai = ''+ai\n\t\t\tai = parseInt(ai + '0'.repeat(ae - be))\n\t\t\treturn [ new Decimal(ai, be), b ]\n\t\t} else if (be>ae) {\n\t\t\tbi = ''+bi\n\t\t\tbi = parseInt(bi + '0'.repeat(be - ae))\n\t\t\treturn [ a, new Decimal(bi, ae)]\n\t\t} else {\n\t\t\treturn [ a, b ]\n\t\t}\t\t\t\n\t}\n\n\ttoString()\n\t{\n\t\t//let d = ''+(this.#i % Math.pow(10,-this.#e))\n\t\t// can't do #i * Math.pow(10,this.#e), as it turns #i into a float and loses precision\n\t\tlet s = ''+this.#i\n\t\tlet d = ''\n\t\tif (this.#e<0) {\n\t\t\td = s.substring(s.length+this.#e)\n\t\t\ts = s.substring(0, s.length+this.#e)\n\t\t} else {\n\t\t\td = ''\n\t\t\ts = s + '0'.repeat(this.#e)\n\t\t}\n\t\treturn s + (d ? '.' + d.padStart(-this.#e, '0') : '')\n\t}\n\n\ttoExp()\n\t{\n\t\treturn [this.#i, this.#e]\n\t}\n\n\tmultiplyWith(n)\n\t{\n\t\tn = Decimal.from(n)\n\t\tlet [ ni, ne ] = n.toExp()\n\t\treturn new Decimal( this.#i * ni, this.#e + ne )\n\t}\n\n\tdivideBy(n)\n\t{\n\t\tn = Decimal.from(n)\n\t\tlet [ ni, ne ] = n.toExp()\n\t\treturn new Decimal( this.#i / ni, this.#e - ne)\n\t}\n\n\tadd(n)\n\t{\n\t\tlet [ t,  nn ] = this.hoist(this, n)\n\t\tlet [ ti, te ] = t.toExp()\n\t\tlet [ ni, ne ] = nn.toExp()\n\t\treturn new Decimal(ti + ni, te)\n\t}\n\n\tsubtract(n)\n\t{\n\t\tlet [ t,  nn ] = this.hoist(this, n)\n\t\tlet [ ti, te ] = t.toExp()\n\t\tlet [ ni, ne ] = nn.toExp()\n\t\treturn new Decimal(ti - ni, te)\n\t}\n\n\tcompareWith(n)\n\t{\n\t\tlet [ t,  nn ] = this.hoist(this, n)\n\t\tlet [ ti, te ] = t.toExp()\n\t\tlet [ ni, ne ] = nn.toExp()\n\t\tlet d = ti - ni\n\t\tif (d<0) {\n\t\t\treturn -1\n\t\t} else if (d>0) {\n\t\t\treturn 1\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tisLessThan(n)\n\t{\n\t\treturn this.compare(n)===1\n\t}\n\n\tisMoreThan(n)\n\t{\n\t\treturn this.compare(n)===-1\n\t}\n\n\tisEqualTo(n)\n\t{\n\t\treturn this.compare(n)===0\n\t}\n\n\ttoPrecision(e)\n\t{\n\t\treturn this.round(e)\n\t}\n\n\tfloor(e=0)\n\t{\n\t\tlet s = ''+this.#i\n\t\tif ((this.#e+e)<0) {\n\t\t\ts = s.substring(0, s.length+(this.#e+e))\n\t\t} else {\n\t\t\ts = s + '0'.repeat(this.#e+e)\n\t\t}\n\t\treturn new Decimal(parseInt(s),e)\n\t}\n\n\tceil(e=0)\n\t{\n\t\tlet s = ''+this.#i\n\t\tlet d = ''\n\t\tif ((this.#e+e)<0) {\n\t\t\td = parseInt(s.substring(s.length+(this.#e+e)))\n\t\t\ts = s.substring(0, s.length+(this.#e+e))\n\t\t} else {\n\t\t\td = 0\n\t\t\ts = s + '0'.repeat(this.#e+e)\n\t\t}\n\t\treturn new Decimal(parseInt(s)+(d?1:0),e)\n\t}\n\n\tround(e=0)\n\t{\n\t\tlet s = ''+this.#i\n\t\tlet d = ''\n\t\tif ((this.#e+e)<0) {\n\t\t\td = s.substring(s.length+(this.#e+e))\n\t\t\ts = s.substring(0, s.length+(this.#e+e))\n\t\t} else {\n\t\t\td = '0'\n\t\t\ts = s + '0'.repeat(this.#e+e)\n\t\t}\n\t\treturn new Decimal(parseInt(s)+(parseInt(d[0])>=5?1:0),e)\n\t}\n}","import Decimal from './Decimal.mjs'\n\nexport default class Money {\n\n\t#c; \n\t#i; \n\t#e;\n\n\tconstructor(c, i, e=null)\n\t{\n\t\tif (i instanceof Decimal) {\n\t\t\t[i, e] = i.toExp()\n\t\t} else if (isNaN(i)) {\n\t\t\tthrow new TypeError(i+' is not a number')\n\t\t}\n\t\tif (e==0) {\n\t\t\te = -2;\n\t\t\ti = 100 * i;\n\t\t}\n\t\tthis.#i = i\n\t\tthis.#e = e\t\t\n\t\tthis.#c = c\n\t}\n\n\tstatic from(c, i=0, e=0)\n\t{\n\t\tif (c instanceof Money) {\n\t\t\treturn c\n\t\t}\n\t\tif (typeof c === 'string') {\n\t\t\tif (c.indexOf('$') !== -1) {\n\t\t\t\tconsole.log(c.substring(c.indexOf('$')))\n\t\t\t\te = -1 * c.substring(c.indexOf('.')+1).length\n\t\t\t\ti = parseInt(c.substring(c.indexOf('$')+1).replace(/[,.]/g, ''))\n\t\t\t\tc = c.substring(0, c.indexOf('$'))\n\t\t\t} else {\n\t\t\t\tif (!(i instanceof Decimal)) {\n\t\t\t\t\ti = Decimal.from(i,e)\n\t\t\t\t}\n\t\t\t\t[ i, e ] = i.toExp()\n\t\t\t}\n\t\t}\n\t\treturn new Money(c, i, e)\n\t}\n\n\ttoJSON()\n\t{\n\t\treturn '\"' + this.#c + '$' + Math.floor(this.#i * Math.pow(10,this.#e)) + '.' + (this.#i % Math.pow(10,-this.#e)) +'\"'\n\t}\n\n\ttoJSONTag()\n\t{\n\t\tlet attributes = getAttributesString(this)\n\t\treturn '<money'+(attributes ? ' ' + attributes : '')+'>'+this.toJSON()\n\t}\n\n\ttoString()\n\t{\n\t\tlet d = ''+(this.#i % Math.pow(10,-this.#e))\n\t\treturn this.#c + '$' + Math.floor(this.#i * Math.pow(10,this.#e)) + '.' + d.padStart(-this.#e, '0')\n\t}\n\n\ttoExp()\n\t{\n\t\treturn [this.#i, this.#e]\n\t}\n\n\tgetCurrency()\n\t{\n\t\treturn this.#c\n\t}\n\n\tmultiplyWith(n)\n\t{\n\t\tlet Dt = new Decimal(this.#i, this.#e)\n\t\treturn new Money(this.#c, Dt.multiplyWith(n))\n\t}\n\n\tdivideBy(n)\n\t{\n\t\tlet Dt = new Decimal(this.#i, this.#e)\n\t\treturn new Money(this.#c, Dt.divideBy(n))\n\t}\n\n\tadd(n)\n\t{\n\t\tn = Money.from(n)\n\t\tif (n.getCurrency()!==this.#c) {\n\t\t\tthrow new TypeError('You cannot add different curreency values')\n\t\t}\n\t\tlet [ ni, ne ] = n.toExp()\n\t\tlet Dn = new Decimal(ni, ne)\n\t\tlet Dt = new Decimal(this.#i, this.#e)\n\t\treturn new Money(this.#c, Dt.add(Dn))\n\t}\n\n\tsubtract(n)\n\t{\n\t\tn = Money.from(n)\n\t\tif (n.getCurrency()!==this.#c) {\n\t\t\tthrow new TypeError('You cannot subtract different currency values')\n\t\t}\n\t\tlet [ ni, ne ] = n.toExp()\n\t\tlet Dn = new Decimal(ni, ne)\n\t\tlet Dt = new Decimal(this.#i, this.#e)\n\t\treturn new Money(this.#c, Dt.subtract(Dn))\n\t}\n\n\tcompareWith(n)\n\t{\n\t\tn = Money.from(n)\n\t\tif (n.getCurrency()!==this.#c) {\n\t\t\tthrow new TypeError('You cannot compare different currency values')\n\t\t}\n\t\tlet [ ni, ne ] = n.toExp()\n\t\tlet Dn = new Decimal(ni, ne)\n\t\tlet Dt = new Decimal(this.#i, this.#e)\n\t\tDt.compareWith(Dn)\n\t}\n\n\tisLessThan(n)\n\t{\n\t\treturn this.compare(n)===1\n\t}\n\n\tisMoreThan(n)\n\t{\n\t\treturn this.compare(n)===-1\n\t}\n\n\tisEqualTo(n)\n\t{\n\t\treturn this.compare(n)===0\n\t}\n\n\ttoPrecision(e)\n\t{\n\t\treturn this.round(e)\n\t}\n\n\tfloor(e=0)\n\t{\n\t\treturn Money.from(this.#c, new Decimal(this.#i, this.#e).floor(e))\n\t}\n\n\tceil(e=0)\n\t{\n\t\treturn Money.from(this.#c, new Decimal(this.#i, this.#e).ceil(e))\n\t}\n\n\tround(e=0)\n\t{\n\t\treturn Money.from(this.#c, new Decimal(this.#i, this.#e).round(e))\n\t}\n}","import { getTypeString } from \"./functions.mjs\"\n\nclass ExtendableProxy {\n\tconstructor()\n\t{\n\t\treturn new Proxy(this,{\n\t\t\tget: (target,name) => {\n\t\t\t\tif (typeof target[name] !== 'undefined') {\n\t\t\t\t\treturn target[name];\n\t\t\t\t}\n\t\t\t\tconsole.error('Attempting to get from Null', name, typeof name, JSON.stringify(name))\n\t\t\t\tthrow new Error('Attempting to get '+name+' from Null')\n\t\t\t},\n\t\t\tset: (target,name,newValue) => {\n\t\t\t\tconsole.error('Attempting to set '+name+' in Null to',newValue)\n\t\t\t\tthrow new Error('Attempting to set '+name+' in Null')\t\n\t\t\t}\n\t\t})\n\t}\n\n}\n\nexport default class Null extends ExtendableProxy {\n\n\tisNull = true;\n\n\ttoString()\n\t{\n\t\treturn ''\n\t}\n\n\ttoJSON()\n\t{\n\t\treturn 'null'\n\t}\n\n\ttoJSONTag()\n\t{\n\t\tlet type = getTypeString(this)\n\t\treturn type+this.toJSON()\n\t}\n\n}","import UUID from './UUID.mjs'\nimport Decimal from './Decimal.mjs'\nimport Money from './Money.mjs'\nimport Null from './Null.mjs'\n\nconst JSONTagTypes = {\n\tUUID: UUID,\n\tDecimal: Decimal,\n\tMoney: Money,\n\tNull: Null\n}\n\nexport default JSONTagTypes\n","/// <reference types=\"../index.d.ts\" />\nvar main$1 = {exports: {}};\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n/*\n  `Failure`s represent expressions that weren't matched while parsing. They are used to generate\n  error messages automatically. The interface of `Failure`s includes the collowing methods:\n\n  - getText() : String\n  - getType() : String  (one of {\"description\", \"string\", \"code\"})\n  - isDescription() : bool\n  - isStringTerminal() : bool\n  - isCode() : bool\n  - isFluffy() : bool\n  - makeFluffy() : void\n  - subsumes(Failure) : bool\n*/\n\nfunction isValidType(type) {\n  return type === 'description' || type === 'string' || type === 'code';\n}\n\nfunction Failure$2(pexpr, text, type) {\n  if (!isValidType(type)) {\n    throw new Error('invalid Failure type: ' + type);\n  }\n  this.pexpr = pexpr;\n  this.text = text;\n  this.type = type;\n  this.fluffy = false;\n}\n\nFailure$2.prototype.getPExpr = function() {\n  return this.pexpr;\n};\n\nFailure$2.prototype.getText = function() {\n  return this.text;\n};\n\nFailure$2.prototype.getType = function() {\n  return this.type;\n};\n\nFailure$2.prototype.isDescription = function() {\n  return this.type === 'description';\n};\n\nFailure$2.prototype.isStringTerminal = function() {\n  return this.type === 'string';\n};\n\nFailure$2.prototype.isCode = function() {\n  return this.type === 'code';\n};\n\nFailure$2.prototype.isFluffy = function() {\n  return this.fluffy;\n};\n\nFailure$2.prototype.makeFluffy = function() {\n  this.fluffy = true;\n};\n\nFailure$2.prototype.clearFluffy = function() {\n  this.fluffy = false;\n};\n\nFailure$2.prototype.subsumes = function(that) {\n  return (\n    this.getText() === that.getText() &&\n    this.type === that.type &&\n    (!this.isFluffy() || (this.isFluffy() && that.isFluffy()))\n  );\n};\n\nFailure$2.prototype.toString = function() {\n  return this.type === 'string' ? JSON.stringify(this.getText()) : this.getText();\n};\n\nFailure$2.prototype.clone = function() {\n  const failure = new Failure$2(this.pexpr, this.text, this.type);\n  if (this.isFluffy()) {\n    failure.makeFluffy();\n  }\n  return failure;\n};\n\nFailure$2.prototype.toKey = function() {\n  return this.toString() + '#' + this.type;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Failure_1 = Failure$2;\n\nvar common$l = {};\n\n(function (exports) {\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Helpers\n\nconst escapeStringFor = {};\nfor (let c = 0; c < 128; c++) {\n  escapeStringFor[c] = String.fromCharCode(c);\n}\nescapeStringFor[\"'\".charCodeAt(0)] = \"\\\\'\";\nescapeStringFor['\"'.charCodeAt(0)] = '\\\\\"';\nescapeStringFor['\\\\'.charCodeAt(0)] = '\\\\\\\\';\nescapeStringFor['\\b'.charCodeAt(0)] = '\\\\b';\nescapeStringFor['\\f'.charCodeAt(0)] = '\\\\f';\nescapeStringFor['\\n'.charCodeAt(0)] = '\\\\n';\nescapeStringFor['\\r'.charCodeAt(0)] = '\\\\r';\nescapeStringFor['\\t'.charCodeAt(0)] = '\\\\t';\nescapeStringFor['\\u000b'.charCodeAt(0)] = '\\\\v';\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nexports.abstract = function(optMethodName) {\n  const methodName = optMethodName || '';\n  return function() {\n    throw new Error(\n        'this method ' +\n        methodName +\n        ' is abstract! ' +\n        '(it has no implementation in class ' +\n        this.constructor.name +\n        ')'\n    );\n  };\n};\n\nexports.assert = function(cond, message) {\n  if (!cond) {\n    throw new Error(message || 'Assertion failed');\n  }\n};\n\n// Define a lazily-computed, non-enumerable property named `propName`\n// on the object `obj`. `getterFn` will be called to compute the value the\n// first time the property is accessed.\nexports.defineLazyProperty = function(obj, propName, getterFn) {\n  let memo;\n  Object.defineProperty(obj, propName, {\n    get() {\n      if (!memo) {\n        memo = getterFn.call(this);\n      }\n      return memo;\n    },\n  });\n};\n\nexports.clone = function(obj) {\n  if (obj) {\n    return Object.assign({}, obj);\n  }\n  return obj;\n};\n\nexports.repeatFn = function(fn, n) {\n  const arr = [];\n  while (n-- > 0) {\n    arr.push(fn());\n  }\n  return arr;\n};\n\nexports.repeatStr = function(str, n) {\n  return new Array(n + 1).join(str);\n};\n\nexports.repeat = function(x, n) {\n  return exports.repeatFn(() => x, n);\n};\n\nexports.getDuplicates = function(array) {\n  const duplicates = [];\n  for (let idx = 0; idx < array.length; idx++) {\n    const x = array[idx];\n    if (array.lastIndexOf(x) !== idx && duplicates.indexOf(x) < 0) {\n      duplicates.push(x);\n    }\n  }\n  return duplicates;\n};\n\nexports.copyWithoutDuplicates = function(array) {\n  const noDuplicates = [];\n  array.forEach(entry => {\n    if (noDuplicates.indexOf(entry) < 0) {\n      noDuplicates.push(entry);\n    }\n  });\n  return noDuplicates;\n};\n\nexports.isSyntactic = function(ruleName) {\n  const firstChar = ruleName[0];\n  return firstChar === firstChar.toUpperCase();\n};\n\nexports.isLexical = function(ruleName) {\n  return !exports.isSyntactic(ruleName);\n};\n\nexports.padLeft = function(str, len, optChar) {\n  const ch = optChar || ' ';\n  if (str.length < len) {\n    return exports.repeatStr(ch, len - str.length) + str;\n  }\n  return str;\n};\n\n// StringBuffer\n\nexports.StringBuffer = function() {\n  this.strings = [];\n};\n\nexports.StringBuffer.prototype.append = function(str) {\n  this.strings.push(str);\n};\n\nexports.StringBuffer.prototype.contents = function() {\n  return this.strings.join('');\n};\n\nconst escapeUnicode = str => String.fromCodePoint(parseInt(str, 16));\n\nexports.unescapeCodePoint = function(s) {\n  if (s.charAt(0) === '\\\\') {\n    switch (s.charAt(1)) {\n      case 'b':\n        return '\\b';\n      case 'f':\n        return '\\f';\n      case 'n':\n        return '\\n';\n      case 'r':\n        return '\\r';\n      case 't':\n        return '\\t';\n      case 'v':\n        return '\\v';\n      case 'x':\n        return escapeUnicode(s.slice(2, 4));\n      case 'u':\n        return s.charAt(2) === '{' ?\n          escapeUnicode(s.slice(3, -1)) :\n          escapeUnicode(s.slice(2, 6));\n      default:\n        return s.charAt(1);\n    }\n  } else {\n    return s;\n  }\n};\n\n// Helper for producing a description of an unknown object in a safe way.\n// Especially useful for error messages where an unexpected type of object was encountered.\nexports.unexpectedObjToString = function(obj) {\n  if (obj == null) {\n    return String(obj);\n  }\n  const baseToString = Object.prototype.toString.call(obj);\n  try {\n    let typeName;\n    if (obj.constructor && obj.constructor.name) {\n      typeName = obj.constructor.name;\n    } else if (baseToString.indexOf('[object ') === 0) {\n      typeName = baseToString.slice(8, -1); // Extract e.g. \"Array\" from \"[object Array]\".\n    } else {\n      typeName = typeof obj;\n    }\n    return typeName + ': ' + JSON.stringify(String(obj));\n  } catch (e) {\n    return baseToString;\n  }\n};\n}(common$l));\n\nconst common$k = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass Node {\n  constructor(matchLength) {\n    this.matchLength = matchLength;\n  }\n\n  get ctorName() {\n    throw new Error('subclass responsibility');\n  }\n\n  numChildren() {\n    return this.children ? this.children.length : 0;\n  }\n\n  childAt(idx) {\n    if (this.children) {\n      return this.children[idx];\n    }\n  }\n\n  indexOfChild(arg) {\n    return this.children.indexOf(arg);\n  }\n\n  hasChildren() {\n    return this.numChildren() > 0;\n  }\n\n  hasNoChildren() {\n    return !this.hasChildren();\n  }\n\n  onlyChild() {\n    if (this.numChildren() !== 1) {\n      throw new Error(\n          'cannot get only child of a node of type ' +\n          this.ctorName +\n          ' (it has ' +\n          this.numChildren() +\n          ' children)'\n      );\n    } else {\n      return this.firstChild();\n    }\n  }\n\n  firstChild() {\n    if (this.hasNoChildren()) {\n      throw new Error(\n          'cannot get first child of a ' + this.ctorName + ' node, which has no children'\n      );\n    } else {\n      return this.childAt(0);\n    }\n  }\n\n  lastChild() {\n    if (this.hasNoChildren()) {\n      throw new Error(\n          'cannot get last child of a ' + this.ctorName + ' node, which has no children'\n      );\n    } else {\n      return this.childAt(this.numChildren() - 1);\n    }\n  }\n\n  childBefore(child) {\n    const childIdx = this.indexOfChild(child);\n    if (childIdx < 0) {\n      throw new Error('Node.childBefore() called w/ an argument that is not a child');\n    } else if (childIdx === 0) {\n      throw new Error('cannot get child before first child');\n    } else {\n      return this.childAt(childIdx - 1);\n    }\n  }\n\n  childAfter(child) {\n    const childIdx = this.indexOfChild(child);\n    if (childIdx < 0) {\n      throw new Error('Node.childAfter() called w/ an argument that is not a child');\n    } else if (childIdx === this.numChildren() - 1) {\n      throw new Error('cannot get child after last child');\n    } else {\n      return this.childAt(childIdx + 1);\n    }\n  }\n\n  isTerminal() {\n    return false;\n  }\n\n  isNonterminal() {\n    return false;\n  }\n\n  isIteration() {\n    return false;\n  }\n\n  isOptional() {\n    return false;\n  }\n}\n\n// Terminals\n\nclass TerminalNode$2 extends Node {\n  get ctorName() {\n    return '_terminal';\n  }\n\n  isTerminal() {\n    return true;\n  }\n\n  get primitiveValue() {\n    throw new Error('The `primitiveValue` property was removed in Ohm v17.');\n  }\n}\n\n// Nonterminals\n\nclass NonterminalNode$1 extends Node {\n  constructor(ruleName, children, childOffsets, matchLength) {\n    super(matchLength);\n    this.ruleName = ruleName;\n    this.children = children;\n    this.childOffsets = childOffsets;\n  }\n\n  get ctorName() {\n    return this.ruleName;\n  }\n\n  isNonterminal() {\n    return true;\n  }\n\n  isLexical() {\n    return common$k.isLexical(this.ctorName);\n  }\n\n  isSyntactic() {\n    return common$k.isSyntactic(this.ctorName);\n  }\n}\n\n// Iterations\n\nclass IterationNode$2 extends Node {\n  constructor(children, childOffsets, matchLength, isOptional) {\n    super(matchLength);\n    this.children = children;\n    this.childOffsets = childOffsets;\n    this.optional = isOptional;\n  }\n\n  get ctorName() {\n    return '_iter';\n  }\n\n  isIteration() {\n    return true;\n  }\n\n  isOptional() {\n    return this.optional;\n  }\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar nodes$1 = {\n  Node,\n  TerminalNode: TerminalNode$2,\n  NonterminalNode: NonterminalNode$1,\n  IterationNode: IterationNode$2,\n};\n\nvar pexprsMain = {};\n\n// Based on https://github.com/mathiasbynens/unicode-9.0.0.\n// These are just categories that are used in ES5/ES2015.\n// The full list of Unicode categories is here: http://www.fileformat.info/info/unicode/category/index.htm.\nvar UnicodeCategories$1 = {\n  // Letters\n  Lu: /[A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A]|\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]/,\n  Ll: /[a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]|\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43]/,\n  Lt: /[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]/,\n  Lm: /[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F]|\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0]/,\n  Lo: /[\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\n  // Numbers\n  Nl: /[\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF]|\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD809[\\uDC00-\\uDC6E]/,\n  Nd: /[0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]|\\uD801[\\uDCA0-\\uDCA9]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|[\\uD805\\uD807][\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDD50-\\uDD59]/,\n\n  // Marks\n  Mn: /[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDCA-\\uDDCC\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDE3E\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC38-\\uDC3F\\uDC42-\\uDC44\\uDC46\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD807[\\uDC30-\\uDC36\\uDC38-\\uDC3D\\uDC3F\\uDC92-\\uDCA7\\uDCAA-\\uDCB0\\uDCB2\\uDCB3\\uDCB5\\uDCB6]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]/,\n  Mc: /[\\u0903-\\u0903]|[\\u093E-\\u0940]|[\\u0949-\\u094C]|[\\u0982-\\u0983]|[\\u09BE-\\u09C0]|[\\u09C7-\\u09C8]|[\\u09CB-\\u09CC]|[\\u09D7-\\u09D7]|[\\u0A3E-\\u0A40]|[\\u0A83-\\u0A83]|[\\u0ABE-\\u0AC0]|[\\u0AC9-\\u0AC9]|[\\u0ACB-\\u0ACC]|[\\u0B02-\\u0B03]|[\\u0B3E-\\u0B3E]|[\\u0B40-\\u0B40]|[\\u0B47-\\u0B48]|[\\u0B4B-\\u0B4C]|[\\u0B57-\\u0B57]|[\\u0B83-\\u0B83]|[\\u0BBE-\\u0BBF]|[\\u0BC1-\\u0BC2]|[\\u0BC6-\\u0BC8]|[\\u0BCA-\\u0BCC]|[\\u0BD7-\\u0BD7]|[\\u0C01-\\u0C03]|[\\u0C41-\\u0C44]|[\\u0C82-\\u0C83]|[\\u0CBE-\\u0CBE]|[\\u0CC0-\\u0CC4]|[\\u0CC7-\\u0CC8]|[\\u0CCA-\\u0CCB]|[\\u0CD5-\\u0CD6]|[\\u0D02-\\u0D03]|[\\u0D3E-\\u0D40]|[\\u0D46-\\u0D48]|[\\u0D4A-\\u0D4C]|[\\u0D57-\\u0D57]|[\\u0F3E-\\u0F3F]|[\\u0F7F-\\u0F7F]/,\n\n  // Punctuation, Connector\n  Pc: /[_\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]/,\n\n  // Separator, Space\n  Zs: /[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/,\n\n  // These two are not real Unicode categories, but our useful for Ohm.\n  // L is a combination of all the letter categories.\n  // Ltmo is a combination of Lt, Lm, and Lo.\n  L: /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n  Ltmo: /[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]|[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F]|\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0]|[\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst UnicodeCategories = UnicodeCategories$1;\nconst common$j = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// General stuff\n\nclass PExpr$1 {\n  constructor() {\n    if (this.constructor === PExpr$1) {\n      throw new Error(\"PExpr cannot be instantiated -- it's abstract\");\n    }\n  }\n\n  // Set the `source` property to the interval containing the source for this expression.\n  withSource(interval) {\n    if (interval) {\n      this.source = interval.trimmed();\n    }\n    return this;\n  }\n}\n\n// Any\n\nconst any = Object.create(PExpr$1.prototype);\n\n// End\n\nconst end = Object.create(PExpr$1.prototype);\n\n// Terminals\n\nclass Terminal$1 extends PExpr$1 {\n  constructor(obj) {\n    super();\n    this.obj = obj;\n  }\n}\n\n// Ranges\n\nclass Range extends PExpr$1 {\n  constructor(from, to) {\n    super();\n    this.from = from;\n    this.to = to;\n    // If either `from` or `to` is made up of multiple code units, then\n    // the range should consume a full code point, not a single code unit.\n    this.matchCodePoint = from.length > 1 || to.length > 1;\n  }\n}\n\n// Parameters\n\nclass Param extends PExpr$1 {\n  constructor(index) {\n    super();\n    this.index = index;\n  }\n}\n\n// Alternation\n\nclass Alt extends PExpr$1 {\n  constructor(terms) {\n    super();\n    this.terms = terms;\n  }\n}\n\n// Extend is an implementation detail of rule extension\n\nclass Extend extends Alt {\n  constructor(superGrammar, name, body) {\n    const origBody = superGrammar.rules[name].body;\n    super([body, origBody]);\n\n    this.superGrammar = superGrammar;\n    this.name = name;\n    this.body = body;\n  }\n}\n\n// Splice is an implementation detail of rule overriding with the `...` operator.\nclass Splice extends Alt {\n  constructor(superGrammar, ruleName, beforeTerms, afterTerms) {\n    const origBody = superGrammar.rules[ruleName].body;\n    super([...beforeTerms, origBody, ...afterTerms]);\n\n    this.superGrammar = superGrammar;\n    this.ruleName = ruleName;\n    this.expansionPos = beforeTerms.length;\n  }\n}\n\n// Sequences\n\nclass Seq extends PExpr$1 {\n  constructor(factors) {\n    super();\n    this.factors = factors;\n  }\n}\n\n// Iterators and optionals\n\nclass Iter extends PExpr$1 {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\nclass Star extends Iter {}\nclass Plus extends Iter {}\nclass Opt extends Iter {}\n\nStar.prototype.operator = '*';\nPlus.prototype.operator = '+';\nOpt.prototype.operator = '?';\n\nStar.prototype.minNumMatches = 0;\nPlus.prototype.minNumMatches = 1;\nOpt.prototype.minNumMatches = 0;\n\nStar.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nPlus.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nOpt.prototype.maxNumMatches = 1;\n\n// Predicates\n\nclass Not extends PExpr$1 {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\nclass Lookahead extends PExpr$1 {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\n// \"Lexification\"\n\nclass Lex extends PExpr$1 {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\n// Rule application\n\nclass Apply extends PExpr$1 {\n  constructor(ruleName, args = []) {\n    super();\n    this.ruleName = ruleName;\n    this.args = args;\n  }\n\n  isSyntactic() {\n    return common$j.isSyntactic(this.ruleName);\n  }\n\n  // This method just caches the result of `this.toString()` in a non-enumerable property.\n  toMemoKey() {\n    if (!this._memoKey) {\n      Object.defineProperty(this, '_memoKey', {value: this.toString()});\n    }\n    return this._memoKey;\n  }\n}\n\n// Unicode character\n\nclass UnicodeChar extends PExpr$1 {\n  constructor(category) {\n    super();\n    this.category = category;\n    this.pattern = UnicodeCategories[category];\n  }\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\npexprsMain.PExpr = PExpr$1;\npexprsMain.any = any;\npexprsMain.end = end;\npexprsMain.Terminal = Terminal$1;\npexprsMain.Range = Range;\npexprsMain.Param = Param;\npexprsMain.Alt = Alt;\npexprsMain.Extend = Extend;\npexprsMain.Splice = Splice;\npexprsMain.Seq = Seq;\npexprsMain.Iter = Iter;\npexprsMain.Star = Star;\npexprsMain.Plus = Plus;\npexprsMain.Opt = Opt;\npexprsMain.Not = Not;\npexprsMain.Lookahead = Lookahead;\npexprsMain.Lex = Lex;\npexprsMain.Apply = Apply;\npexprsMain.UnicodeChar = UnicodeChar;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$i = common$l;\nconst pexprs$l = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Return true if we should skip spaces preceding this expression in a syntactic context.\n*/\npexprs$l.PExpr.prototype.allowsSkippingPrecedingSpace = common$i.abstract(\n    'allowsSkippingPrecedingSpace'\n);\n\n/*\n  Generally, these are all first-order expressions and (with the exception of Apply)\n  directly read from the input stream.\n*/\npexprs$l.any.allowsSkippingPrecedingSpace =\n  pexprs$l.end.allowsSkippingPrecedingSpace =\n  pexprs$l.Apply.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Terminal.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Range.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.UnicodeChar.prototype.allowsSkippingPrecedingSpace =\n    function() {\n      return true;\n    };\n\n/*\n  Higher-order expressions that don't directly consume input.\n*/\npexprs$l.Alt.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Iter.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Lex.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Lookahead.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Not.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Param.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Seq.prototype.allowsSkippingPrecedingSpace =\n    function() {\n      return false;\n    };\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Namespace$2() {}\nNamespace$2.prototype = Object.create(null);\n\nNamespace$2.asNamespace = function(objOrNamespace) {\n  if (objOrNamespace instanceof Namespace$2) {\n    return objOrNamespace;\n  }\n  return Namespace$2.createNamespace(objOrNamespace);\n};\n\n// Create a new namespace. If `optProps` is specified, all of its properties\n// will be copied to the new namespace.\nNamespace$2.createNamespace = function(optProps) {\n  return Namespace$2.extend(Namespace$2.prototype, optProps);\n};\n\n// Create a new namespace which extends another namespace. If `optProps` is\n// specified, all of its properties will be copied to the new namespace.\nNamespace$2.extend = function(namespace, optProps) {\n  if (namespace !== Namespace$2.prototype && !(namespace instanceof Namespace$2)) {\n    throw new TypeError('not a Namespace object: ' + namespace);\n  }\n  const ns = Object.create(namespace, {\n    constructor: {\n      value: Namespace$2,\n      enumerable: false,\n      writable: true,\n      configurable: true,\n    },\n  });\n  return Object.assign(ns, optProps);\n};\n\n// TODO: Should this be a regular method?\nNamespace$2.toString = function(ns) {\n  return Object.prototype.toString.call(ns);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Namespace_1 = Namespace$2;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst {assert: assert$3} = common$l;\nconst Namespace$1 = Namespace_1;\nconst pexprs$k = pexprsMain;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction createError(message, optInterval) {\n  let e;\n  if (optInterval) {\n    e = new Error(optInterval.getLineAndColumnMessage() + message);\n    e.shortMessage = message;\n    e.interval = optInterval;\n  } else {\n    e = new Error(message);\n  }\n  return e;\n}\n\n// ----------------- errors about intervals -----------------\n\nfunction intervalSourcesDontMatch() {\n  return createError(\"Interval sources don't match\");\n}\n\n// ----------------- errors about grammars -----------------\n\n// Grammar syntax error\n\nfunction grammarSyntaxError(matchFailure) {\n  const e = new Error();\n  Object.defineProperty(e, 'message', {\n    enumerable: true,\n    get() {\n      return matchFailure.message;\n    },\n  });\n  Object.defineProperty(e, 'shortMessage', {\n    enumerable: true,\n    get() {\n      return 'Expected ' + matchFailure.getExpectedText();\n    },\n  });\n  e.interval = matchFailure.getInterval();\n  return e;\n}\n\n// Undeclared grammar\n\nfunction undeclaredGrammar(grammarName, namespace, interval) {\n  const message = namespace ?\n    'Grammar ' +\n      grammarName +\n      ' is not declared in namespace ' +\n      Namespace$1.toString(namespace) :\n    'Undeclared grammar ' + grammarName;\n  return createError(message, interval);\n}\n\n// Duplicate grammar declaration\n\nfunction duplicateGrammarDeclaration(grammar, namespace) {\n  return createError('Grammar ' + grammar.name + ' is already declared in this namespace');\n}\n\n// ----------------- rules -----------------\n\n// Undeclared rule\n\nfunction undeclaredRule(ruleName, grammarName, optInterval) {\n  return createError(\n      'Rule ' + ruleName + ' is not declared in grammar ' + grammarName,\n      optInterval\n  );\n}\n\n// Cannot override undeclared rule\n\nfunction cannotOverrideUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot override rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource\n  );\n}\n\n// Cannot extend undeclared rule\n\nfunction cannotExtendUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot extend rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource\n  );\n}\n\n// Duplicate rule declaration\n\nfunction duplicateRuleDeclaration(ruleName, grammarName, declGrammarName, optSource) {\n  let message =\n    \"Duplicate declaration for rule '\" + ruleName + \"' in grammar '\" + grammarName + \"'\";\n  if (grammarName !== declGrammarName) {\n    message += \" (originally declared in '\" + declGrammarName + \"')\";\n  }\n  return createError(message, optSource);\n}\n\n// Wrong number of parameters\n\nfunction wrongNumberOfParameters(ruleName, expected, actual, source) {\n  return createError(\n      'Wrong number of parameters for rule ' +\n      ruleName +\n      ' (expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      source\n  );\n}\n\n// Wrong number of arguments\n\nfunction wrongNumberOfArguments(ruleName, expected, actual, expr) {\n  return createError(\n      'Wrong number of arguments for rule ' +\n      ruleName +\n      ' (expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      expr\n  );\n}\n\n// Duplicate parameter names\n\nfunction duplicateParameterNames(ruleName, duplicates, source) {\n  return createError(\n      'Duplicate parameter names in rule ' + ruleName + ': ' + duplicates.join(', '),\n      source\n  );\n}\n\n// Invalid parameter expression\n\nfunction invalidParameter(ruleName, expr) {\n  return createError(\n      'Invalid parameter to rule ' +\n      ruleName +\n      ': ' +\n      expr +\n      ' has arity ' +\n      expr.getArity() +\n      ', but parameter expressions must have arity 1',\n      expr.source\n  );\n}\n\n// Application of syntactic rule from lexical rule\n\nconst syntacticVsLexicalNote =\n  'NOTE: A _syntactic rule_ is a rule whose name begins with a capital letter. ' +\n  'See https://git.io/JiYgP for more details.';\n\nfunction applicationOfSyntacticRuleFromLexicalContext(ruleName, applyExpr) {\n  return createError(\n      'Cannot apply syntactic rule ' + ruleName + ' from here (inside a lexical context)',\n      applyExpr.source\n  );\n}\n\n// Lexical rule application used with applySyntactic\n\nfunction applySyntacticWithLexicalRuleApplication(applyExpr) {\n  const {ruleName} = applyExpr;\n  return createError(\n      `applySyntactic is for syntactic rules, but '${ruleName}' is a lexical rule. ` +\n      syntacticVsLexicalNote,\n      applyExpr.source\n  );\n}\n\n// Application of applySyntactic in a syntactic context\n\nfunction unnecessaryExperimentalApplySyntactic(applyExpr) {\n  return createError(\n      'applySyntactic is not required here (in a syntactic context)',\n      applyExpr.source\n  );\n}\n\n// Incorrect argument type\n\nfunction incorrectArgumentType(expectedType, expr) {\n  return createError('Incorrect argument type: expected ' + expectedType, expr.source);\n}\n\n// Multiple instances of the super-splice operator (`...`) in the rule body.\n\nfunction multipleSuperSplices(expr) {\n  return createError(\"'...' can appear at most once in a rule body\", expr.source);\n}\n\n// Unicode code point escapes\n\nfunction invalidCodePoint(applyWrapper) {\n  const node = applyWrapper._node;\n  assert$3(node && node.isNonterminal() && node.ctorName === 'escapeChar_unicodeCodePoint');\n\n  // Get an interval that covers all of the hex digits.\n  const digitIntervals = applyWrapper.children.slice(1, -1).map(d => d.source);\n  const fullInterval = digitIntervals[0].coverageWith(...digitIntervals.slice(1));\n  return createError(\n      `U+${fullInterval.contents} is not a valid Unicode code point`,\n      fullInterval\n  );\n}\n\n// ----------------- Kleene operators -----------------\n\nfunction kleeneExprHasNullableOperand(kleeneExpr, applicationStack) {\n  const actuals =\n    applicationStack.length > 0 ? applicationStack[applicationStack.length - 1].args : [];\n  const expr = kleeneExpr.expr.substituteParams(actuals);\n  let message =\n    'Nullable expression ' +\n    expr +\n    \" is not allowed inside '\" +\n    kleeneExpr.operator +\n    \"' (possible infinite loop)\";\n  if (applicationStack.length > 0) {\n    const stackTrace = applicationStack\n        .map(app => new pexprs$k.Apply(app.ruleName, app.args))\n        .join('\\n');\n    message += '\\nApplication stack (most recent application last):\\n' + stackTrace;\n  }\n  return createError(message, kleeneExpr.expr.source);\n}\n\n// ----------------- arity -----------------\n\nfunction inconsistentArity(ruleName, expected, actual, expr) {\n  return createError(\n      'Rule ' +\n      ruleName +\n      ' involves an alternation which has inconsistent arity ' +\n      '(expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      expr.source\n  );\n}\n\n// ----------------- properties -----------------\n\nfunction duplicatePropertyNames(duplicates) {\n  return createError('Object pattern has duplicate property names: ' + duplicates.join(', '));\n}\n\n// ----------------- constructors -----------------\n\nfunction invalidConstructorCall(grammar, ctorName, children) {\n  return createError(\n      'Attempt to invoke constructor ' + ctorName + ' with invalid or unexpected arguments'\n  );\n}\n\n// ----------------- convenience -----------------\n\nfunction multipleErrors(errors) {\n  const messages = errors.map(e => e.message);\n  return createError(['Errors:'].concat(messages).join('\\n- '), errors[0].interval);\n}\n\n// ----------------- semantic -----------------\n\nfunction missingSemanticAction(ctorName, name, type, stack) {\n  let stackTrace = stack\n      .slice(0, -1)\n      .map(info => {\n        const ans = '  ' + info[0].name + ' > ' + info[1];\n        return info.length === 3 ? ans + \" for '\" + info[2] + \"'\" : ans;\n      })\n      .join('\\n');\n  stackTrace += '\\n  ' + name + ' > ' + ctorName;\n\n  let moreInfo = '';\n  if (ctorName === '_iter') {\n    moreInfo = [\n      '\\nNOTE: as of Ohm v16, there is no default action for iteration nodes — see ',\n      '  https://git.io/JRwtG for details.',\n    ].join('\\n');\n  }\n\n  const message = [\n    `Missing semantic action for '${ctorName}' in ${type} '${name}'.${moreInfo}`,\n    'Action stack (most recent call last):',\n    stackTrace,\n  ].join('\\n');\n\n  const e = createError(message);\n  e.name = 'missingSemanticAction';\n  return e;\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar errors$9 = {\n  applicationOfSyntacticRuleFromLexicalContext,\n  applySyntacticWithLexicalRuleApplication,\n  cannotExtendUndeclaredRule,\n  cannotOverrideUndeclaredRule,\n  duplicateGrammarDeclaration,\n  duplicateParameterNames,\n  duplicatePropertyNames,\n  duplicateRuleDeclaration,\n  inconsistentArity,\n  incorrectArgumentType,\n  intervalSourcesDontMatch,\n  invalidCodePoint,\n  invalidConstructorCall,\n  invalidParameter,\n  grammarSyntaxError,\n  kleeneExprHasNullableOperand,\n  missingSemanticAction,\n  multipleSuperSplices,\n  undeclaredGrammar,\n  undeclaredRule,\n  unnecessaryExperimentalApplySyntactic,\n  wrongNumberOfArguments,\n  wrongNumberOfParameters,\n\n  throwErrors(errors) {\n    if (errors.length === 1) {\n      throw errors[0];\n    }\n    if (errors.length > 1) {\n      throw multipleErrors(errors);\n    }\n  },\n};\n\nvar util$7 = {};\n\n(function (exports) {\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Given an array of numbers `arr`, return an array of the numbers as strings,\n// right-justified and padded to the same length.\nfunction padNumbersToEqualLength(arr) {\n  let maxLen = 0;\n  const strings = arr.map(n => {\n    const str = n.toString();\n    maxLen = Math.max(maxLen, str.length);\n    return str;\n  });\n  return strings.map(s => common.padLeft(s, maxLen));\n}\n\n// Produce a new string that would be the result of copying the contents\n// of the string `src` onto `dest` at offset `offest`.\nfunction strcpy(dest, src, offset) {\n  const origDestLen = dest.length;\n  const start = dest.slice(0, offset);\n  const end = dest.slice(offset + src.length);\n  return (start + src + end).substr(0, origDestLen);\n}\n\n// Casts the underlying lineAndCol object to a formatted message string,\n// highlighting `ranges`.\nfunction lineAndColumnToMessage(...ranges) {\n  const lineAndCol = this;\n  const {offset} = lineAndCol;\n  const {repeatStr} = common;\n\n  const sb = new common.StringBuffer();\n  sb.append('Line ' + lineAndCol.lineNum + ', col ' + lineAndCol.colNum + ':\\n');\n\n  // An array of the previous, current, and next line numbers as strings of equal length.\n  const lineNumbers = padNumbersToEqualLength([\n    lineAndCol.prevLine == null ? 0 : lineAndCol.lineNum - 1,\n    lineAndCol.lineNum,\n    lineAndCol.nextLine == null ? 0 : lineAndCol.lineNum + 1,\n  ]);\n\n  // Helper for appending formatting input lines to the buffer.\n  const appendLine = (num, content, prefix) => {\n    sb.append(prefix + lineNumbers[num] + ' | ' + content + '\\n');\n  };\n\n  // Include the previous line for context if possible.\n  if (lineAndCol.prevLine != null) {\n    appendLine(0, lineAndCol.prevLine, '  ');\n  }\n  // Line that the error occurred on.\n  appendLine(1, lineAndCol.line, '> ');\n\n  // Build up the line that points to the offset and possible indicates one or more ranges.\n  // Start with a blank line, and indicate each range by overlaying a string of `~` chars.\n  const lineLen = lineAndCol.line.length;\n  let indicationLine = repeatStr(' ', lineLen + 1);\n  for (let i = 0; i < ranges.length; ++i) {\n    let startIdx = ranges[i][0];\n    let endIdx = ranges[i][1];\n    common.assert(startIdx >= 0 && startIdx <= endIdx, 'range start must be >= 0 and <= end');\n\n    const lineStartOffset = offset - lineAndCol.colNum + 1;\n    startIdx = Math.max(0, startIdx - lineStartOffset);\n    endIdx = Math.min(endIdx - lineStartOffset, lineLen);\n\n    indicationLine = strcpy(indicationLine, repeatStr('~', endIdx - startIdx), startIdx);\n  }\n  const gutterWidth = 2 + lineNumbers[1].length + 3;\n  sb.append(repeatStr(' ', gutterWidth));\n  indicationLine = strcpy(indicationLine, '^', lineAndCol.colNum - 1);\n  sb.append(indicationLine.replace(/ +$/, '') + '\\n');\n\n  // Include the next line for context if possible.\n  if (lineAndCol.nextLine != null) {\n    appendLine(2, lineAndCol.nextLine, '  ');\n  }\n  return sb.contents();\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nlet builtInRulesCallbacks = [];\n\n// Since Grammar.BuiltInRules is bootstrapped, most of Ohm can't directly depend it.\n// This function allows modules that do depend on the built-in rules to register a callback\n// that will be called later in the initialization process.\nexports.awaitBuiltInRules = cb => {\n  builtInRulesCallbacks.push(cb);\n};\n\nexports.announceBuiltInRules = grammar => {\n  builtInRulesCallbacks.forEach(cb => {\n    cb(grammar);\n  });\n  builtInRulesCallbacks = null;\n};\n\n// Return an object with the line and column information for the given\n// offset in `str`.\nexports.getLineAndColumn = (str, offset) => {\n  let lineNum = 1;\n  let colNum = 1;\n\n  let currOffset = 0;\n  let lineStartOffset = 0;\n\n  let nextLine = null;\n  let prevLine = null;\n  let prevLineStartOffset = -1;\n\n  while (currOffset < offset) {\n    const c = str.charAt(currOffset++);\n    if (c === '\\n') {\n      lineNum++;\n      colNum = 1;\n      prevLineStartOffset = lineStartOffset;\n      lineStartOffset = currOffset;\n    } else if (c !== '\\r') {\n      colNum++;\n    }\n  }\n\n  // Find the end of the target line.\n  let lineEndOffset = str.indexOf('\\n', lineStartOffset);\n  if (lineEndOffset === -1) {\n    lineEndOffset = str.length;\n  } else {\n    // Get the next line.\n    const nextLineEndOffset = str.indexOf('\\n', lineEndOffset + 1);\n    nextLine =\n      nextLineEndOffset === -1 ?\n        str.slice(lineEndOffset) :\n        str.slice(lineEndOffset, nextLineEndOffset);\n    // Strip leading and trailing EOL char(s).\n    nextLine = nextLine.replace(/^\\r?\\n/, '').replace(/\\r$/, '');\n  }\n\n  // Get the previous line.\n  if (prevLineStartOffset >= 0) {\n    // Strip trailing EOL char(s).\n    prevLine = str.slice(prevLineStartOffset, lineStartOffset).replace(/\\r?\\n$/, '');\n  }\n\n  // Get the target line, stripping a trailing carriage return if necessary.\n  const line = str.slice(lineStartOffset, lineEndOffset).replace(/\\r$/, '');\n\n  return {\n    offset,\n    lineNum,\n    colNum,\n    line,\n    prevLine,\n    nextLine,\n    toString: lineAndColumnToMessage,\n  };\n};\n\n// Return a nicely-formatted string describing the line and column for the\n// given offset in `str` highlighting `ranges`.\nexports.getLineAndColumnMessage = function(str, offset, ...ranges) {\n  return exports.getLineAndColumn(str, offset).toString(...ranges);\n};\n\nexports.uniqueId = (() => {\n  let idCounter = 0;\n  return prefix => '' + prefix + idCounter++;\n})();\n}(util$7));\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst {abstract, isSyntactic} = common$l;\nconst errors$8 = errors$9;\nconst pexprs$j = pexprsMain;\nconst util$6 = util$7;\n\nlet BuiltInRules;\n\nutil$6.awaitBuiltInRules(g => {\n  BuiltInRules = g;\n});\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nlet lexifyCount;\n\npexprs$j.PExpr.prototype.assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount = 0;\n  this._assertAllApplicationsAreValid(ruleName, grammar);\n};\n\npexprs$j.PExpr.prototype._assertAllApplicationsAreValid = abstract(\n    '_assertAllApplicationsAreValid'\n);\n\npexprs$j.any._assertAllApplicationsAreValid =\n  pexprs$j.end._assertAllApplicationsAreValid =\n  pexprs$j.Terminal.prototype._assertAllApplicationsAreValid =\n  pexprs$j.Range.prototype._assertAllApplicationsAreValid =\n  pexprs$j.Param.prototype._assertAllApplicationsAreValid =\n  pexprs$j.UnicodeChar.prototype._assertAllApplicationsAreValid =\n    function(ruleName, grammar) {\n      // no-op\n    };\n\npexprs$j.Lex.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount++;\n  this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n  lexifyCount--;\n};\n\npexprs$j.Alt.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\npexprs$j.Seq.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\npexprs$j.Iter.prototype._assertAllApplicationsAreValid =\n  pexprs$j.Not.prototype._assertAllApplicationsAreValid =\n  pexprs$j.Lookahead.prototype._assertAllApplicationsAreValid =\n    function(ruleName, grammar) {\n      this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n    };\n\npexprs$j.Apply.prototype._assertAllApplicationsAreValid = function(\n    ruleName,\n    grammar,\n    skipSyntacticCheck = false\n) {\n  const ruleInfo = grammar.rules[this.ruleName];\n  const isContextSyntactic = isSyntactic(ruleName) && lexifyCount === 0;\n\n  // Make sure that the rule exists...\n  if (!ruleInfo) {\n    throw errors$8.undeclaredRule(this.ruleName, grammar.name, this.source);\n  }\n\n  // ...and that this application is allowed\n  if (!skipSyntacticCheck && isSyntactic(this.ruleName) && !isContextSyntactic) {\n    throw errors$8.applicationOfSyntacticRuleFromLexicalContext(this.ruleName, this);\n  }\n\n  // ...and that this application has the correct number of arguments.\n  const actual = this.args.length;\n  const expected = ruleInfo.formals.length;\n  if (actual !== expected) {\n    throw errors$8.wrongNumberOfArguments(this.ruleName, expected, actual, this.source);\n  }\n\n  const isBuiltInApplySyntactic =\n    BuiltInRules && ruleInfo === BuiltInRules.rules.applySyntactic;\n  const isBuiltInCaseInsensitive =\n    BuiltInRules && ruleInfo === BuiltInRules.rules.caseInsensitive;\n\n  // If it's an application of 'caseInsensitive', ensure that the argument is a Terminal.\n  if (isBuiltInCaseInsensitive) {\n    if (!(this.args[0] instanceof pexprs$j.Terminal)) {\n      throw errors$8.incorrectArgumentType('a Terminal (e.g. \"abc\")', this.args[0]);\n    }\n  }\n\n  if (isBuiltInApplySyntactic) {\n    const arg = this.args[0];\n    if (!(arg instanceof pexprs$j.Apply)) {\n      throw errors$8.incorrectArgumentType('a syntactic rule application', arg);\n    }\n    if (!isSyntactic(arg.ruleName)) {\n      throw errors$8.applySyntacticWithLexicalRuleApplication(arg);\n    }\n    if (isContextSyntactic) {\n      throw errors$8.unnecessaryExperimentalApplySyntactic(this);\n    }\n  }\n\n  // ...and that all of the argument expressions only have valid applications and have arity 1.\n  // If `this` is an application of the built-in applySyntactic rule, then its arg is\n  // allowed (and expected) to be a syntactic rule, even if we're in a lexical context.\n  this.args.forEach(arg => {\n    arg._assertAllApplicationsAreValid(ruleName, grammar, isBuiltInApplySyntactic);\n    if (arg.getArity() !== 1) {\n      throw errors$8.invalidParameter(this.ruleName, arg);\n    }\n  });\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$h = common$l;\nconst errors$7 = errors$9;\nconst pexprs$i = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$i.PExpr.prototype.assertChoicesHaveUniformArity = common$h.abstract(\n    'assertChoicesHaveUniformArity'\n);\n\npexprs$i.any.assertChoicesHaveUniformArity =\n  pexprs$i.end.assertChoicesHaveUniformArity =\n  pexprs$i.Terminal.prototype.assertChoicesHaveUniformArity =\n  pexprs$i.Range.prototype.assertChoicesHaveUniformArity =\n  pexprs$i.Param.prototype.assertChoicesHaveUniformArity =\n  pexprs$i.Lex.prototype.assertChoicesHaveUniformArity =\n  pexprs$i.UnicodeChar.prototype.assertChoicesHaveUniformArity =\n    function(ruleName) {\n      // no-op\n    };\n\npexprs$i.Alt.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  if (this.terms.length === 0) {\n    return;\n  }\n  const arity = this.terms[0].getArity();\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    const term = this.terms[idx];\n    term.assertChoicesHaveUniformArity();\n    const otherArity = term.getArity();\n    if (arity !== otherArity) {\n      throw errors$7.inconsistentArity(ruleName, arity, otherArity, term);\n    }\n  }\n};\n\npexprs$i.Extend.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // Extend is a special case of Alt that's guaranteed to have exactly two\n  // cases: [extensions, origBody].\n  const actualArity = this.terms[0].getArity();\n  const expectedArity = this.terms[1].getArity();\n  if (actualArity !== expectedArity) {\n    throw errors$7.inconsistentArity(ruleName, expectedArity, actualArity, this.terms[0]);\n  }\n};\n\npexprs$i.Seq.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertChoicesHaveUniformArity(ruleName);\n  }\n};\n\npexprs$i.Iter.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\npexprs$i.Not.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // no-op (not required b/c the nested expr doesn't show up in the CST)\n};\n\npexprs$i.Lookahead.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\npexprs$i.Apply.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // The arities of the parameter expressions is required to be 1 by\n  // `assertAllApplicationsAreValid()`.\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$g = common$l;\nconst errors$6 = errors$9;\nconst pexprs$h = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$h.PExpr.prototype.assertIteratedExprsAreNotNullable = common$g.abstract(\n    'assertIteratedExprsAreNotNullable'\n);\n\npexprs$h.any.assertIteratedExprsAreNotNullable =\n  pexprs$h.end.assertIteratedExprsAreNotNullable =\n  pexprs$h.Terminal.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Range.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Param.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.UnicodeChar.prototype.assertIteratedExprsAreNotNullable =\n    function(grammar) {\n      // no-op\n    };\n\npexprs$h.Alt.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx].assertIteratedExprsAreNotNullable(grammar);\n  }\n};\n\npexprs$h.Seq.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertIteratedExprsAreNotNullable(grammar);\n  }\n};\n\npexprs$h.Iter.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  // Note: this is the implementation of this method for `Star` and `Plus` expressions.\n  // It is overridden for `Opt` below.\n  this.expr.assertIteratedExprsAreNotNullable(grammar);\n  if (this.expr.isNullable(grammar)) {\n    throw errors$6.kleeneExprHasNullableOperand(this, []);\n  }\n};\n\npexprs$h.Opt.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Not.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Lookahead.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Lex.prototype.assertIteratedExprsAreNotNullable =\n    function(grammar) {\n      this.expr.assertIteratedExprsAreNotNullable(grammar);\n    };\n\npexprs$h.Apply.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  this.args.forEach(arg => {\n    arg.assertIteratedExprsAreNotNullable(grammar);\n  });\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst {assert: assert$2} = common$l;\nconst errors$5 = errors$9;\nconst util$5 = util$7;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Interval$3(sourceString, startIdx, endIdx) {\n  this.sourceString = sourceString;\n  this.startIdx = startIdx;\n  this.endIdx = endIdx;\n}\n\nInterval$3.coverage = function(firstInterval, ...intervals) {\n  let {startIdx, endIdx} = firstInterval;\n  for (const interval of intervals) {\n    if (interval.sourceString !== firstInterval.sourceString) {\n      throw errors$5.intervalSourcesDontMatch();\n    } else {\n      startIdx = Math.min(startIdx, interval.startIdx);\n      endIdx = Math.max(endIdx, interval.endIdx);\n    }\n  }\n  return new Interval$3(firstInterval.sourceString, startIdx, endIdx);\n};\n\nInterval$3.prototype = {\n  coverageWith(...intervals) {\n    return Interval$3.coverage(...intervals, this);\n  },\n\n  collapsedLeft() {\n    return new Interval$3(this.sourceString, this.startIdx, this.startIdx);\n  },\n\n  collapsedRight() {\n    return new Interval$3(this.sourceString, this.endIdx, this.endIdx);\n  },\n\n  getLineAndColumn() {\n    return util$5.getLineAndColumn(this.sourceString, this.startIdx);\n  },\n\n  getLineAndColumnMessage() {\n    const range = [this.startIdx, this.endIdx];\n    return util$5.getLineAndColumnMessage(this.sourceString, this.startIdx, range);\n  },\n\n  // Returns an array of 0, 1, or 2 intervals that represents the result of the\n  // interval difference operation.\n  minus(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw errors$5.intervalSourcesDontMatch();\n    } else if (this.startIdx === that.startIdx && this.endIdx === that.endIdx) {\n      // `this` and `that` are the same interval!\n      return [];\n    } else if (this.startIdx < that.startIdx && that.endIdx < this.endIdx) {\n      // `that` splits `this` into two intervals\n      return [\n        new Interval$3(this.sourceString, this.startIdx, that.startIdx),\n        new Interval$3(this.sourceString, that.endIdx, this.endIdx),\n      ];\n    } else if (this.startIdx < that.endIdx && that.endIdx < this.endIdx) {\n      // `that` contains a prefix of `this`\n      return [new Interval$3(this.sourceString, that.endIdx, this.endIdx)];\n    } else if (this.startIdx < that.startIdx && that.startIdx < this.endIdx) {\n      // `that` contains a suffix of `this`\n      return [new Interval$3(this.sourceString, this.startIdx, that.startIdx)];\n    } else {\n      // `that` and `this` do not overlap\n      return [this];\n    }\n  },\n\n  // Returns a new Interval that has the same extent as this one, but which is relative\n  // to `that`, an Interval that fully covers this one.\n  relativeTo(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw errors$5.intervalSourcesDontMatch();\n    }\n    assert$2(\n        this.startIdx >= that.startIdx && this.endIdx <= that.endIdx,\n        'other interval does not cover this one'\n    );\n    return new Interval$3(\n        this.sourceString,\n        this.startIdx - that.startIdx,\n        this.endIdx - that.startIdx\n    );\n  },\n\n  // Returns a new Interval which contains the same contents as this one,\n  // but with whitespace trimmed from both ends. (This only makes sense when\n  // the input stream is a string.)\n  trimmed() {\n    const {contents} = this;\n    const startIdx = this.startIdx + contents.match(/^\\s*/)[0].length;\n    const endIdx = this.endIdx - contents.match(/\\s*$/)[0].length;\n    return new Interval$3(this.sourceString, startIdx, endIdx);\n  },\n\n  subInterval(offset, len) {\n    const newStartIdx = this.startIdx + offset;\n    return new Interval$3(this.sourceString, newStartIdx, newStartIdx + len);\n  },\n};\n\nObject.defineProperties(Interval$3.prototype, {\n  contents: {\n    get() {\n      if (this._contents === undefined) {\n        this._contents = this.sourceString.slice(this.startIdx, this.endIdx);\n      }\n      return this._contents;\n    },\n    enumerable: true,\n  },\n  length: {\n    get() {\n      return this.endIdx - this.startIdx;\n    },\n    enumerable: true,\n  },\n});\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Interval_1 = Interval$3;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Interval$2 = Interval_1;\nconst common$f = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Unicode characters that are used in the `toString` output.\nconst BALLOT_X = '\\u2717';\nconst CHECK_MARK = '\\u2713';\nconst DOT_OPERATOR = '\\u22C5';\nconst RIGHTWARDS_DOUBLE_ARROW = '\\u21D2';\nconst SYMBOL_FOR_HORIZONTAL_TABULATION = '\\u2409';\nconst SYMBOL_FOR_LINE_FEED = '\\u240A';\nconst SYMBOL_FOR_CARRIAGE_RETURN = '\\u240D';\n\nconst Flags = {\n  succeeded: 1 << 0,\n  isRootNode: 1 << 1,\n  isImplicitSpaces: 1 << 2,\n  isMemoized: 1 << 3,\n  isHeadOfLeftRecursion: 1 << 4,\n  terminatesLR: 1 << 5,\n};\n\nfunction spaces(n) {\n  return common$f.repeat(' ', n).join('');\n}\n\n// Return a string representation of a portion of `input` at offset `pos`.\n// The result will contain exactly `len` characters.\nfunction getInputExcerpt(input, pos, len) {\n  const excerpt = asEscapedString(input.slice(pos, pos + len));\n\n  // Pad the output if necessary.\n  if (excerpt.length < len) {\n    return excerpt + common$f.repeat(' ', len - excerpt.length).join('');\n  }\n  return excerpt;\n}\n\nfunction asEscapedString(obj) {\n  if (typeof obj === 'string') {\n    // Replace non-printable characters with visible symbols.\n    return obj\n        .replace(/ /g, DOT_OPERATOR)\n        .replace(/\\t/g, SYMBOL_FOR_HORIZONTAL_TABULATION)\n        .replace(/\\n/g, SYMBOL_FOR_LINE_FEED)\n        .replace(/\\r/g, SYMBOL_FOR_CARRIAGE_RETURN);\n  }\n  return String(obj);\n}\n\n// ----------------- Trace -----------------\n\nfunction Trace$2(input, pos1, pos2, expr, succeeded, bindings, optChildren) {\n  this.input = input;\n  this.pos = this.pos1 = pos1;\n  this.pos2 = pos2;\n  this.source = new Interval$2(input, pos1, pos2);\n  this.expr = expr;\n  this.bindings = bindings;\n  this.children = optChildren || [];\n  this.terminatingLREntry = null;\n\n  this._flags = succeeded ? Flags.succeeded : 0;\n}\n\n// A value that can be returned from visitor functions to indicate that a\n// node should not be recursed into.\nTrace$2.prototype.SKIP = {};\n\nObject.defineProperty(Trace$2.prototype, 'displayString', {\n  get() {\n    return this.expr.toDisplayString();\n  },\n});\n\n// For convenience, create a getter and setter for the boolean flags in `Flags`.\nObject.keys(Flags).forEach(name => {\n  const mask = Flags[name];\n  Object.defineProperty(Trace$2.prototype, name, {\n    get() {\n      return (this._flags & mask) !== 0;\n    },\n    set(val) {\n      if (val) {\n        this._flags |= mask;\n      } else {\n        this._flags &= ~mask;\n      }\n    },\n  });\n});\n\nTrace$2.prototype.clone = function() {\n  return this.cloneWithExpr(this.expr);\n};\n\nTrace$2.prototype.cloneWithExpr = function(expr) {\n  const ans = new Trace$2(\n      this.input,\n      this.pos,\n      this.pos2,\n      expr,\n      this.succeeded,\n      this.bindings,\n      this.children\n  );\n\n  ans.isHeadOfLeftRecursion = this.isHeadOfLeftRecursion;\n  ans.isImplicitSpaces = this.isImplicitSpaces;\n  ans.isMemoized = this.isMemoized;\n  ans.isRootNode = this.isRootNode;\n  ans.terminatesLR = this.terminatesLR;\n  ans.terminatingLREntry = this.terminatingLREntry;\n  return ans;\n};\n\n// Record the trace information for the terminating condition of the LR loop.\nTrace$2.prototype.recordLRTermination = function(ruleBodyTrace, value) {\n  this.terminatingLREntry = new Trace$2(\n      this.input,\n      this.pos,\n      this.pos2,\n      this.expr,\n      false,\n      [value],\n      [ruleBodyTrace]\n  );\n  this.terminatingLREntry.terminatesLR = true;\n};\n\n// Recursively traverse this trace node and all its descendents, calling a visitor function\n// for each node that is visited. If `vistorObjOrFn` is an object, then its 'enter' property\n// is a function to call before visiting the children of a node, and its 'exit' property is\n// a function to call afterwards. If `visitorObjOrFn` is a function, it represents the 'enter'\n// function.\n//\n// The functions are called with three arguments: the Trace node, its parent Trace, and a number\n// representing the depth of the node in the tree. (The root node has depth 0.) `optThisArg`, if\n// specified, is the value to use for `this` when executing the visitor functions.\nTrace$2.prototype.walk = function(visitorObjOrFn, optThisArg) {\n  let visitor = visitorObjOrFn;\n  if (typeof visitor === 'function') {\n    visitor = {enter: visitor};\n  }\n\n  function _walk(node, parent, depth) {\n    let recurse = true;\n    if (visitor.enter) {\n      if (visitor.enter.call(optThisArg, node, parent, depth) === Trace$2.prototype.SKIP) {\n        recurse = false;\n      }\n    }\n    if (recurse) {\n      node.children.forEach(child => {\n        _walk(child, node, depth + 1);\n      });\n      if (visitor.exit) {\n        visitor.exit.call(optThisArg, node, parent, depth);\n      }\n    }\n  }\n  if (this.isRootNode) {\n    // Don't visit the root node itself, only its children.\n    this.children.forEach(c => {\n      _walk(c, null, 0);\n    });\n  } else {\n    _walk(this, null, 0);\n  }\n};\n\n// Return a string representation of the trace.\n// Sample:\n//     12⋅+⋅2⋅*⋅3 ✓ exp ⇒  \"12\"\n//     12⋅+⋅2⋅*⋅3   ✓ addExp (LR) ⇒  \"12\"\n//     12⋅+⋅2⋅*⋅3       ✗ addExp_plus\nTrace$2.prototype.toString = function() {\n  const sb = new common$f.StringBuffer();\n  this.walk((node, parent, depth) => {\n    if (!node) {\n      return this.SKIP;\n    }\n    const ctorName = node.expr.constructor.name;\n    // Don't print anything for Alt nodes.\n    if (ctorName === 'Alt') {\n      return; // eslint-disable-line consistent-return\n    }\n    sb.append(getInputExcerpt(node.input, node.pos, 10) + spaces(depth * 2 + 1));\n    sb.append((node.succeeded ? CHECK_MARK : BALLOT_X) + ' ' + node.displayString);\n    if (node.isHeadOfLeftRecursion) {\n      sb.append(' (LR)');\n    }\n    if (node.succeeded) {\n      const contents = asEscapedString(node.source.contents);\n      sb.append(' ' + RIGHTWARDS_DOUBLE_ARROW + '  ');\n      sb.append(typeof contents === 'string' ? '\"' + contents + '\"' : contents);\n    }\n    sb.append('\\n');\n  });\n  return sb.contents();\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Trace_1 = Trace$2;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Trace$1 = Trace_1;\nconst common$e = common$l;\nconst errors$4 = errors$9;\nconst nodes = nodes$1;\nconst pexprs$g = pexprsMain;\n\nconst {TerminalNode: TerminalNode$1} = nodes;\nconst {NonterminalNode} = nodes;\nconst {IterationNode: IterationNode$1} = nodes;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Evaluate the expression and return `true` if it succeeds, `false` otherwise. This method should\n  only be called directly by `State.prototype.eval(expr)`, which also updates the data structures\n  that are used for tracing. (Making those updates in a method of `State` enables the trace-specific\n  data structures to be \"secrets\" of that class, which is good for modularity.)\n\n  The contract of this method is as follows:\n  * When the return value is `true`,\n    - the state object will have `expr.getArity()` more bindings than it did before the call.\n  * When the return value is `false`,\n    - the state object may have more bindings than it did before the call, and\n    - its input stream's position may be anywhere.\n\n  Note that `State.prototype.eval(expr)`, unlike this method, guarantees that neither the state\n  object's bindings nor its input stream's position will change if the expression fails to match.\n*/\npexprs$g.PExpr.prototype.eval = common$e.abstract('eval'); // function(state) { ... }\n\npexprs$g.any.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const ch = inputStream.next();\n  if (ch) {\n    state.pushBinding(new TerminalNode$1(ch.length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs$g.end.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (inputStream.atEnd()) {\n    state.pushBinding(new TerminalNode$1(0), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs$g.Terminal.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (!inputStream.matchString(this.obj)) {\n    state.processFailure(origPos, this);\n    return false;\n  } else {\n    state.pushBinding(new TerminalNode$1(this.obj.length), origPos);\n    return true;\n  }\n};\n\npexprs$g.Range.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n\n  // A range can operate in one of two modes: matching a single, 16-bit _code unit_,\n  // or matching a _code point_. (Code points over 0xFFFF take up two 16-bit code units.)\n  const cp = this.matchCodePoint ? inputStream.nextCodePoint() : inputStream.nextCharCode();\n\n  // Always compare by code point value to get the correct result in all scenarios.\n  // Note that for strings of length 1, codePointAt(0) and charPointAt(0) are equivalent.\n  if (cp !== undefined && this.from.codePointAt(0) <= cp && cp <= this.to.codePointAt(0)) {\n    state.pushBinding(new TerminalNode$1(String.fromCodePoint(cp).length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs$g.Param.prototype.eval = function(state) {\n  return state.eval(state.currentApplication().args[this.index]);\n};\n\npexprs$g.Lex.prototype.eval = function(state) {\n  state.enterLexifiedContext();\n  const ans = state.eval(this.expr);\n  state.exitLexifiedContext();\n  return ans;\n};\n\npexprs$g.Alt.prototype.eval = function(state) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    if (state.eval(this.terms[idx])) {\n      return true;\n    }\n  }\n  return false;\n};\n\npexprs$g.Seq.prototype.eval = function(state) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    const factor = this.factors[idx];\n    if (!state.eval(factor)) {\n      return false;\n    }\n  }\n  return true;\n};\n\npexprs$g.Iter.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const arity = this.getArity();\n  const cols = [];\n  const colOffsets = [];\n  while (cols.length < arity) {\n    cols.push([]);\n    colOffsets.push([]);\n  }\n\n  let numMatches = 0;\n  let prevPos = origPos;\n  let idx;\n  while (numMatches < this.maxNumMatches && state.eval(this.expr)) {\n    if (inputStream.pos === prevPos) {\n      throw errors$4.kleeneExprHasNullableOperand(this, state._applicationStack);\n    }\n    prevPos = inputStream.pos;\n    numMatches++;\n    const row = state._bindings.splice(state._bindings.length - arity, arity);\n    const rowOffsets = state._bindingOffsets.splice(\n        state._bindingOffsets.length - arity,\n        arity\n    );\n    for (idx = 0; idx < row.length; idx++) {\n      cols[idx].push(row[idx]);\n      colOffsets[idx].push(rowOffsets[idx]);\n    }\n  }\n  if (numMatches < this.minNumMatches) {\n    return false;\n  }\n  let offset = state.posToOffset(origPos);\n  let matchLength = 0;\n  if (numMatches > 0) {\n    const lastCol = cols[arity - 1];\n    const lastColOffsets = colOffsets[arity - 1];\n\n    const endOffset =\n      lastColOffsets[lastColOffsets.length - 1] + lastCol[lastCol.length - 1].matchLength;\n    offset = colOffsets[0][0];\n    matchLength = endOffset - offset;\n  }\n  const isOptional = this instanceof pexprs$g.Opt;\n  for (idx = 0; idx < cols.length; idx++) {\n    state._bindings.push(\n        new IterationNode$1(cols[idx], colOffsets[idx], matchLength, isOptional)\n    );\n    state._bindingOffsets.push(offset);\n  }\n  return true;\n};\n\npexprs$g.Not.prototype.eval = function(state) {\n  /*\n    TODO:\n    - Right now we're just throwing away all of the failures that happen inside a `not`, and\n      recording `this` as a failed expression.\n    - Double negation should be equivalent to lookahead, but that's not the case right now wrt\n      failures. E.g., ~~'foo' produces a failure for ~~'foo', but maybe it should produce\n      a failure for 'foo' instead.\n  */\n\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  state.pushFailuresInfo();\n\n  const ans = state.eval(this.expr);\n\n  state.popFailuresInfo();\n  if (ans) {\n    state.processFailure(origPos, this);\n    return false;\n  }\n\n  inputStream.pos = origPos;\n  return true;\n};\n\npexprs$g.Lookahead.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (state.eval(this.expr)) {\n    inputStream.pos = origPos;\n    return true;\n  } else {\n    return false;\n  }\n};\n\npexprs$g.Apply.prototype.eval = function(state) {\n  const caller = state.currentApplication();\n  const actuals = caller ? caller.args : [];\n  const app = this.substituteParams(actuals);\n\n  const posInfo = state.getCurrentPosInfo();\n  if (posInfo.isActive(app)) {\n    // This rule is already active at this position, i.e., it is left-recursive.\n    return app.handleCycle(state);\n  }\n\n  const memoKey = app.toMemoKey();\n  const memoRec = posInfo.memo[memoKey];\n\n  if (memoRec && posInfo.shouldUseMemoizedResult(memoRec)) {\n    if (state.hasNecessaryInfo(memoRec)) {\n      return state.useMemoizedResult(state.inputStream.pos, memoRec);\n    }\n    delete posInfo.memo[memoKey];\n  }\n  return app.reallyEval(state);\n};\n\npexprs$g.Apply.prototype.handleCycle = function(state) {\n  const posInfo = state.getCurrentPosInfo();\n  const {currentLeftRecursion} = posInfo;\n  const memoKey = this.toMemoKey();\n  let memoRec = posInfo.memo[memoKey];\n\n  if (currentLeftRecursion && currentLeftRecursion.headApplication.toMemoKey() === memoKey) {\n    // We already know about this left recursion, but it's possible there are \"involved\n    // applications\" that we don't already know about, so...\n    memoRec.updateInvolvedApplicationMemoKeys();\n  } else if (!memoRec) {\n    // New left recursion detected! Memoize a failure to try to get a seed parse.\n    memoRec = posInfo.memoize(memoKey, {\n      matchLength: 0,\n      examinedLength: 0,\n      value: false,\n      rightmostFailureOffset: -1,\n    });\n    posInfo.startLeftRecursion(this, memoRec);\n  }\n  return state.useMemoizedResult(state.inputStream.pos, memoRec);\n};\n\npexprs$g.Apply.prototype.reallyEval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const origPosInfo = state.getCurrentPosInfo();\n  const ruleInfo = state.grammar.rules[this.ruleName];\n  const {body} = ruleInfo;\n  const {description} = ruleInfo;\n\n  state.enterApplication(origPosInfo, this);\n\n  if (description) {\n    state.pushFailuresInfo();\n  }\n\n  // Reset the input stream's examinedLength property so that we can track\n  // the examined length of this particular application.\n  const origInputStreamExaminedLength = inputStream.examinedLength;\n  inputStream.examinedLength = 0;\n\n  let value = this.evalOnce(body, state);\n  const currentLR = origPosInfo.currentLeftRecursion;\n  const memoKey = this.toMemoKey();\n  const isHeadOfLeftRecursion = currentLR && currentLR.headApplication.toMemoKey() === memoKey;\n  let memoRec;\n\n  if (isHeadOfLeftRecursion) {\n    value = this.growSeedResult(body, state, origPos, currentLR, value);\n    origPosInfo.endLeftRecursion();\n    memoRec = currentLR;\n    memoRec.examinedLength = inputStream.examinedLength - origPos;\n    memoRec.rightmostFailureOffset = state._getRightmostFailureOffset();\n    origPosInfo.memoize(memoKey, memoRec); // updates origPosInfo's maxExaminedLength\n  } else if (!currentLR || !currentLR.isInvolved(memoKey)) {\n    // This application is not involved in left recursion, so it's ok to memoize it.\n    memoRec = origPosInfo.memoize(memoKey, {\n      matchLength: inputStream.pos - origPos,\n      examinedLength: inputStream.examinedLength - origPos,\n      value,\n      failuresAtRightmostPosition: state.cloneRecordedFailures(),\n      rightmostFailureOffset: state._getRightmostFailureOffset(),\n    });\n  }\n  const succeeded = !!value;\n\n  if (description) {\n    state.popFailuresInfo();\n    if (!succeeded) {\n      state.processFailure(origPos, this);\n    }\n    if (memoRec) {\n      memoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n    }\n  }\n\n  // Record trace information in the memo table, so that it is available if the memoized result\n  // is used later.\n  if (state.isTracing() && memoRec) {\n    const entry = state.getTraceEntry(origPos, this, succeeded, succeeded ? [value] : []);\n    if (isHeadOfLeftRecursion) {\n      common$e.assert(entry.terminatingLREntry != null || !succeeded);\n      entry.isHeadOfLeftRecursion = true;\n    }\n    memoRec.traceEntry = entry;\n  }\n\n  // Fix the input stream's examinedLength -- it should be the maximum examined length\n  // across all applications, not just this one.\n  inputStream.examinedLength = Math.max(\n      inputStream.examinedLength,\n      origInputStreamExaminedLength\n  );\n\n  state.exitApplication(origPosInfo, value);\n\n  return succeeded;\n};\n\npexprs$g.Apply.prototype.evalOnce = function(expr, state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n\n  if (state.eval(expr)) {\n    const arity = expr.getArity();\n    const bindings = state._bindings.splice(state._bindings.length - arity, arity);\n    const offsets = state._bindingOffsets.splice(state._bindingOffsets.length - arity, arity);\n    const matchLength = inputStream.pos - origPos;\n    return new NonterminalNode(this.ruleName, bindings, offsets, matchLength);\n  } else {\n    return false;\n  }\n};\n\npexprs$g.Apply.prototype.growSeedResult = function(body, state, origPos, lrMemoRec, newValue) {\n  if (!newValue) {\n    return false;\n  }\n\n  const {inputStream} = state;\n\n  while (true) {\n    lrMemoRec.matchLength = inputStream.pos - origPos;\n    lrMemoRec.value = newValue;\n    lrMemoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n\n    if (state.isTracing()) {\n      // Before evaluating the body again, add a trace node for this application to the memo entry.\n      // Its only child is a copy of the trace node from `newValue`, which will always be the last\n      // element in `state.trace`.\n      const seedTrace = state.trace[state.trace.length - 1];\n      lrMemoRec.traceEntry = new Trace$1(\n          state.input,\n          origPos,\n          inputStream.pos,\n          this,\n          true,\n          [newValue],\n          [seedTrace.clone()]\n      );\n    }\n    inputStream.pos = origPos;\n    newValue = this.evalOnce(body, state);\n    if (inputStream.pos - origPos <= lrMemoRec.matchLength) {\n      break;\n    }\n    if (state.isTracing()) {\n      state.trace.splice(-2, 1); // Drop the trace for the old seed.\n    }\n  }\n  if (state.isTracing()) {\n    // The last entry is for an unused result -- pop it and save it in the \"real\" entry.\n    lrMemoRec.traceEntry.recordLRTermination(state.trace.pop(), newValue);\n  }\n  inputStream.pos = origPos + lrMemoRec.matchLength;\n  return lrMemoRec.value;\n};\n\npexprs$g.UnicodeChar.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const ch = inputStream.next();\n  if (ch && this.pattern.test(ch)) {\n    state.pushBinding(new TerminalNode$1(ch.length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$d = common$l;\nconst pexprs$f = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$f.PExpr.prototype.getArity = common$d.abstract('getArity');\n\npexprs$f.any.getArity =\n  pexprs$f.end.getArity =\n  pexprs$f.Terminal.prototype.getArity =\n  pexprs$f.Range.prototype.getArity =\n  pexprs$f.Param.prototype.getArity =\n  pexprs$f.Apply.prototype.getArity =\n  pexprs$f.UnicodeChar.prototype.getArity =\n    function() {\n      return 1;\n    };\n\npexprs$f.Alt.prototype.getArity = function() {\n  // This is ok b/c all terms must have the same arity -- this property is\n  // checked by the Grammar constructor.\n  return this.terms.length === 0 ? 0 : this.terms[0].getArity();\n};\n\npexprs$f.Seq.prototype.getArity = function() {\n  let arity = 0;\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    arity += this.factors[idx].getArity();\n  }\n  return arity;\n};\n\npexprs$f.Iter.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\npexprs$f.Not.prototype.getArity = function() {\n  return 0;\n};\n\npexprs$f.Lookahead.prototype.getArity = pexprs$f.Lex.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$c = common$l;\nconst pexprs$e = pexprsMain;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction getMetaInfo(expr, grammarInterval) {\n  const metaInfo = {};\n  if (expr.source && grammarInterval) {\n    const adjusted = expr.source.relativeTo(grammarInterval);\n    metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n  }\n  return metaInfo;\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$e.PExpr.prototype.outputRecipe = common$c.abstract('outputRecipe');\n\npexprs$e.any.outputRecipe = function(formals, grammarInterval) {\n  return ['any', getMetaInfo(this, grammarInterval)];\n};\n\npexprs$e.end.outputRecipe = function(formals, grammarInterval) {\n  return ['end', getMetaInfo(this, grammarInterval)];\n};\n\npexprs$e.Terminal.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['terminal', getMetaInfo(this, grammarInterval), this.obj];\n};\n\npexprs$e.Range.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['range', getMetaInfo(this, grammarInterval), this.from, this.to];\n};\n\npexprs$e.Param.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['param', getMetaInfo(this, grammarInterval), this.index];\n};\n\npexprs$e.Alt.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['alt', getMetaInfo(this, grammarInterval)].concat(\n      this.terms.map(term => term.outputRecipe(formals, grammarInterval))\n  );\n};\n\npexprs$e.Extend.prototype.outputRecipe = function(formals, grammarInterval) {\n  const extension = this.terms[0]; // [extension, original]\n  return extension.outputRecipe(formals, grammarInterval);\n};\n\npexprs$e.Splice.prototype.outputRecipe = function(formals, grammarInterval) {\n  const beforeTerms = this.terms.slice(0, this.expansionPos);\n  const afterTerms = this.terms.slice(this.expansionPos + 1);\n  return [\n    'splice',\n    getMetaInfo(this, grammarInterval),\n    beforeTerms.map(term => term.outputRecipe(formals, grammarInterval)),\n    afterTerms.map(term => term.outputRecipe(formals, grammarInterval)),\n  ];\n};\n\npexprs$e.Seq.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['seq', getMetaInfo(this, grammarInterval)].concat(\n      this.factors.map(factor => factor.outputRecipe(formals, grammarInterval))\n  );\n};\n\npexprs$e.Star.prototype.outputRecipe =\n  pexprs$e.Plus.prototype.outputRecipe =\n  pexprs$e.Opt.prototype.outputRecipe =\n  pexprs$e.Not.prototype.outputRecipe =\n  pexprs$e.Lookahead.prototype.outputRecipe =\n  pexprs$e.Lex.prototype.outputRecipe =\n    function(formals, grammarInterval) {\n      return [\n        this.constructor.name.toLowerCase(),\n        getMetaInfo(this, grammarInterval),\n        this.expr.outputRecipe(formals, grammarInterval),\n      ];\n    };\n\npexprs$e.Apply.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'app',\n    getMetaInfo(this, grammarInterval),\n    this.ruleName,\n    this.args.map(arg => arg.outputRecipe(formals, grammarInterval)),\n  ];\n};\n\npexprs$e.UnicodeChar.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['unicodeChar', getMetaInfo(this, grammarInterval), this.category];\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$b = common$l;\nconst pexprs$d = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Called at grammar creation time to rewrite a rule body, replacing each reference to a formal\n  parameter with a `Param` node. Returns a PExpr -- either a new one, or the original one if\n  it was modified in place.\n*/\npexprs$d.PExpr.prototype.introduceParams = common$b.abstract('introduceParams');\n\npexprs$d.any.introduceParams =\n  pexprs$d.end.introduceParams =\n  pexprs$d.Terminal.prototype.introduceParams =\n  pexprs$d.Range.prototype.introduceParams =\n  pexprs$d.Param.prototype.introduceParams =\n  pexprs$d.UnicodeChar.prototype.introduceParams =\n    function(formals) {\n      return this;\n    };\n\npexprs$d.Alt.prototype.introduceParams = function(formals) {\n  this.terms.forEach((term, idx, terms) => {\n    terms[idx] = term.introduceParams(formals);\n  });\n  return this;\n};\n\npexprs$d.Seq.prototype.introduceParams = function(formals) {\n  this.factors.forEach((factor, idx, factors) => {\n    factors[idx] = factor.introduceParams(formals);\n  });\n  return this;\n};\n\npexprs$d.Iter.prototype.introduceParams =\n  pexprs$d.Not.prototype.introduceParams =\n  pexprs$d.Lookahead.prototype.introduceParams =\n  pexprs$d.Lex.prototype.introduceParams =\n    function(formals) {\n      this.expr = this.expr.introduceParams(formals);\n      return this;\n    };\n\npexprs$d.Apply.prototype.introduceParams = function(formals) {\n  const index = formals.indexOf(this.ruleName);\n  if (index >= 0) {\n    if (this.args.length > 0) {\n      // TODO: Should this be supported? See issue #64.\n      throw new Error('Parameterized rules cannot be passed as arguments to another rule.');\n    }\n    return new pexprs$d.Param(index).withSource(this.source);\n  } else {\n    this.args.forEach((arg, idx, args) => {\n      args[idx] = arg.introduceParams(formals);\n    });\n    return this;\n  }\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$a = common$l;\nconst pexprs$c = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns `true` if this parsing expression may accept without consuming any input.\npexprs$c.PExpr.prototype.isNullable = function(grammar) {\n  return this._isNullable(grammar, Object.create(null));\n};\n\npexprs$c.PExpr.prototype._isNullable = common$a.abstract('_isNullable');\n\npexprs$c.any._isNullable =\n  pexprs$c.Range.prototype._isNullable =\n  pexprs$c.Param.prototype._isNullable =\n  pexprs$c.Plus.prototype._isNullable =\n  pexprs$c.UnicodeChar.prototype._isNullable =\n    function(grammar, memo) {\n      return false;\n    };\n\npexprs$c.end._isNullable = function(grammar, memo) {\n  return true;\n};\n\npexprs$c.Terminal.prototype._isNullable = function(grammar, memo) {\n  if (typeof this.obj === 'string') {\n    // This is an over-simplification: it's only correct if the input is a string. If it's an array\n    // or an object, then the empty string parsing expression is not nullable.\n    return this.obj === '';\n  } else {\n    return false;\n  }\n};\n\npexprs$c.Alt.prototype._isNullable = function(grammar, memo) {\n  return this.terms.length === 0 || this.terms.some(term => term._isNullable(grammar, memo));\n};\n\npexprs$c.Seq.prototype._isNullable = function(grammar, memo) {\n  return this.factors.every(factor => factor._isNullable(grammar, memo));\n};\n\npexprs$c.Star.prototype._isNullable =\n  pexprs$c.Opt.prototype._isNullable =\n  pexprs$c.Not.prototype._isNullable =\n  pexprs$c.Lookahead.prototype._isNullable =\n    function(grammar, memo) {\n      return true;\n    };\n\npexprs$c.Lex.prototype._isNullable = function(grammar, memo) {\n  return this.expr._isNullable(grammar, memo);\n};\n\npexprs$c.Apply.prototype._isNullable = function(grammar, memo) {\n  const key = this.toMemoKey();\n  if (!Object.prototype.hasOwnProperty.call(memo, key)) {\n    const {body} = grammar.rules[this.ruleName];\n    const inlined = body.substituteParams(this.args);\n    memo[key] = false; // Prevent infinite recursion for recursive rules.\n    memo[key] = inlined._isNullable(grammar, memo);\n  }\n  return memo[key];\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$9 = common$l;\nconst pexprs$b = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a PExpr that results from recursively replacing every formal parameter (i.e., instance\n  of `Param`) inside this PExpr with its actual value from `actuals` (an Array).\n\n  The receiver must not be modified; a new PExpr must be returned if any replacement is necessary.\n*/\n// function(actuals) { ... }\npexprs$b.PExpr.prototype.substituteParams = common$9.abstract('substituteParams');\n\npexprs$b.any.substituteParams =\n  pexprs$b.end.substituteParams =\n  pexprs$b.Terminal.prototype.substituteParams =\n  pexprs$b.Range.prototype.substituteParams =\n  pexprs$b.UnicodeChar.prototype.substituteParams =\n    function(actuals) {\n      return this;\n    };\n\npexprs$b.Param.prototype.substituteParams = function(actuals) {\n  return actuals[this.index];\n};\n\npexprs$b.Alt.prototype.substituteParams = function(actuals) {\n  return new pexprs$b.Alt(this.terms.map(term => term.substituteParams(actuals)));\n};\n\npexprs$b.Seq.prototype.substituteParams = function(actuals) {\n  return new pexprs$b.Seq(this.factors.map(factor => factor.substituteParams(actuals)));\n};\n\npexprs$b.Iter.prototype.substituteParams =\n  pexprs$b.Not.prototype.substituteParams =\n  pexprs$b.Lookahead.prototype.substituteParams =\n  pexprs$b.Lex.prototype.substituteParams =\n    function(actuals) {\n      return new this.constructor(this.expr.substituteParams(actuals));\n    };\n\npexprs$b.Apply.prototype.substituteParams = function(actuals) {\n  if (this.args.length === 0) {\n    // Avoid making a copy of this application, as an optimization\n    return this;\n  } else {\n    const args = this.args.map(arg => arg.substituteParams(actuals));\n    return new pexprs$b.Apply(this.ruleName, args);\n  }\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$8 = common$l;\nconst pexprs$a = pexprsMain;\n\nconst {copyWithoutDuplicates} = common$8;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction isRestrictedJSIdentifier(str) {\n  return /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(str);\n}\n\nfunction resolveDuplicatedNames(argumentNameList) {\n  // `count` is used to record the number of times each argument name occurs in the list,\n  // this is useful for checking duplicated argument name. It maps argument names to ints.\n  const count = Object.create(null);\n  argumentNameList.forEach(argName => {\n    count[argName] = (count[argName] || 0) + 1;\n  });\n\n  // Append subscripts ('_1', '_2', ...) to duplicate argument names.\n  Object.keys(count).forEach(dupArgName => {\n    if (count[dupArgName] <= 1) {\n      return;\n    }\n\n    // This name shows up more than once, so add subscripts.\n    let subscript = 1;\n    argumentNameList.forEach((argName, idx) => {\n      if (argName === dupArgName) {\n        argumentNameList[idx] = argName + '_' + subscript++;\n      }\n    });\n  });\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a list of strings that will be used as the default argument names for its receiver\n  (a pexpr) in a semantic action. This is used exclusively by the Semantics Editor.\n\n  `firstArgIndex` is the 1-based index of the first argument name that will be generated for this\n  pexpr. It enables us to name arguments positionally, e.g., if the second argument is a\n  non-alphanumeric terminal like \"+\", it will be named '$2'.\n\n  `noDupCheck` is true if the caller of `toArgumentNameList` is not a top level caller. It enables\n  us to avoid nested duplication subscripts appending, e.g., '_1_1', '_1_2', by only checking\n  duplicates at the top level.\n\n  Here is a more elaborate example that illustrates how this method works:\n  `(a \"+\" b).toArgumentNameList(1)` evaluates to `['a', '$2', 'b']` with the following recursive\n  calls:\n\n    (a).toArgumentNameList(1) -> ['a'],\n    (\"+\").toArgumentNameList(2) -> ['$2'],\n    (b).toArgumentNameList(3) -> ['b']\n\n  Notes:\n  * This method must only be called on well-formed expressions, e.g., the receiver must\n    not have any Alt sub-expressions with inconsistent arities.\n  * e.getArity() === e.toArgumentNameList(1).length\n*/\n// function(firstArgIndex, noDupCheck) { ... }\npexprs$a.PExpr.prototype.toArgumentNameList = common$8.abstract('toArgumentNameList');\n\npexprs$a.any.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['any'];\n};\n\npexprs$a.end.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['end'];\n};\n\npexprs$a.Terminal.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  if (typeof this.obj === 'string' && /^[_a-zA-Z0-9]+$/.test(this.obj)) {\n    // If this terminal is a valid suffix for a JS identifier, just prepend it with '_'\n    return ['_' + this.obj];\n  } else {\n    // Otherwise, name it positionally.\n    return ['$' + firstArgIndex];\n  }\n};\n\npexprs$a.Range.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  let argName = this.from + '_to_' + this.to;\n  // If the `argName` is not valid then try to prepend a `_`.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '_' + argName;\n  }\n  // If the `argName` still not valid after prepending a `_`, then name it positionally.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '$' + firstArgIndex;\n  }\n  return [argName];\n};\n\npexprs$a.Alt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // `termArgNameLists` is an array of arrays where each row is the\n  // argument name list that corresponds to a term in this alternation.\n  const termArgNameLists = this.terms.map(term =>\n    term.toArgumentNameList(firstArgIndex, true)\n  );\n\n  const argumentNameList = [];\n  const numArgs = termArgNameLists[0].length;\n  for (let colIdx = 0; colIdx < numArgs; colIdx++) {\n    const col = [];\n    for (let rowIdx = 0; rowIdx < this.terms.length; rowIdx++) {\n      col.push(termArgNameLists[rowIdx][colIdx]);\n    }\n    const uniqueNames = copyWithoutDuplicates(col);\n    argumentNameList.push(uniqueNames.join('_or_'));\n  }\n\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs$a.Seq.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // Generate the argument name list, without worrying about duplicates.\n  let argumentNameList = [];\n  this.factors.forEach(factor => {\n    const factorArgumentNameList = factor.toArgumentNameList(firstArgIndex, true);\n    argumentNameList = argumentNameList.concat(factorArgumentNameList);\n\n    // Shift the firstArgIndex to take this factor's argument names into account.\n    firstArgIndex += factorArgumentNameList.length;\n  });\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs$a.Iter.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  const argumentNameList = this.expr\n      .toArgumentNameList(firstArgIndex, noDupCheck)\n      .map(exprArgumentString =>\n      exprArgumentString[exprArgumentString.length - 1] === 's' ?\n        exprArgumentString + 'es' :\n        exprArgumentString + 's'\n      );\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs$a.Opt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return this.expr.toArgumentNameList(firstArgIndex, noDupCheck).map(argName => {\n    return 'opt' + argName[0].toUpperCase() + argName.slice(1);\n  });\n};\n\npexprs$a.Not.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [];\n};\n\npexprs$a.Lookahead.prototype.toArgumentNameList = pexprs$a.Lex.prototype.toArgumentNameList =\n  function(firstArgIndex, noDupCheck) {\n    return this.expr.toArgumentNameList(firstArgIndex, noDupCheck);\n  };\n\npexprs$a.Apply.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [this.ruleName];\n};\n\npexprs$a.UnicodeChar.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['$' + firstArgIndex];\n};\n\npexprs$a.Param.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['param' + this.index];\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$7 = common$l;\nconst pexprs$9 = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns a string representing the PExpr, for use as a UI label, etc.\npexprs$9.PExpr.prototype.toDisplayString = common$7.abstract('toDisplayString');\n\npexprs$9.Alt.prototype.toDisplayString = pexprs$9.Seq.prototype.toDisplayString = function() {\n  if (this.source) {\n    return this.source.trimmed().contents;\n  }\n  return '[' + this.constructor.name + ']';\n};\n\npexprs$9.any.toDisplayString =\n  pexprs$9.end.toDisplayString =\n  pexprs$9.Iter.prototype.toDisplayString =\n  pexprs$9.Not.prototype.toDisplayString =\n  pexprs$9.Lookahead.prototype.toDisplayString =\n  pexprs$9.Lex.prototype.toDisplayString =\n  pexprs$9.Terminal.prototype.toDisplayString =\n  pexprs$9.Range.prototype.toDisplayString =\n  pexprs$9.Param.prototype.toDisplayString =\n    function() {\n      return this.toString();\n    };\n\npexprs$9.Apply.prototype.toDisplayString = function() {\n  if (this.args.length > 0) {\n    const ps = this.args.map(arg => arg.toDisplayString());\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\npexprs$9.UnicodeChar.prototype.toDisplayString = function() {\n  return 'Unicode [' + this.category + '] character';\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Failure$1 = Failure_1;\nconst common$6 = common$l;\nconst pexprs$8 = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$8.PExpr.prototype.toFailure = common$6.abstract('toFailure');\n\npexprs$8.any.toFailure = function(grammar) {\n  return new Failure$1(this, 'any object', 'description');\n};\n\npexprs$8.end.toFailure = function(grammar) {\n  return new Failure$1(this, 'end of input', 'description');\n};\n\npexprs$8.Terminal.prototype.toFailure = function(grammar) {\n  return new Failure$1(this, this.obj, 'string');\n};\n\npexprs$8.Range.prototype.toFailure = function(grammar) {\n  // TODO: come up with something better\n  return new Failure$1(this, JSON.stringify(this.from) + '..' + JSON.stringify(this.to), 'code');\n};\n\npexprs$8.Not.prototype.toFailure = function(grammar) {\n  const description =\n    this.expr === pexprs$8.any ? 'nothing' : 'not ' + this.expr.toFailure(grammar);\n  return new Failure$1(this, description, 'description');\n};\n\npexprs$8.Lookahead.prototype.toFailure = function(grammar) {\n  return this.expr.toFailure(grammar);\n};\n\npexprs$8.Apply.prototype.toFailure = function(grammar) {\n  let {description} = grammar.rules[this.ruleName];\n  if (!description) {\n    const article = /^[aeiouAEIOU]/.test(this.ruleName) ? 'an' : 'a';\n    description = article + ' ' + this.ruleName;\n  }\n  return new Failure$1(this, description, 'description');\n};\n\npexprs$8.UnicodeChar.prototype.toFailure = function(grammar) {\n  return new Failure$1(this, 'a Unicode [' + this.category + '] character', 'description');\n};\n\npexprs$8.Alt.prototype.toFailure = function(grammar) {\n  const fs = this.terms.map(t => t.toFailure(grammar));\n  const description = '(' + fs.join(' or ') + ')';\n  return new Failure$1(this, description, 'description');\n};\n\npexprs$8.Seq.prototype.toFailure = function(grammar) {\n  const fs = this.factors.map(f => f.toFailure(grammar));\n  const description = '(' + fs.join(' ') + ')';\n  return new Failure$1(this, description, 'description');\n};\n\npexprs$8.Iter.prototype.toFailure = function(grammar) {\n  const description = '(' + this.expr.toFailure(grammar) + this.operator + ')';\n  return new Failure$1(this, description, 'description');\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$5 = common$l;\nconst pexprs$7 = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  e1.toString() === e2.toString() ==> e1 and e2 are semantically equivalent.\n  Note that this is not an iff (<==>): e.g.,\n  (~\"b\" \"a\").toString() !== (\"a\").toString(), even though\n  ~\"b\" \"a\" and \"a\" are interchangeable in any grammar,\n  both in terms of the languages they accept and their arities.\n*/\npexprs$7.PExpr.prototype.toString = common$5.abstract('toString');\n\npexprs$7.any.toString = function() {\n  return 'any';\n};\n\npexprs$7.end.toString = function() {\n  return 'end';\n};\n\npexprs$7.Terminal.prototype.toString = function() {\n  return JSON.stringify(this.obj);\n};\n\npexprs$7.Range.prototype.toString = function() {\n  return JSON.stringify(this.from) + '..' + JSON.stringify(this.to);\n};\n\npexprs$7.Param.prototype.toString = function() {\n  return '$' + this.index;\n};\n\npexprs$7.Lex.prototype.toString = function() {\n  return '#(' + this.expr.toString() + ')';\n};\n\npexprs$7.Alt.prototype.toString = function() {\n  return this.terms.length === 1 ?\n    this.terms[0].toString() :\n    '(' + this.terms.map(term => term.toString()).join(' | ') + ')';\n};\n\npexprs$7.Seq.prototype.toString = function() {\n  return this.factors.length === 1 ?\n    this.factors[0].toString() :\n    '(' + this.factors.map(factor => factor.toString()).join(' ') + ')';\n};\n\npexprs$7.Iter.prototype.toString = function() {\n  return this.expr + this.operator;\n};\n\npexprs$7.Not.prototype.toString = function() {\n  return '~' + this.expr;\n};\n\npexprs$7.Lookahead.prototype.toString = function() {\n  return '&' + this.expr;\n};\n\npexprs$7.Apply.prototype.toString = function() {\n  if (this.args.length > 0) {\n    const ps = this.args.map(arg => arg.toString());\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\npexprs$7.UnicodeChar.prototype.toString = function() {\n  return '\\\\p{' + this.category + '}';\n};\n\n// --------------------------------------------------------------------\n// Re-export classes\n// --------------------------------------------------------------------\n\nvar pexprs$6 = pexprsMain;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Failure = Failure_1;\nconst {TerminalNode} = nodes$1;\nconst {assert: assert$1} = common$l;\nconst {PExpr, Terminal} = pexprs$6;\n\nclass CaseInsensitiveTerminal$1 extends PExpr {\n  constructor(param) {\n    super();\n    this.obj = param;\n  }\n\n  _getString(state) {\n    const terminal = state.currentApplication().args[this.obj.index];\n    assert$1(terminal instanceof Terminal, 'expected a Terminal expression');\n    return terminal.obj;\n  }\n\n  // Implementation of the PExpr API\n\n  allowsSkippingPrecedingSpace() {\n    return true;\n  }\n\n  eval(state) {\n    const {inputStream} = state;\n    const origPos = inputStream.pos;\n    const matchStr = this._getString(state);\n    if (!inputStream.matchString(matchStr, true)) {\n      state.processFailure(origPos, this);\n      return false;\n    } else {\n      state.pushBinding(new TerminalNode(matchStr.length), origPos);\n      return true;\n    }\n  }\n\n  getArity() {\n    return 1;\n  }\n\n  substituteParams(actuals) {\n    return new CaseInsensitiveTerminal$1(this.obj.substituteParams(actuals));\n  }\n\n  toDisplayString() {\n    return this.obj.toDisplayString() + ' (case-insensitive)';\n  }\n\n  toFailure(grammar) {\n    return new Failure(\n        this,\n        this.obj.toFailure(grammar) + ' (case-insensitive)',\n        'description'\n    );\n  }\n\n  _isNullable(grammar, memo) {\n    return this.obj._isNullable(grammar, memo);\n  }\n}\n\nvar CaseInsensitiveTerminal_1 = CaseInsensitiveTerminal$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Interval$1 = Interval_1;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction InputStream$3(source) {\n  this.source = source;\n  this.pos = 0;\n  this.examinedLength = 0;\n}\n\nInputStream$3.prototype = {\n  atEnd() {\n    const ans = this.pos === this.source.length;\n    this.examinedLength = Math.max(this.examinedLength, this.pos + 1);\n    return ans;\n  },\n\n  next() {\n    const ans = this.source[this.pos++];\n    this.examinedLength = Math.max(this.examinedLength, this.pos);\n    return ans;\n  },\n\n  nextCharCode() {\n    const nextChar = this.next();\n    return nextChar && nextChar.charCodeAt(0);\n  },\n\n  nextCodePoint() {\n    const cp = this.source.slice(this.pos++).codePointAt(0);\n    // If the code point is beyond plane 0, it takes up two characters.\n    if (cp > 0xffff) {\n      this.pos += 1;\n    }\n    this.examinedLength = Math.max(this.examinedLength, this.pos);\n    return cp;\n  },\n\n  matchString(s, optIgnoreCase) {\n    let idx;\n    if (optIgnoreCase) {\n      /*\n        Case-insensitive comparison is a tricky business. Some notable gotchas include the\n        \"Turkish I\" problem (http://www.i18nguy.com/unicode/turkish-i18n.html) and the fact\n        that the German Esszet (ß) turns into \"SS\" in upper case.\n\n        This is intended to be a locale-invariant comparison, which means it may not obey\n        locale-specific expectations (e.g. \"i\" => \"İ\").\n       */\n      for (idx = 0; idx < s.length; idx++) {\n        const actual = this.next();\n        const expected = s[idx];\n        if (actual == null || actual.toUpperCase() !== expected.toUpperCase()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    // Default is case-sensitive comparison.\n    for (idx = 0; idx < s.length; idx++) {\n      if (this.next() !== s[idx]) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  sourceSlice(startIdx, endIdx) {\n    return this.source.slice(startIdx, endIdx);\n  },\n\n  interval(startIdx, optEndIdx) {\n    return new Interval$1(this.source, startIdx, optEndIdx ? optEndIdx : this.pos);\n  },\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar InputStream_1 = InputStream$3;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$4 = common$l;\nconst util$4 = util$7;\nconst Interval = Interval_1;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction MatchResult$2(\n    matcher,\n    input,\n    startExpr,\n    cst,\n    cstOffset,\n    rightmostFailurePosition,\n    optRecordedFailures\n) {\n  this.matcher = matcher;\n  this.input = input;\n  this.startExpr = startExpr;\n  this._cst = cst;\n  this._cstOffset = cstOffset;\n  this._rightmostFailurePosition = rightmostFailurePosition;\n  this._rightmostFailures = optRecordedFailures;\n\n  if (this.failed()) {\n    /* eslint-disable no-invalid-this */\n    common$4.defineLazyProperty(this, 'message', function() {\n      const detail = 'Expected ' + this.getExpectedText();\n      return (\n        util$4.getLineAndColumnMessage(this.input, this.getRightmostFailurePosition()) + detail\n      );\n    });\n    common$4.defineLazyProperty(this, 'shortMessage', function() {\n      const detail = 'expected ' + this.getExpectedText();\n      const errorInfo = util$4.getLineAndColumn(this.input, this.getRightmostFailurePosition());\n      return 'Line ' + errorInfo.lineNum + ', col ' + errorInfo.colNum + ': ' + detail;\n    });\n    /* eslint-enable no-invalid-this */\n  }\n}\n\nMatchResult$2.prototype.succeeded = function() {\n  return !!this._cst;\n};\n\nMatchResult$2.prototype.failed = function() {\n  return !this.succeeded();\n};\n\nMatchResult$2.prototype.getRightmostFailurePosition = function() {\n  return this._rightmostFailurePosition;\n};\n\nMatchResult$2.prototype.getRightmostFailures = function() {\n  if (!this._rightmostFailures) {\n    this.matcher.setInput(this.input);\n    const matchResultWithFailures = this.matcher._match(\n        this.startExpr,\n        false,\n        this.getRightmostFailurePosition()\n    );\n    this._rightmostFailures = matchResultWithFailures.getRightmostFailures();\n  }\n  return this._rightmostFailures;\n};\n\nMatchResult$2.prototype.toString = function() {\n  return this.succeeded() ?\n    '[match succeeded]' :\n    '[match failed at position ' + this.getRightmostFailurePosition() + ']';\n};\n\n// Return a string summarizing the expected contents of the input stream when\n// the match failure occurred.\nMatchResult$2.prototype.getExpectedText = function() {\n  if (this.succeeded()) {\n    throw new Error('cannot get expected text of a successful MatchResult');\n  }\n\n  const sb = new common$4.StringBuffer();\n  let failures = this.getRightmostFailures();\n\n  // Filter out the fluffy failures to make the default error messages more useful\n  failures = failures.filter(failure => !failure.isFluffy());\n\n  for (let idx = 0; idx < failures.length; idx++) {\n    if (idx > 0) {\n      if (idx === failures.length - 1) {\n        sb.append(failures.length > 2 ? ', or ' : ' or ');\n      } else {\n        sb.append(', ');\n      }\n    }\n    sb.append(failures[idx].toString());\n  }\n  return sb.contents();\n};\n\nMatchResult$2.prototype.getInterval = function() {\n  const pos = this.getRightmostFailurePosition();\n  return new Interval(this.input, pos, pos);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar MatchResult_1 = MatchResult$2;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction PosInfo$1() {\n  this.applicationMemoKeyStack = []; // active applications at this position\n  this.memo = {};\n  this.maxExaminedLength = 0;\n  this.maxRightmostFailureOffset = -1;\n  this.currentLeftRecursion = undefined;\n}\n\nPosInfo$1.prototype = {\n  isActive(application) {\n    return this.applicationMemoKeyStack.indexOf(application.toMemoKey()) >= 0;\n  },\n\n  enter(application) {\n    this.applicationMemoKeyStack.push(application.toMemoKey());\n  },\n\n  exit() {\n    this.applicationMemoKeyStack.pop();\n  },\n\n  startLeftRecursion(headApplication, memoRec) {\n    memoRec.isLeftRecursion = true;\n    memoRec.headApplication = headApplication;\n    memoRec.nextLeftRecursion = this.currentLeftRecursion;\n    this.currentLeftRecursion = memoRec;\n\n    const {applicationMemoKeyStack} = this;\n    const indexOfFirstInvolvedRule =\n      applicationMemoKeyStack.indexOf(headApplication.toMemoKey()) + 1;\n    const involvedApplicationMemoKeys = applicationMemoKeyStack.slice(\n        indexOfFirstInvolvedRule\n    );\n\n    memoRec.isInvolved = function(applicationMemoKey) {\n      return involvedApplicationMemoKeys.indexOf(applicationMemoKey) >= 0;\n    };\n\n    memoRec.updateInvolvedApplicationMemoKeys = function() {\n      for (let idx = indexOfFirstInvolvedRule; idx < applicationMemoKeyStack.length; idx++) {\n        const applicationMemoKey = applicationMemoKeyStack[idx];\n        if (!this.isInvolved(applicationMemoKey)) {\n          involvedApplicationMemoKeys.push(applicationMemoKey);\n        }\n      }\n    };\n  },\n\n  endLeftRecursion() {\n    this.currentLeftRecursion = this.currentLeftRecursion.nextLeftRecursion;\n  },\n\n  // Note: this method doesn't get called for the \"head\" of a left recursion -- for LR heads,\n  // the memoized result (which starts out being a failure) is always used.\n  shouldUseMemoizedResult(memoRec) {\n    if (!memoRec.isLeftRecursion) {\n      return true;\n    }\n    const {applicationMemoKeyStack} = this;\n    for (let idx = 0; idx < applicationMemoKeyStack.length; idx++) {\n      const applicationMemoKey = applicationMemoKeyStack[idx];\n      if (memoRec.isInvolved(applicationMemoKey)) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  memoize(memoKey, memoRec) {\n    this.memo[memoKey] = memoRec;\n    this.maxExaminedLength = Math.max(this.maxExaminedLength, memoRec.examinedLength);\n    this.maxRightmostFailureOffset = Math.max(\n        this.maxRightmostFailureOffset,\n        memoRec.rightmostFailureOffset\n    );\n    return memoRec;\n  },\n\n  clearObsoleteEntries(pos, invalidatedIdx) {\n    if (pos + this.maxExaminedLength <= invalidatedIdx) {\n      // Optimization: none of the rule applications that were memoized here examined the\n      // interval of the input that changed, so nothing has to be invalidated.\n      return;\n    }\n\n    const {memo} = this;\n    this.maxExaminedLength = 0;\n    this.maxRightmostFailureOffset = -1;\n    Object.keys(memo).forEach(k => {\n      const memoRec = memo[k];\n      if (pos + memoRec.examinedLength > invalidatedIdx) {\n        delete memo[k];\n      } else {\n        this.maxExaminedLength = Math.max(this.maxExaminedLength, memoRec.examinedLength);\n        this.maxRightmostFailureOffset = Math.max(\n            this.maxRightmostFailureOffset,\n            memoRec.rightmostFailureOffset\n        );\n      }\n    });\n  },\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar PosInfo_1 = PosInfo$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst InputStream$2 = InputStream_1;\nconst MatchResult$1 = MatchResult_1;\nconst PosInfo = PosInfo_1;\nconst Trace = Trace_1;\nconst pexprs$5 = pexprs$6;\nconst util$3 = util$7;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nlet builtInApplySyntacticBody;\n\nutil$3.awaitBuiltInRules(builtInRules => {\n  builtInApplySyntacticBody = builtInRules.rules.applySyntactic.body;\n});\n\nconst applySpaces = new pexprs$5.Apply('spaces');\n\nfunction MatchState$1(matcher, startExpr, optPositionToRecordFailures) {\n  this.matcher = matcher;\n  this.startExpr = startExpr;\n\n  this.grammar = matcher.grammar;\n  this.input = matcher.input;\n  this.inputStream = new InputStream$2(matcher.input);\n  this.memoTable = matcher.memoTable;\n\n  this._bindings = [];\n  this._bindingOffsets = [];\n  this._applicationStack = [];\n  this._posStack = [0];\n  this.inLexifiedContextStack = [false];\n\n  this.rightmostFailurePosition = -1;\n  this._rightmostFailurePositionStack = [];\n  this._recordedFailuresStack = [];\n\n  if (optPositionToRecordFailures !== undefined) {\n    this.positionToRecordFailures = optPositionToRecordFailures;\n    this.recordedFailures = Object.create(null);\n  }\n}\n\nMatchState$1.prototype = {\n  posToOffset(pos) {\n    return pos - this._posStack[this._posStack.length - 1];\n  },\n\n  enterApplication(posInfo, app) {\n    this._posStack.push(this.inputStream.pos);\n    this._applicationStack.push(app);\n    this.inLexifiedContextStack.push(false);\n    posInfo.enter(app);\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this.rightmostFailurePosition = -1;\n  },\n\n  exitApplication(posInfo, optNode) {\n    const origPos = this._posStack.pop();\n    this._applicationStack.pop();\n    this.inLexifiedContextStack.pop();\n    posInfo.exit();\n\n    this.rightmostFailurePosition = Math.max(\n        this.rightmostFailurePosition,\n        this._rightmostFailurePositionStack.pop()\n    );\n\n    if (optNode) {\n      this.pushBinding(optNode, origPos);\n    }\n  },\n\n  enterLexifiedContext() {\n    this.inLexifiedContextStack.push(true);\n  },\n\n  exitLexifiedContext() {\n    this.inLexifiedContextStack.pop();\n  },\n\n  currentApplication() {\n    return this._applicationStack[this._applicationStack.length - 1];\n  },\n\n  inSyntacticContext() {\n    const currentApplication = this.currentApplication();\n    if (currentApplication) {\n      return currentApplication.isSyntactic() && !this.inLexifiedContext();\n    } else {\n      // The top-level context is syntactic if the start application is.\n      return this.startExpr.factors[0].isSyntactic();\n    }\n  },\n\n  inLexifiedContext() {\n    return this.inLexifiedContextStack[this.inLexifiedContextStack.length - 1];\n  },\n\n  skipSpaces() {\n    this.pushFailuresInfo();\n    this.eval(applySpaces);\n    this.popBinding();\n    this.popFailuresInfo();\n    return this.inputStream.pos;\n  },\n\n  skipSpacesIfInSyntacticContext() {\n    return this.inSyntacticContext() ? this.skipSpaces() : this.inputStream.pos;\n  },\n\n  maybeSkipSpacesBefore(expr) {\n    if (expr.allowsSkippingPrecedingSpace() && expr !== applySpaces) {\n      return this.skipSpacesIfInSyntacticContext();\n    } else {\n      return this.inputStream.pos;\n    }\n  },\n\n  pushBinding(node, origPos) {\n    this._bindings.push(node);\n    this._bindingOffsets.push(this.posToOffset(origPos));\n  },\n\n  popBinding() {\n    this._bindings.pop();\n    this._bindingOffsets.pop();\n  },\n\n  numBindings() {\n    return this._bindings.length;\n  },\n\n  truncateBindings(newLength) {\n    // Yes, this is this really faster than setting the `length` property (tested with\n    // bin/es5bench on Node v6.1.0).\n    // Update 2021-10-25: still true on v14.15.5 — it's ~20% speedup on es5bench.\n    while (this._bindings.length > newLength) {\n      this.popBinding();\n    }\n  },\n\n  getCurrentPosInfo() {\n    return this.getPosInfo(this.inputStream.pos);\n  },\n\n  getPosInfo(pos) {\n    let posInfo = this.memoTable[pos];\n    if (!posInfo) {\n      posInfo = this.memoTable[pos] = new PosInfo();\n    }\n    return posInfo;\n  },\n\n  processFailure(pos, expr) {\n    this.rightmostFailurePosition = Math.max(this.rightmostFailurePosition, pos);\n\n    if (this.recordedFailures && pos === this.positionToRecordFailures) {\n      const app = this.currentApplication();\n      if (app) {\n        // Substitute parameters with the actual pexprs that were passed to\n        // the current rule.\n        expr = expr.substituteParams(app.args);\n      }\n\n      this.recordFailure(expr.toFailure(this.grammar), false);\n    }\n  },\n\n  recordFailure(failure, shouldCloneIfNew) {\n    const key = failure.toKey();\n    if (!this.recordedFailures[key]) {\n      this.recordedFailures[key] = shouldCloneIfNew ? failure.clone() : failure;\n    } else if (this.recordedFailures[key].isFluffy() && !failure.isFluffy()) {\n      this.recordedFailures[key].clearFluffy();\n    }\n  },\n\n  recordFailures(failures, shouldCloneIfNew) {\n    Object.keys(failures).forEach(key => {\n      this.recordFailure(failures[key], shouldCloneIfNew);\n    });\n  },\n\n  cloneRecordedFailures() {\n    if (!this.recordedFailures) {\n      return undefined;\n    }\n\n    const ans = Object.create(null);\n    Object.keys(this.recordedFailures).forEach(key => {\n      ans[key] = this.recordedFailures[key].clone();\n    });\n    return ans;\n  },\n\n  getRightmostFailurePosition() {\n    return this.rightmostFailurePosition;\n  },\n\n  _getRightmostFailureOffset() {\n    return this.rightmostFailurePosition >= 0 ?\n      this.posToOffset(this.rightmostFailurePosition) :\n      -1;\n  },\n\n  // Returns the memoized trace entry for `expr` at `pos`, if one exists, `null` otherwise.\n  getMemoizedTraceEntry(pos, expr) {\n    const posInfo = this.memoTable[pos];\n    if (posInfo && expr instanceof pexprs$5.Apply) {\n      const memoRec = posInfo.memo[expr.toMemoKey()];\n      if (memoRec && memoRec.traceEntry) {\n        const entry = memoRec.traceEntry.cloneWithExpr(expr);\n        entry.isMemoized = true;\n        return entry;\n      }\n    }\n    return null;\n  },\n\n  // Returns a new trace entry, with the currently active trace array as its children.\n  getTraceEntry(pos, expr, succeeded, bindings) {\n    if (expr instanceof pexprs$5.Apply) {\n      const app = this.currentApplication();\n      const actuals = app ? app.args : [];\n      expr = expr.substituteParams(actuals);\n    }\n    return (\n      this.getMemoizedTraceEntry(pos, expr) ||\n      new Trace(this.input, pos, this.inputStream.pos, expr, succeeded, bindings, this.trace)\n    );\n  },\n\n  isTracing() {\n    return !!this.trace;\n  },\n\n  hasNecessaryInfo(memoRec) {\n    if (this.trace && !memoRec.traceEntry) {\n      return false;\n    }\n\n    if (\n      this.recordedFailures &&\n      this.inputStream.pos + memoRec.rightmostFailureOffset === this.positionToRecordFailures\n    ) {\n      return !!memoRec.failuresAtRightmostPosition;\n    }\n\n    return true;\n  },\n\n  useMemoizedResult(origPos, memoRec) {\n    if (this.trace) {\n      this.trace.push(memoRec.traceEntry);\n    }\n\n    const memoRecRightmostFailurePosition =\n      this.inputStream.pos + memoRec.rightmostFailureOffset;\n    this.rightmostFailurePosition = Math.max(\n        this.rightmostFailurePosition,\n        memoRecRightmostFailurePosition\n    );\n    if (\n      this.recordedFailures &&\n      this.positionToRecordFailures === memoRecRightmostFailurePosition &&\n      memoRec.failuresAtRightmostPosition\n    ) {\n      this.recordFailures(memoRec.failuresAtRightmostPosition, true);\n    }\n\n    this.inputStream.examinedLength = Math.max(\n        this.inputStream.examinedLength,\n        memoRec.examinedLength + origPos\n    );\n\n    if (memoRec.value) {\n      this.inputStream.pos += memoRec.matchLength;\n      this.pushBinding(memoRec.value, origPos);\n      return true;\n    }\n    return false;\n  },\n\n  // Evaluate `expr` and return `true` if it succeeded, `false` otherwise. On success, `bindings`\n  // will have `expr.getArity()` more elements than before, and the input stream's position may\n  // have increased. On failure, `bindings` and position will be unchanged.\n  eval(expr) {\n    const {inputStream} = this;\n    const origNumBindings = this._bindings.length;\n\n    let origRecordedFailures;\n    if (this.recordedFailures) {\n      origRecordedFailures = this.recordedFailures;\n      this.recordedFailures = Object.create(null);\n    }\n\n    const origPos = inputStream.pos;\n    const memoPos = this.maybeSkipSpacesBefore(expr);\n\n    let origTrace;\n    if (this.trace) {\n      origTrace = this.trace;\n      this.trace = [];\n    }\n\n    // Do the actual evaluation.\n    const ans = expr.eval(this);\n\n    if (this.trace) {\n      const bindings = this._bindings.slice(origNumBindings);\n      const traceEntry = this.getTraceEntry(memoPos, expr, ans, bindings);\n      traceEntry.isImplicitSpaces = expr === applySpaces;\n      traceEntry.isRootNode = expr === this.startExpr;\n      origTrace.push(traceEntry);\n      this.trace = origTrace;\n    }\n\n    if (ans) {\n      if (this.recordedFailures && inputStream.pos === this.positionToRecordFailures) {\n        Object.keys(this.recordedFailures).forEach(key => {\n          this.recordedFailures[key].makeFluffy();\n        });\n      }\n    } else {\n      // Reset the position and the bindings.\n      inputStream.pos = origPos;\n      this.truncateBindings(origNumBindings);\n    }\n\n    if (this.recordedFailures) {\n      this.recordFailures(origRecordedFailures, false);\n    }\n\n    // The built-in applySyntactic rule needs special handling: we want to skip\n    // trailing spaces, just as with the top-level application of a syntactic rule.\n    if (expr === builtInApplySyntacticBody) {\n      this.skipSpaces();\n    }\n\n    return ans;\n  },\n\n  getMatchResult() {\n    this.eval(this.startExpr);\n    let rightmostFailures;\n    if (this.recordedFailures) {\n      rightmostFailures = Object.keys(this.recordedFailures).map(\n          key => this.recordedFailures[key]\n      );\n    }\n    const cst = this._bindings[0];\n    if (cst) {\n      cst.grammar = this.grammar;\n    }\n    return new MatchResult$1(\n        this.matcher,\n        this.input,\n        this.startExpr,\n        cst,\n        this._bindingOffsets[0],\n        this.rightmostFailurePosition,\n        rightmostFailures\n    );\n  },\n\n  getTrace() {\n    this.trace = [];\n    const matchResult = this.getMatchResult();\n\n    // The trace node for the start rule is always the last entry. If it is a syntactic rule,\n    // the first entry is for an application of 'spaces'.\n    // TODO(pdubroy): Clean this up by introducing a special `Match<startAppl>` rule, which will\n    // ensure that there is always a single root trace node.\n    const rootTrace = this.trace[this.trace.length - 1];\n    rootTrace.result = matchResult;\n    return rootTrace;\n  },\n\n  pushFailuresInfo() {\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this._recordedFailuresStack.push(this.recordedFailures);\n  },\n\n  popFailuresInfo() {\n    this.rightmostFailurePosition = this._rightmostFailurePositionStack.pop();\n    this.recordedFailures = this._recordedFailuresStack.pop();\n  },\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar MatchState_1 = MatchState$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst MatchState = MatchState_1;\n\nconst pexprs$4 = pexprs$6;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Matcher$1(grammar) {\n  this.grammar = grammar;\n  this.memoTable = [];\n  this.input = '';\n}\n\nMatcher$1.prototype.getInput = function() {\n  return this.input;\n};\n\nMatcher$1.prototype.setInput = function(str) {\n  if (this.input !== str) {\n    this.replaceInputRange(0, this.input.length, str);\n  }\n  return this;\n};\n\nMatcher$1.prototype.replaceInputRange = function(startIdx, endIdx, str) {\n  const currentInput = this.input;\n  if (\n    startIdx < 0 ||\n    startIdx > currentInput.length ||\n    endIdx < 0 ||\n    endIdx > currentInput.length ||\n    startIdx > endIdx\n  ) {\n    throw new Error('Invalid indices: ' + startIdx + ' and ' + endIdx);\n  }\n\n  // update input\n  this.input = currentInput.slice(0, startIdx) + str + currentInput.slice(endIdx);\n\n  // update memo table (similar to the above)\n  const restOfMemoTable = this.memoTable.slice(endIdx);\n  this.memoTable.length = startIdx;\n  for (let idx = 0; idx < str.length; idx++) {\n    this.memoTable.push(undefined);\n  }\n  restOfMemoTable.forEach(function(posInfo) {\n    this.memoTable.push(posInfo);\n  }, this);\n\n  // Invalidate memoRecs\n  for (let pos = 0; pos < startIdx; pos++) {\n    const posInfo = this.memoTable[pos];\n    if (posInfo) {\n      posInfo.clearObsoleteEntries(pos, startIdx);\n    }\n  }\n\n  return this;\n};\n\nMatcher$1.prototype.match = function(optStartApplicationStr) {\n  return this._match(this._getStartExpr(optStartApplicationStr), false);\n};\n\nMatcher$1.prototype.trace = function(optStartApplicationStr) {\n  return this._match(this._getStartExpr(optStartApplicationStr), true);\n};\n\nMatcher$1.prototype._match = function(startExpr, tracing, optPositionToRecordFailures) {\n  const state = new MatchState(this, startExpr, optPositionToRecordFailures);\n  return tracing ? state.getTrace() : state.getMatchResult();\n};\n\n/*\n  Returns the starting expression for this Matcher's associated grammar. If `optStartApplicationStr`\n  is specified, it is a string expressing a rule application in the grammar. If not specified, the\n  grammar's default start rule will be used.\n*/\nMatcher$1.prototype._getStartExpr = function(optStartApplicationStr) {\n  const applicationStr = optStartApplicationStr || this.grammar.defaultStartRule;\n  if (!applicationStr) {\n    throw new Error('Missing start rule argument -- the grammar has no default start rule.');\n  }\n\n  const startApp = this.grammar.parseApplication(applicationStr);\n  return new pexprs$4.Seq([startApp, pexprs$4.end]);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Matcher_1 = Matcher$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst InputStream$1 = InputStream_1;\nconst {IterationNode} = nodes$1;\nconst MatchResult = MatchResult_1;\nconst common$3 = common$l;\nconst errors$3 = errors$9;\nconst util$2 = util$7;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nconst globalActionStack = [];\n\nconst hasOwnProperty = (x, prop) => Object.prototype.hasOwnProperty.call(x, prop);\n\n// ----------------- Wrappers -----------------\n\n// Wrappers decorate CST nodes with all of the functionality (i.e., operations and attributes)\n// provided by a Semantics (see below). `Wrapper` is the abstract superclass of all wrappers. A\n// `Wrapper` must have `_node` and `_semantics` instance variables, which refer to the CST node and\n// Semantics (resp.) for which it was created, and a `_childWrappers` instance variable which is\n// used to cache the wrapper instances that are created for its child nodes. Setting these instance\n// variables is the responsibility of the constructor of each Semantics-specific subclass of\n// `Wrapper`.\nclass Wrapper {\n  constructor(node, sourceInterval, baseInterval) {\n    this._node = node;\n    this.source = sourceInterval;\n\n    // The interval that the childOffsets of `node` are relative to. It should be the source\n    // of the closest Nonterminal node.\n    this._baseInterval = baseInterval;\n\n    if (node.isNonterminal()) {\n      common$3.assert(sourceInterval === baseInterval);\n    }\n    this._childWrappers = [];\n  }\n\n  toString() {\n    return '[semantics wrapper for ' + this._node.grammar.name + ']';\n  }\n\n  _forgetMemoizedResultFor(attributeName) {\n    // Remove the memoized attribute from the cstNode and all its children.\n    delete this._node[this._semantics.attributeKeys[attributeName]];\n    this.children.forEach(child => {\n      child._forgetMemoizedResultFor(attributeName);\n    });\n  }\n\n  // Returns the wrapper of the specified child node. Child wrappers are created lazily and\n  // cached in the parent wrapper's `_childWrappers` instance variable.\n  child(idx) {\n    if (!(0 <= idx && idx < this._node.numChildren())) {\n      // TODO: Consider throwing an exception here.\n      return undefined;\n    }\n    let childWrapper = this._childWrappers[idx];\n    if (!childWrapper) {\n      const childNode = this._node.childAt(idx);\n      const offset = this._node.childOffsets[idx];\n\n      const source = this._baseInterval.subInterval(offset, childNode.matchLength);\n      const base = childNode.isNonterminal() ? source : this._baseInterval;\n      childWrapper = this._childWrappers[idx] = this._semantics.wrap(childNode, source, base);\n    }\n    return childWrapper;\n  }\n\n  // Returns an array containing the wrappers of all of the children of the node associated\n  // with this wrapper.\n  _children() {\n    // Force the creation of all child wrappers\n    for (let idx = 0; idx < this._node.numChildren(); idx++) {\n      this.child(idx);\n    }\n    return this._childWrappers;\n  }\n\n  // Returns `true` if the CST node associated with this wrapper corresponds to an iteration\n  // expression, i.e., a Kleene-*, Kleene-+, or an optional. Returns `false` otherwise.\n  isIteration() {\n    return this._node.isIteration();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a terminal node, `false`\n  // otherwise.\n  isTerminal() {\n    return this._node.isTerminal();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node, `false`\n  // otherwise.\n  isNonterminal() {\n    return this._node.isNonterminal();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node\n  // corresponding to a syntactic rule, `false` otherwise.\n  isSyntactic() {\n    return this.isNonterminal() && this._node.isSyntactic();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node\n  // corresponding to a lexical rule, `false` otherwise.\n  isLexical() {\n    return this.isNonterminal() && this._node.isLexical();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is an iterator node\n  // having either one or no child (? operator), `false` otherwise.\n  // Otherwise, throws an exception.\n  isOptional() {\n    return this._node.isOptional();\n  }\n\n  // Create a new _iter wrapper in the same semantics as this wrapper.\n  iteration(optChildWrappers) {\n    const childWrappers = optChildWrappers || [];\n\n    const childNodes = childWrappers.map(c => c._node);\n    const iter = new IterationNode(childNodes, [], -1, false);\n\n    const wrapper = this._semantics.wrap(iter, null, null);\n    wrapper._childWrappers = childWrappers;\n    return wrapper;\n  }\n\n  // Returns an array containing the children of this CST node.\n  get children() {\n    return this._children();\n  }\n\n  // Returns the name of grammar rule that created this CST node.\n  get ctorName() {\n    return this._node.ctorName;\n  }\n\n  // TODO: Remove this eventually (deprecated in v0.12).\n  get interval() {\n    throw new Error('The `interval` property is deprecated -- use `source` instead');\n  }\n\n  // Returns the number of children of this CST node.\n  get numChildren() {\n    return this._node.numChildren();\n  }\n\n  // Returns the contents of the input stream consumed by this CST node.\n  get sourceString() {\n    return this.source.contents;\n  }\n}\n\n// ----------------- Semantics -----------------\n\n// A Semantics is a container for a family of Operations and Attributes for a given grammar.\n// Semantics enable modularity (different clients of a grammar can create their set of operations\n// and attributes in isolation) and extensibility even when operations and attributes are mutually-\n// recursive. This constructor should not be called directly except from\n// `Semantics.createSemantics`. The normal ways to create a Semantics, given a grammar 'g', are\n// `g.createSemantics()` and `g.extendSemantics(parentSemantics)`.\nfunction Semantics$2(grammar, superSemantics) {\n  const self = this;\n  this.grammar = grammar;\n  this.checkedActionDicts = false;\n\n  // Constructor for wrapper instances, which are passed as the arguments to the semantic actions\n  // of an operation or attribute. Operations and attributes require double dispatch: the semantic\n  // action is chosen based on both the node's type and the semantics. Wrappers ensure that\n  // the `execute` method is called with the correct (most specific) semantics object as an\n  // argument.\n  this.Wrapper = class extends (superSemantics ? superSemantics.Wrapper : Wrapper) {\n    constructor(node, sourceInterval, baseInterval) {\n      super(node, sourceInterval, baseInterval);\n      self.checkActionDictsIfHaventAlready();\n      this._semantics = self;\n    }\n  };\n\n  this.super = superSemantics;\n  if (superSemantics) {\n    if (!(grammar.equals(this.super.grammar) || grammar._inheritsFrom(this.super.grammar))) {\n      throw new Error(\n          \"Cannot extend a semantics for grammar '\" +\n          this.super.grammar.name +\n          \"' for use with grammar '\" +\n          grammar.name +\n          \"' (not a sub-grammar)\"\n      );\n    }\n    this.operations = Object.create(this.super.operations);\n    this.attributes = Object.create(this.super.attributes);\n    this.attributeKeys = Object.create(null);\n\n    // Assign unique symbols for each of the attributes inherited from the super-semantics so that\n    // they are memoized independently.\n    // eslint-disable-next-line guard-for-in\n    for (const attributeName in this.attributes) {\n      Object.defineProperty(this.attributeKeys, attributeName, {\n        value: util$2.uniqueId(attributeName),\n      });\n    }\n  } else {\n    this.operations = Object.create(null);\n    this.attributes = Object.create(null);\n    this.attributeKeys = Object.create(null);\n  }\n}\n\nSemantics$2.prototype.toString = function() {\n  return '[semantics for ' + this.grammar.name + ']';\n};\n\nSemantics$2.prototype.checkActionDictsIfHaventAlready = function() {\n  if (!this.checkedActionDicts) {\n    this.checkActionDicts();\n    this.checkedActionDicts = true;\n  }\n};\n\n// Checks that the action dictionaries for all operations and attributes in this semantics,\n// including the ones that were inherited from the super-semantics, agree with the grammar.\n// Throws an exception if one or more of them doesn't.\nSemantics$2.prototype.checkActionDicts = function() {\n  let name;\n  // eslint-disable-next-line guard-for-in\n  for (name in this.operations) {\n    this.operations[name].checkActionDict(this.grammar);\n  }\n  // eslint-disable-next-line guard-for-in\n  for (name in this.attributes) {\n    this.attributes[name].checkActionDict(this.grammar);\n  }\n};\n\nSemantics$2.prototype.toRecipe = function(semanticsOnly) {\n  function hasSuperSemantics(s) {\n    return s.super !== Semantics$2.BuiltInSemantics._getSemantics();\n  }\n\n  let str = '(function(g) {\\n';\n  if (hasSuperSemantics(this)) {\n    str += '  var semantics = ' + this.super.toRecipe(true) + '(g';\n\n    const superSemanticsGrammar = this.super.grammar;\n    let relatedGrammar = this.grammar;\n    while (relatedGrammar !== superSemanticsGrammar) {\n      str += '.superGrammar';\n      relatedGrammar = relatedGrammar.superGrammar;\n    }\n\n    str += ');\\n';\n    str += '  return g.extendSemantics(semantics)';\n  } else {\n    str += '  return g.createSemantics()';\n  }\n  ['Operation', 'Attribute'].forEach(type => {\n    const semanticOperations = this[type.toLowerCase() + 's'];\n    Object.keys(semanticOperations).forEach(name => {\n      const {actionDict, formals, builtInDefault} = semanticOperations[name];\n\n      let signature = name;\n      if (formals.length > 0) {\n        signature += '(' + formals.join(', ') + ')';\n      }\n\n      let method;\n      if (hasSuperSemantics(this) && this.super[type.toLowerCase() + 's'][name]) {\n        method = 'extend' + type;\n      } else {\n        method = 'add' + type;\n      }\n      str += '\\n    .' + method + '(' + JSON.stringify(signature) + ', {';\n\n      const srcArray = [];\n      Object.keys(actionDict).forEach(actionName => {\n        if (actionDict[actionName] !== builtInDefault) {\n          let source = actionDict[actionName].toString().trim();\n\n          // Convert method shorthand to plain old function syntax.\n          // https://github.com/harc/ohm/issues/263\n          source = source.replace(/^.*\\(/, 'function(');\n\n          srcArray.push('\\n      ' + JSON.stringify(actionName) + ': ' + source);\n        }\n      });\n      str += srcArray.join(',') + '\\n    })';\n    });\n  });\n  str += ';\\n  })';\n\n  if (!semanticsOnly) {\n    str =\n      '(function() {\\n' +\n      '  var grammar = this.fromRecipe(' +\n      this.grammar.toRecipe() +\n      ');\\n' +\n      '  var semantics = ' +\n      str +\n      '(grammar);\\n' +\n      '  return semantics;\\n' +\n      '});\\n';\n  }\n\n  return str;\n};\n\nfunction parseSignature$1(signature, type) {\n  if (!Semantics$2.prototypeGrammar) {\n    // The Operations and Attributes grammar won't be available while Ohm is loading,\n    // but we can get away the following simplification b/c none of the operations\n    // that are used while loading take arguments.\n    common$3.assert(signature.indexOf('(') === -1);\n    return {\n      name: signature,\n      formals: [],\n    };\n  }\n\n  const r = Semantics$2.prototypeGrammar.match(\n      signature,\n    type === 'operation' ? 'OperationSignature' : 'AttributeSignature'\n  );\n  if (r.failed()) {\n    throw new Error(r.message);\n  }\n\n  return Semantics$2.prototypeGrammarSemantics(r).parse();\n}\n\nfunction newDefaultAction(type, name, doIt) {\n  return function(...children) {\n    const thisThing = this._semantics.operations[name] || this._semantics.attributes[name];\n    const args = thisThing.formals.map(formal => this.args[formal]);\n\n    if (!this.isIteration() && children.length === 1) {\n      // This CST node corresponds to a non-terminal in the grammar (e.g., AddExpr). The fact that\n      // we got here means that this action dictionary doesn't have an action for this particular\n      // non-terminal or a generic `_nonterminal` action.\n      // As a convenience, if this node only has one child, we just return the result of applying\n      // this operation / attribute to the child node.\n      return doIt.apply(children[0], args);\n    } else {\n      // Otherwise, we throw an exception to let the programmer know that we don't know what\n      // to do with this node.\n      throw errors$3.missingSemanticAction(this.ctorName, name, type, globalActionStack);\n    }\n  };\n}\n\nSemantics$2.prototype.addOperationOrAttribute = function(type, signature, actionDict) {\n  const typePlural = type + 's';\n\n  const parsedNameAndFormalArgs = parseSignature$1(signature, type);\n  const {name} = parsedNameAndFormalArgs;\n  const {formals} = parsedNameAndFormalArgs;\n\n  // TODO: check that there are no duplicate formal arguments\n\n  this.assertNewName(name, type);\n\n  // Create the action dictionary for this operation / attribute that contains a `_default` action\n  // which defines the default behavior of iteration, terminal, and non-terminal nodes...\n  const builtInDefault = newDefaultAction(type, name, doIt);\n  const realActionDict = {_default: builtInDefault};\n  // ... and add in the actions supplied by the programmer, which may override some or all of the\n  // default ones.\n  Object.keys(actionDict).forEach(name => {\n    realActionDict[name] = actionDict[name];\n  });\n\n  const entry =\n    type === 'operation' ?\n      new Operation(name, formals, realActionDict, builtInDefault) :\n      new Attribute(name, realActionDict, builtInDefault);\n\n  // The following check is not strictly necessary (it will happen later anyway) but it's better to\n  // catch errors early.\n  entry.checkActionDict(this.grammar);\n\n  this[typePlural][name] = entry;\n\n  function doIt(...args) {\n    // Dispatch to most specific version of this operation / attribute -- it may have been\n    // overridden by a sub-semantics.\n    const thisThing = this._semantics[typePlural][name];\n\n    // Check that the caller passed the correct number of arguments.\n    if (arguments.length !== thisThing.formals.length) {\n      throw new Error(\n          'Invalid number of arguments passed to ' +\n          name +\n          ' ' +\n          type +\n          ' (expected ' +\n          thisThing.formals.length +\n          ', got ' +\n          arguments.length +\n          ')'\n      );\n    }\n\n    // Create an \"arguments object\" from the arguments that were passed to this\n    // operation / attribute.\n    const argsObj = Object.create(null);\n    for (const [idx, val] of Object.entries(args)) {\n      const formal = thisThing.formals[idx];\n      argsObj[formal] = val;\n    }\n\n    const oldArgs = this.args;\n    this.args = argsObj;\n    const ans = thisThing.execute(this._semantics, this);\n    this.args = oldArgs;\n    return ans;\n  }\n\n  if (type === 'operation') {\n    this.Wrapper.prototype[name] = doIt;\n    this.Wrapper.prototype[name].toString = function() {\n      return '[' + name + ' operation]';\n    };\n  } else {\n    Object.defineProperty(this.Wrapper.prototype, name, {\n      get: doIt,\n      configurable: true, // So the property can be deleted.\n    });\n    Object.defineProperty(this.attributeKeys, name, {\n      value: util$2.uniqueId(name),\n    });\n  }\n};\n\nSemantics$2.prototype.extendOperationOrAttribute = function(type, name, actionDict) {\n  const typePlural = type + 's';\n\n  // Make sure that `name` really is just a name, i.e., that it doesn't also contain formals.\n  parseSignature$1(name, 'attribute');\n\n  if (!(this.super && name in this.super[typePlural])) {\n    throw new Error(\n        'Cannot extend ' +\n        type +\n        \" '\" +\n        name +\n        \"': did not inherit an \" +\n        type +\n        ' with that name'\n    );\n  }\n  if (hasOwnProperty(this[typePlural], name)) {\n    throw new Error('Cannot extend ' + type + \" '\" + name + \"' again\");\n  }\n\n  // Create a new operation / attribute whose actionDict delegates to the super operation /\n  // attribute's actionDict, and which has all the keys from `inheritedActionDict`.\n  const inheritedFormals = this[typePlural][name].formals;\n  const inheritedActionDict = this[typePlural][name].actionDict;\n  const newActionDict = Object.create(inheritedActionDict);\n  Object.keys(actionDict).forEach(name => {\n    newActionDict[name] = actionDict[name];\n  });\n\n  this[typePlural][name] =\n    type === 'operation' ?\n      new Operation(name, inheritedFormals, newActionDict) :\n      new Attribute(name, newActionDict);\n\n  // The following check is not strictly necessary (it will happen later anyway) but it's better to\n  // catch errors early.\n  this[typePlural][name].checkActionDict(this.grammar);\n};\n\nSemantics$2.prototype.assertNewName = function(name, type) {\n  if (hasOwnProperty(Wrapper.prototype, name)) {\n    throw new Error('Cannot add ' + type + \" '\" + name + \"': that's a reserved name\");\n  }\n  if (name in this.operations) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': an operation with that name already exists\"\n    );\n  }\n  if (name in this.attributes) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': an attribute with that name already exists\"\n    );\n  }\n};\n\n// Returns a wrapper for the given CST `node` in this semantics.\n// If `node` is already a wrapper, returns `node` itself.  // TODO: why is this needed?\nSemantics$2.prototype.wrap = function(node, source, optBaseInterval) {\n  const baseInterval = optBaseInterval || source;\n  return node instanceof this.Wrapper ? node : new this.Wrapper(node, source, baseInterval);\n};\n\n// Creates a new Semantics instance for `grammar`, inheriting operations and attributes from\n// `optSuperSemantics`, if it is specified. Returns a function that acts as a proxy for the new\n// Semantics instance. When that function is invoked with a CST node as an argument, it returns\n// a wrapper for that node which gives access to the operations and attributes provided by this\n// semantics.\nSemantics$2.createSemantics = function(grammar, optSuperSemantics) {\n  const s = new Semantics$2(\n      grammar,\n    optSuperSemantics !== undefined ?\n      optSuperSemantics :\n      Semantics$2.BuiltInSemantics._getSemantics()\n  );\n\n  // To enable clients to invoke a semantics like a function, return a function that acts as a proxy\n  // for `s`, which is the real `Semantics` instance.\n  const proxy = function ASemantics(matchResult) {\n    if (!(matchResult instanceof MatchResult)) {\n      throw new TypeError(\n          'Semantics expected a MatchResult, but got ' +\n          common$3.unexpectedObjToString(matchResult)\n      );\n    }\n    if (matchResult.failed()) {\n      throw new TypeError('cannot apply Semantics to ' + matchResult.toString());\n    }\n\n    const cst = matchResult._cst;\n    if (cst.grammar !== grammar) {\n      throw new Error(\n          \"Cannot use a MatchResult from grammar '\" +\n          cst.grammar.name +\n          \"' with a semantics for '\" +\n          grammar.name +\n          \"'\"\n      );\n    }\n    const inputStream = new InputStream$1(matchResult.input);\n    return s.wrap(cst, inputStream.interval(matchResult._cstOffset, matchResult.input.length));\n  };\n\n  // Forward public methods from the proxy to the semantics instance.\n  proxy.addOperation = function(signature, actionDict) {\n    s.addOperationOrAttribute('operation', signature, actionDict);\n    return proxy;\n  };\n  proxy.extendOperation = function(name, actionDict) {\n    s.extendOperationOrAttribute('operation', name, actionDict);\n    return proxy;\n  };\n  proxy.addAttribute = function(name, actionDict) {\n    s.addOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy.extendAttribute = function(name, actionDict) {\n    s.extendOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy._getActionDict = function(operationOrAttributeName) {\n    const action =\n      s.operations[operationOrAttributeName] || s.attributes[operationOrAttributeName];\n    if (!action) {\n      throw new Error(\n          '\"' +\n          operationOrAttributeName +\n          '\" is not a valid operation or attribute ' +\n          'name in this semantics for \"' +\n          grammar.name +\n          '\"'\n      );\n    }\n    return action.actionDict;\n  };\n  proxy._remove = function(operationOrAttributeName) {\n    let semantic;\n    if (operationOrAttributeName in s.operations) {\n      semantic = s.operations[operationOrAttributeName];\n      delete s.operations[operationOrAttributeName];\n    } else if (operationOrAttributeName in s.attributes) {\n      semantic = s.attributes[operationOrAttributeName];\n      delete s.attributes[operationOrAttributeName];\n    }\n    delete s.Wrapper.prototype[operationOrAttributeName];\n    return semantic;\n  };\n  proxy.getOperationNames = function() {\n    return Object.keys(s.operations);\n  };\n  proxy.getAttributeNames = function() {\n    return Object.keys(s.attributes);\n  };\n  proxy.getGrammar = function() {\n    return s.grammar;\n  };\n  proxy.toRecipe = function(semanticsOnly) {\n    return s.toRecipe(semanticsOnly);\n  };\n\n  // Make the proxy's toString() work.\n  proxy.toString = s.toString.bind(s);\n\n  // Returns the semantics for the proxy.\n  proxy._getSemantics = function() {\n    return s;\n  };\n\n  return proxy;\n};\n\n// ----------------- Operation -----------------\n\n// An Operation represents a function to be applied to a concrete syntax tree (CST) -- it's very\n// similar to a Visitor (http://en.wikipedia.org/wiki/Visitor_pattern). An operation is executed by\n// recursively walking the CST, and at each node, invoking the matching semantic action from\n// `actionDict`. See `Operation.prototype.execute` for details of how a CST node's matching semantic\n// action is found.\nclass Operation {\n  constructor(name, formals, actionDict, builtInDefault) {\n    this.name = name;\n    this.formals = formals;\n    this.actionDict = actionDict;\n    this.builtInDefault = builtInDefault;\n  }\n\n  checkActionDict(grammar) {\n    grammar._checkTopDownActionDict(this.typeName, this.name, this.actionDict);\n  }\n\n  // Execute this operation on the CST node associated with `nodeWrapper` in the context of the\n  // given Semantics instance.\n  execute(semantics, nodeWrapper) {\n    try {\n      // Look for a semantic action whose name matches the node's constructor name, which is either\n      // the name of a rule in the grammar, or '_terminal' (for a terminal node), or '_iter' (for an\n      // iteration node).\n      const {ctorName} = nodeWrapper._node;\n      let actionFn = this.actionDict[ctorName];\n      if (actionFn) {\n        globalActionStack.push([this, ctorName]);\n        return actionFn.apply(nodeWrapper, nodeWrapper._children());\n      }\n\n      // The action dictionary does not contain a semantic action for this specific type of node.\n      // If this is a nonterminal node and the programmer has provided a `_nonterminal` semantic\n      // action, we invoke it:\n      if (nodeWrapper.isNonterminal()) {\n        actionFn = this.actionDict._nonterminal;\n        if (actionFn) {\n          globalActionStack.push([this, '_nonterminal', ctorName]);\n          return actionFn.apply(nodeWrapper, nodeWrapper._children());\n        }\n      }\n\n      // Otherwise, we invoke the '_default' semantic action.\n      globalActionStack.push([this, 'default action', ctorName]);\n      return this.actionDict._default.apply(nodeWrapper, nodeWrapper._children());\n    } finally {\n      globalActionStack.pop();\n    }\n  }\n}\n\nOperation.prototype.typeName = 'operation';\n\n// ----------------- Attribute -----------------\n\n// Attributes are Operations whose results are memoized. This means that, for any given semantics,\n// the semantic action for a CST node will be invoked no more than once.\nclass Attribute extends Operation {\n  constructor(name, actionDict, builtInDefault) {\n    super(name, [], actionDict, builtInDefault);\n  }\n\n  execute(semantics, nodeWrapper) {\n    const node = nodeWrapper._node;\n    const key = semantics.attributeKeys[this.name];\n    if (!hasOwnProperty(node, key)) {\n      // The following is a super-send -- isn't JS beautiful? :/\n      node[key] = Operation.prototype.execute.call(this, semantics, nodeWrapper);\n    }\n    return node[key];\n  }\n}\n\nAttribute.prototype.typeName = 'attribute';\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Semantics_1 = Semantics$2;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst CaseInsensitiveTerminal = CaseInsensitiveTerminal_1;\nconst Matcher = Matcher_1;\nconst Semantics$1 = Semantics_1;\nconst common$2 = common$l;\nconst errors$2 = errors$9;\nconst pexprs$3 = pexprs$6;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nconst SPECIAL_ACTION_NAMES = ['_iter', '_terminal', '_nonterminal', '_default'];\n\nfunction getSortedRuleValues(grammar) {\n  return Object.keys(grammar.rules)\n      .sort()\n      .map(name => grammar.rules[name]);\n}\n\n// Until ES2019, JSON was not a valid subset of JavaScript because U+2028 (line separator)\n// and U+2029 (paragraph separator) are allowed in JSON string literals, but not in JS.\n// This function properly encodes those two characters so that the resulting string is\n// represents both valid JSON, and valid JavaScript (for ES2018 and below).\n// See https://v8.dev/features/subsume-json for more details.\nconst jsonToJS = str => str.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n\nfunction Grammar$4(name, superGrammar, rules, optDefaultStartRule) {\n  this.name = name;\n  this.superGrammar = superGrammar;\n  this.rules = rules;\n  if (optDefaultStartRule) {\n    if (!(optDefaultStartRule in rules)) {\n      throw new Error(\n          \"Invalid start rule: '\" +\n          optDefaultStartRule +\n          \"' is not a rule in grammar '\" +\n          name +\n          \"'\"\n      );\n    }\n    this.defaultStartRule = optDefaultStartRule;\n  }\n}\n\nlet ohmGrammar$2;\nlet buildGrammar$1;\n\n// This method is called from main.js once Ohm has loaded.\nGrammar$4.initApplicationParser = function(grammar, builderFn) {\n  ohmGrammar$2 = grammar;\n  buildGrammar$1 = builderFn;\n};\n\nGrammar$4.prototype = {\n  matcher() {\n    return new Matcher(this);\n  },\n\n  // Return true if the grammar is a built-in grammar, otherwise false.\n  // NOTE: This might give an unexpected result if called before BuiltInRules is defined!\n  isBuiltIn() {\n    return this === Grammar$4.ProtoBuiltInRules || this === Grammar$4.BuiltInRules;\n  },\n\n  equals(g) {\n    if (this === g) {\n      return true;\n    }\n    // Do the cheapest comparisons first.\n    if (\n      g == null ||\n      this.name !== g.name ||\n      this.defaultStartRule !== g.defaultStartRule ||\n      !(this.superGrammar === g.superGrammar || this.superGrammar.equals(g.superGrammar))\n    ) {\n      return false;\n    }\n    const myRules = getSortedRuleValues(this);\n    const otherRules = getSortedRuleValues(g);\n    return (\n      myRules.length === otherRules.length &&\n      myRules.every((rule, i) => {\n        return (\n          rule.description === otherRules[i].description &&\n          rule.formals.join(',') === otherRules[i].formals.join(',') &&\n          rule.body.toString() === otherRules[i].body.toString()\n        );\n      })\n    );\n  },\n\n  match(input, optStartApplication) {\n    const m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.match(optStartApplication);\n  },\n\n  trace(input, optStartApplication) {\n    const m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.trace(optStartApplication);\n  },\n\n  createSemantics() {\n    return Semantics$1.createSemantics(this);\n  },\n\n  extendSemantics(superSemantics) {\n    return Semantics$1.createSemantics(this, superSemantics._getSemantics());\n  },\n\n  // Check that every key in `actionDict` corresponds to a semantic action, and that it maps to\n  // a function of the correct arity. If not, throw an exception.\n  _checkTopDownActionDict(what, name, actionDict) {\n    const problems = [];\n\n    // eslint-disable-next-line guard-for-in\n    for (const k in actionDict) {\n      const v = actionDict[k];\n      const isSpecialAction = SPECIAL_ACTION_NAMES.includes(k);\n\n      if (!isSpecialAction && !(k in this.rules)) {\n        problems.push(`'${k}' is not a valid semantic action for '${this.name}'`);\n        continue;\n      }\n      if (typeof v !== 'function') {\n        problems.push(`'${k}' must be a function in an action dictionary for '${this.name}'`);\n        continue;\n      }\n      const actual = v.length;\n      const expected = this._topDownActionArity(k);\n      if (actual !== expected) {\n        let details;\n        if (k === '_iter' || k === '_nonterminal') {\n          details =\n            `it should use a rest parameter, e.g. \\`${k}(...children) {}\\`. ` +\n            'NOTE: this is new in Ohm v16 — see https://git.io/Jz4CI for details.';\n        } else {\n          details = `expected ${expected}, got ${actual}`;\n        }\n        problems.push(`Semantic action '${k}' has the wrong arity: ${details}`);\n      }\n    }\n    if (problems.length > 0) {\n      const prettyProblems = problems.map(problem => '- ' + problem);\n      const error = new Error(\n          [\n            `Found errors in the action dictionary of the '${name}' ${what}:`,\n            ...prettyProblems,\n          ].join('\\n')\n      );\n      error.problems = problems;\n      throw error;\n    }\n  },\n\n  // Return the expected arity for a semantic action named `actionName`, which\n  // is either a rule name or a special action name like '_nonterminal'.\n  _topDownActionArity(actionName) {\n    // All special actions have an expected arity of 0, though all but _terminal\n    // are expected to use the rest parameter syntax (e.g. `_iter(...children)`).\n    // This is considered to have arity 0, i.e. `((...args) => {}).length` is 0.\n    return SPECIAL_ACTION_NAMES.includes(actionName) ?\n      0 :\n      this.rules[actionName].body.getArity();\n  },\n\n  _inheritsFrom(grammar) {\n    let g = this.superGrammar;\n    while (g) {\n      if (g.equals(grammar, true)) {\n        return true;\n      }\n      g = g.superGrammar;\n    }\n    return false;\n  },\n\n  toRecipe(superGrammarExpr = undefined) {\n    const metaInfo = {};\n    // Include the grammar source if it is available.\n    if (this.source) {\n      metaInfo.source = this.source.contents;\n    }\n\n    let startRule = null;\n    if (this.defaultStartRule) {\n      startRule = this.defaultStartRule;\n    }\n\n    const rules = {};\n    Object.keys(this.rules).forEach(ruleName => {\n      const ruleInfo = this.rules[ruleName];\n      const {body} = ruleInfo;\n      const isDefinition = !this.superGrammar || !this.superGrammar.rules[ruleName];\n\n      let operation;\n      if (isDefinition) {\n        operation = 'define';\n      } else {\n        operation = body instanceof pexprs$3.Extend ? 'extend' : 'override';\n      }\n\n      const metaInfo = {};\n      if (ruleInfo.source && this.source) {\n        const adjusted = ruleInfo.source.relativeTo(this.source);\n        metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n      }\n\n      const description = isDefinition ? ruleInfo.description : null;\n      const bodyRecipe = body.outputRecipe(ruleInfo.formals, this.source);\n\n      rules[ruleName] = [\n        operation, // \"define\"/\"extend\"/\"override\"\n        metaInfo,\n        description,\n        ruleInfo.formals,\n        bodyRecipe,\n      ];\n    });\n\n    // If the caller provided an expression to use for the supergrammar, use that.\n    // Otherwise, if the supergrammar is a user grammar, use its recipe inline.\n    let superGrammarOutput = 'null';\n    if (superGrammarExpr) {\n      superGrammarOutput = superGrammarExpr;\n    } else if (this.superGrammar && !this.superGrammar.isBuiltIn()) {\n      superGrammarOutput = this.superGrammar.toRecipe();\n    }\n\n    const recipeElements = [\n      ...['grammar', metaInfo, this.name].map(JSON.stringify),\n      superGrammarOutput,\n      ...[startRule, rules].map(JSON.stringify),\n    ];\n    return jsonToJS(`[${recipeElements.join(',')}]`);\n  },\n\n  // TODO: Come up with better names for these methods.\n  // TODO: Write the analog of these methods for inherited attributes.\n  toOperationActionDictionaryTemplate() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  },\n  toAttributeActionDictionaryTemplate() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  },\n\n  _toOperationOrAttributeActionDictionaryTemplate() {\n    // TODO: add the super-grammar's templates at the right place, e.g., a case for AddExpr_plus\n    // should appear next to other cases of AddExpr.\n\n    const sb = new common$2.StringBuffer();\n    sb.append('{');\n\n    let first = true;\n    // eslint-disable-next-line guard-for-in\n    for (const ruleName in this.rules) {\n      const {body} = this.rules[ruleName];\n      if (first) {\n        first = false;\n      } else {\n        sb.append(',');\n      }\n      sb.append('\\n');\n      sb.append('  ');\n      this.addSemanticActionTemplate(ruleName, body, sb);\n    }\n\n    sb.append('\\n}');\n    return sb.contents();\n  },\n\n  addSemanticActionTemplate(ruleName, body, sb) {\n    sb.append(ruleName);\n    sb.append(': function(');\n    const arity = this._topDownActionArity(ruleName);\n    sb.append(common$2.repeat('_', arity).join(', '));\n    sb.append(') {\\n');\n    sb.append('  }');\n  },\n\n  // Parse a string which expresses a rule application in this grammar, and return the\n  // resulting Apply node.\n  parseApplication(str) {\n    let app;\n    if (str.indexOf('<') === -1) {\n      // simple application\n      app = new pexprs$3.Apply(str);\n    } else {\n      // parameterized application\n      const cst = ohmGrammar$2.match(str, 'Base_application');\n      app = buildGrammar$1(cst, {});\n    }\n\n    // Ensure that the application is valid.\n    if (!(app.ruleName in this.rules)) {\n      throw errors$2.undeclaredRule(app.ruleName, this.name);\n    }\n    const {formals} = this.rules[app.ruleName];\n    if (formals.length !== app.args.length) {\n      const {source} = this.rules[app.ruleName];\n      throw errors$2.wrongNumberOfParameters(\n          app.ruleName,\n          formals.length,\n          app.args.length,\n          source\n      );\n    }\n    return app;\n  },\n};\n\n// The following grammar contains a few rules that couldn't be written  in \"userland\".\n// At the bottom of src/main.js, we create a sub-grammar of this grammar that's called\n// `BuiltInRules`. That grammar contains several convenience rules, e.g., `letter` and\n// `digit`, and is implicitly the super-grammar of any grammar whose super-grammar\n// isn't specified.\nGrammar$4.ProtoBuiltInRules = new Grammar$4(\n    'ProtoBuiltInRules', // name\n    undefined, // supergrammar\n    {\n      any: {\n        body: pexprs$3.any,\n        formals: [],\n        description: 'any character',\n        primitive: true,\n      },\n      end: {\n        body: pexprs$3.end,\n        formals: [],\n        description: 'end of input',\n        primitive: true,\n      },\n\n      caseInsensitive: {\n        body: new CaseInsensitiveTerminal(new pexprs$3.Param(0)),\n        formals: ['str'],\n        primitive: true,\n      },\n      lower: {\n        body: new pexprs$3.UnicodeChar('Ll'),\n        formals: [],\n        description: 'a lowercase letter',\n        primitive: true,\n      },\n      upper: {\n        body: new pexprs$3.UnicodeChar('Lu'),\n        formals: [],\n        description: 'an uppercase letter',\n        primitive: true,\n      },\n      // Union of Lt (titlecase), Lm (modifier), and Lo (other), i.e. any letter not in Ll or Lu.\n      unicodeLtmo: {\n        body: new pexprs$3.UnicodeChar('Ltmo'),\n        formals: [],\n        description: 'a Unicode character in Lt, Lm, or Lo',\n        primitive: true,\n      },\n\n      // These rules are not truly primitive (they could be written in userland) but are defined\n      // here for bootstrapping purposes.\n      spaces: {\n        body: new pexprs$3.Star(new pexprs$3.Apply('space')),\n        formals: [],\n      },\n      space: {\n        body: new pexprs$3.Range('\\x00', ' '),\n        formals: [],\n        description: 'a space',\n      },\n    }\n);\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Grammar_1 = Grammar$4;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Grammar$3 = Grammar_1;\nconst InputStream = InputStream_1;\nconst common$1 = common$l;\nconst errors$1 = errors$9;\nconst pexprs$2 = pexprs$6;\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Constructors\n\nfunction GrammarDecl$1(name) {\n  this.name = name;\n}\n\n// Helpers\n\nGrammarDecl$1.prototype.sourceInterval = function(startIdx, endIdx) {\n  return this.source.subInterval(startIdx, endIdx - startIdx);\n};\n\nGrammarDecl$1.prototype.ensureSuperGrammar = function() {\n  if (!this.superGrammar) {\n    this.withSuperGrammar(\n      // TODO: The conditional expression below is an ugly hack. It's kind of ok because\n      // I doubt anyone will ever try to declare a grammar called `BuiltInRules`. Still,\n      // we should try to find a better way to do this.\n      this.name === 'BuiltInRules' ? Grammar$3.ProtoBuiltInRules : Grammar$3.BuiltInRules\n    );\n  }\n  return this.superGrammar;\n};\n\nGrammarDecl$1.prototype.ensureSuperGrammarRuleForOverriding = function(name, source) {\n  const ruleInfo = this.ensureSuperGrammar().rules[name];\n  if (!ruleInfo) {\n    throw errors$1.cannotOverrideUndeclaredRule(name, this.superGrammar.name, source);\n  }\n  return ruleInfo;\n};\n\nGrammarDecl$1.prototype.installOverriddenOrExtendedRule = function(\n    name,\n    formals,\n    body,\n    source\n) {\n  const duplicateParameterNames = common$1.getDuplicates(formals);\n  if (duplicateParameterNames.length > 0) {\n    throw errors$1.duplicateParameterNames(name, duplicateParameterNames, source);\n  }\n  const ruleInfo = this.ensureSuperGrammar().rules[name];\n  const expectedFormals = ruleInfo.formals;\n  const expectedNumFormals = expectedFormals ? expectedFormals.length : 0;\n  if (formals.length !== expectedNumFormals) {\n    throw errors$1.wrongNumberOfParameters(name, expectedNumFormals, formals.length, source);\n  }\n  return this.install(name, formals, body, ruleInfo.description, source);\n};\n\nGrammarDecl$1.prototype.install = function(name, formals, body, description, source) {\n  this.rules[name] = {\n    body: body.introduceParams(formals),\n    formals,\n    description,\n    source,\n  };\n  return this;\n};\n\n// Stuff that you should only do once\n\nGrammarDecl$1.prototype.withSuperGrammar = function(superGrammar) {\n  if (this.superGrammar) {\n    throw new Error('the super grammar of a GrammarDecl cannot be set more than once');\n  }\n  this.superGrammar = superGrammar;\n  this.rules = Object.create(superGrammar.rules);\n\n  // Grammars with an explicit supergrammar inherit a default start rule.\n  if (!superGrammar.isBuiltIn()) {\n    this.defaultStartRule = superGrammar.defaultStartRule;\n  }\n  return this;\n};\n\nGrammarDecl$1.prototype.withDefaultStartRule = function(ruleName) {\n  this.defaultStartRule = ruleName;\n  return this;\n};\n\nGrammarDecl$1.prototype.withSource = function(source) {\n  this.source = new InputStream(source).interval(0, source.length);\n  return this;\n};\n\n// Creates a Grammar instance, and if it passes the sanity checks, returns it.\nGrammarDecl$1.prototype.build = function() {\n  const grammar = new Grammar$3(\n      this.name,\n      this.ensureSuperGrammar(),\n      this.rules,\n      this.defaultStartRule\n  );\n\n  // TODO: change the pexpr.prototype.assert... methods to make them add\n  // exceptions to an array that's provided as an arg. Then we'll be able to\n  // show more than one error of the same type at a time.\n  // TODO: include the offending pexpr in the errors, that way we can show\n  // the part of the source that caused it.\n  const grammarErrors = [];\n  let grammarHasInvalidApplications = false;\n  Object.keys(grammar.rules).forEach(ruleName => {\n    const {body} = grammar.rules[ruleName];\n    try {\n      body.assertChoicesHaveUniformArity(ruleName);\n    } catch (e) {\n      grammarErrors.push(e);\n    }\n    try {\n      body.assertAllApplicationsAreValid(ruleName, grammar);\n    } catch (e) {\n      grammarErrors.push(e);\n      grammarHasInvalidApplications = true;\n    }\n  });\n  if (!grammarHasInvalidApplications) {\n    // The following check can only be done if the grammar has no invalid applications.\n    Object.keys(grammar.rules).forEach(ruleName => {\n      const {body} = grammar.rules[ruleName];\n      try {\n        body.assertIteratedExprsAreNotNullable(grammar, []);\n      } catch (e) {\n        grammarErrors.push(e);\n      }\n    });\n  }\n  if (grammarErrors.length > 0) {\n    errors$1.throwErrors(grammarErrors);\n  }\n  if (this.source) {\n    grammar.source = this.source;\n  }\n\n  return grammar;\n};\n\n// Rule declarations\n\nGrammarDecl$1.prototype.define = function(name, formals, body, description, source) {\n  this.ensureSuperGrammar();\n  if (this.superGrammar.rules[name]) {\n    throw errors$1.duplicateRuleDeclaration(name, this.name, this.superGrammar.name, source);\n  } else if (this.rules[name]) {\n    throw errors$1.duplicateRuleDeclaration(name, this.name, this.name, source);\n  }\n  const duplicateParameterNames = common$1.getDuplicates(formals);\n  if (duplicateParameterNames.length > 0) {\n    throw errors$1.duplicateParameterNames(name, duplicateParameterNames, source);\n  }\n  return this.install(name, formals, body, description, source);\n};\n\nGrammarDecl$1.prototype.override = function(name, formals, body, descIgnored, source) {\n  this.ensureSuperGrammarRuleForOverriding(name, source);\n  this.installOverriddenOrExtendedRule(name, formals, body, source);\n  return this;\n};\n\nGrammarDecl$1.prototype.extend = function(name, formals, fragment, descIgnored, source) {\n  const ruleInfo = this.ensureSuperGrammar().rules[name];\n  if (!ruleInfo) {\n    throw errors$1.cannotExtendUndeclaredRule(name, this.superGrammar.name, source);\n  }\n  const body = new pexprs$2.Extend(this.superGrammar, name, fragment);\n  body.source = fragment.source;\n  this.installOverriddenOrExtendedRule(name, formals, body, source);\n  return this;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar GrammarDecl_1 = GrammarDecl$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Grammar$2 = Grammar_1;\nconst GrammarDecl = GrammarDecl_1;\nconst pexprs$1 = pexprs$6;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Builder$2() {}\n\nBuilder$2.prototype = {\n  currentDecl: null,\n  currentRuleName: null,\n\n  newGrammar(name) {\n    return new GrammarDecl(name);\n  },\n\n  grammar(metaInfo, name, superGrammar, defaultStartRule, rules) {\n    const gDecl = new GrammarDecl(name);\n    if (superGrammar) {\n      // `superGrammar` may be a recipe (i.e. an Array), or an actual grammar instance.\n      gDecl.withSuperGrammar(\n        superGrammar instanceof Grammar$2 ? superGrammar : this.fromRecipe(superGrammar)\n      );\n    }\n    if (defaultStartRule) {\n      gDecl.withDefaultStartRule(defaultStartRule);\n    }\n    if (metaInfo && metaInfo.source) {\n      gDecl.withSource(metaInfo.source);\n    }\n\n    this.currentDecl = gDecl;\n    Object.keys(rules).forEach(ruleName => {\n      this.currentRuleName = ruleName;\n      const ruleRecipe = rules[ruleName];\n\n      const action = ruleRecipe[0]; // define/extend/override\n      const metaInfo = ruleRecipe[1];\n      const description = ruleRecipe[2];\n      const formals = ruleRecipe[3];\n      const body = this.fromRecipe(ruleRecipe[4]);\n\n      let source;\n      if (gDecl.source && metaInfo && metaInfo.sourceInterval) {\n        source = gDecl.source.subInterval(\n            metaInfo.sourceInterval[0],\n            metaInfo.sourceInterval[1] - metaInfo.sourceInterval[0]\n        );\n      }\n      gDecl[action](ruleName, formals, body, description, source);\n    });\n    this.currentRuleName = this.currentDecl = null;\n    return gDecl.build();\n  },\n\n  terminal(x) {\n    return new pexprs$1.Terminal(x);\n  },\n\n  range(from, to) {\n    return new pexprs$1.Range(from, to);\n  },\n\n  param(index) {\n    return new pexprs$1.Param(index);\n  },\n\n  alt(...termArgs) {\n    let terms = [];\n    for (let arg of termArgs) {\n      if (!(arg instanceof pexprs$1.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof pexprs$1.Alt) {\n        terms = terms.concat(arg.terms);\n      } else {\n        terms.push(arg);\n      }\n    }\n    return terms.length === 1 ? terms[0] : new pexprs$1.Alt(terms);\n  },\n\n  seq(...factorArgs) {\n    let factors = [];\n    for (let arg of factorArgs) {\n      if (!(arg instanceof pexprs$1.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof pexprs$1.Seq) {\n        factors = factors.concat(arg.factors);\n      } else {\n        factors.push(arg);\n      }\n    }\n    return factors.length === 1 ? factors[0] : new pexprs$1.Seq(factors);\n  },\n\n  star(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Star(expr);\n  },\n\n  plus(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Plus(expr);\n  },\n\n  opt(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Opt(expr);\n  },\n\n  not(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Not(expr);\n  },\n\n  la(expr) {\n    // TODO: temporary to still be able to read old recipes\n    return this.lookahead(expr);\n  },\n\n  lookahead(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Lookahead(expr);\n  },\n\n  lex(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Lex(expr);\n  },\n\n  app(ruleName, optParams) {\n    if (optParams && optParams.length > 0) {\n      optParams = optParams.map(function(param) {\n        return param instanceof pexprs$1.PExpr ? param : this.fromRecipe(param);\n      }, this);\n    }\n    return new pexprs$1.Apply(ruleName, optParams);\n  },\n\n  // Note that unlike other methods in this class, this method cannot be used as a\n  // convenience constructor. It only works with recipes, because it relies on\n  // `this.currentDecl` and `this.currentRuleName` being set.\n  splice(beforeTerms, afterTerms) {\n    return new pexprs$1.Splice(\n        this.currentDecl.superGrammar,\n        this.currentRuleName,\n        beforeTerms.map(term => this.fromRecipe(term)),\n        afterTerms.map(term => this.fromRecipe(term))\n    );\n  },\n\n  fromRecipe(recipe) {\n    // the meta-info of 'grammar' is processed in Builder.grammar\n    const args = recipe[0] === 'grammar' ? recipe.slice(1) : recipe.slice(2);\n    const result = this[recipe[0]](...args);\n\n    const metaInfo = recipe[1];\n    if (metaInfo) {\n      if (metaInfo.sourceInterval && this.currentDecl) {\n        result.withSource(this.currentDecl.sourceInterval(...metaInfo.sourceInterval));\n      }\n    }\n    return result;\n  },\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Builder_1 = Builder$2;\n\nvar name = \"ohm-js\";\nvar version$2 = \"16.3.2\";\nvar description = \"An object-oriented language for parsing and pattern matching\";\nvar repository = \"https://github.com/harc/ohm\";\nvar keywords = [\n\t\"parser\",\n\t\"compiler\",\n\t\"pattern matching\",\n\t\"pattern-matching\",\n\t\"ometa\",\n\t\"ometa/js\",\n\t\"ometa-js\",\n\t\"ometajs\",\n\t\"rapid\",\n\t\"prototyping\"\n];\nvar homepage = \"https://ohmjs.org\";\nvar bugs = \"https://github.com/harc/ohm/issues\";\nvar main = \"index.js\";\nvar module = \"dist/ohm.esm.js\";\nvar files = [\n\t\"src\",\n\t\"dist\",\n\t\"extras\",\n\t\"third_party\",\n\t\"index.d.ts\"\n];\nvar types = \"index.d.ts\";\nvar scripts = {\n\tprebootstrap: \"bash scripts/prebootstrap\",\n\tbootstrap: \"bash scripts/bootstrap --test || (echo 'Bootstrap failed.' && mv -v dist/ohm-grammar.js.old dist/ohm-grammar.js && mv -v dist/built-in-rules.js.old dist/built-in-rules.js && mv -v dist/operations-and-attributes.js.old dist/operations-and-attributes.js)\",\n\tbuild: \"yarn build-debug && webpack --mode=production\",\n\t\"build-debug\": \"webpack --mode=development && yarn build-esm && node scripts/generate-types.mjs\",\n\t\"build-esm\": \"rollup -c rollup.config.mjs\",\n\tclean: \"rm -f dist/ohm.js dist/ohm.min.js\",\n\tlint: \"eslint . --ignore-path ../.eslintignore\",\n\tformat: \"prettier . --write --ignore-path ../.prettierignore --config ../.prettierrc && eslint . --ignore-path ../.eslintignore --fix\",\n\ttest: \"ava && ava --config ava-ts.config.js test/test-typings.ts\",\n\t\"test-watch\": \"ava --watch\",\n\t\"pre-commit\": \"yarn run lint && yarn run build && yarn run test\",\n\tprepublishOnly: \"bash scripts/prepublishOnly\",\n\tprepack: \"cp ../../README.md . && yarn build\",\n\tpostpack: \"rm README.md\",\n\tpostpublish: \"echo '👉  Now go to https://github.com/harc/ohm/releases and create a release.'\",\n\t\"unsafe-bootstrap\": \"bash scripts/bootstrap\",\n\t\"update-contributors\": \"bash scripts/update-contributors\",\n\twatch: \"webpack --mode=development --watch\"\n};\nvar license = \"MIT\";\nvar author = \"Alex Warth <alexwarth@gmail.com> (http://tinlizzie.org/~awarth)\";\nvar contributors = [\n\t\"Patrick Dubroy <pdubroy@gmail.com>\",\n\t\"Meixian Li <lmeixian@gmail.com>\",\n\t\"Marko Röder <m.roeder@photon-software.de>\",\n\t\"Tony Garnock-Jones <tonygarnockjones@gmail.com>\",\n\t\"Saketh Kasibatla <sake.kasi@gmail.com>\",\n\t\"Lionel Landwerlin <llandwerlin@gmail.com>\",\n\t\"Jason Merrill <jwmerrill@gmail.com>\",\n\t\"Ray Toal <rtoal@lmu.edu>\",\n\t\"Yoshiki Ohshima <Yoshiki.Ohshima@acm.org>\",\n\t\"megabuz <3299889+megabuz@users.noreply.github.com>\",\n\t\"stagas <gstagas@gmail.com>\",\n\t\"Jonathan Edwards <JonathanMEdwards@gmail.com>\",\n\t\"Milan Lajtoš <milan.lajtos@me.com>\",\n\t\"Neil Jewers <njjewers@uwaterloo.ca>\",\n\t\"Mike Niebling <(none)>\",\n\t\"AngryPowman <angrypowman@qq.com>\",\n\t\"Patrick Dubroy <patrick@sourcegraph.com>\",\n\t\"Leslie Ying <acetophore@users.noreply.github.com>\",\n\t\"Pierre Donias <pierre.donias@gmail.com>\",\n\t\"Justin Chase <justin.m.chase@gmail.com>\",\n\t\"Ian Harris <ian@fofgof.xyz>\",\n\t\"Stan Rozenraukh <stan@stanistan.com>\",\n\t\"Stephan Seidt <stephan.seidt@gmail.com>\",\n\t\"Steve Phillips <steve@tryingtobeawesome.com>\",\n\t\"Szymon Kaliski <kaliskiszymon@gmail.com>\",\n\t\"Thomas Nyberg <tomnyberg@gmail.com>\",\n\t\"Daniel Tomlinson <DanielTomlinson@me.com>\",\n\t\"Vse Mozhet Byt <vsemozhetbyt@gmail.com>\",\n\t\"Wil Chung <10446+iamwilhelm@users.noreply.github.com>\",\n\t\"Casey Olson <casey.m.olson@gmail.com>\",\n\t\"abego <ub@abego-software.de>\",\n\t\"acslk <d_vd415@hotmail.com>\",\n\t\"codeZeilen <codeZeilen@users.noreply.github.com>\",\n\t\"kassadin <kassadin@foxmail.com>\",\n\t\"Arthur Carabott <arthurc@gmail.com>\",\n\t\"owch <bowenrainyday@gmail.com>\",\n\t\"Luca Guzzon <luca.guzzon@gmail.com>\",\n\t\"sfinnie <scott.finnie@gmail.com>\"\n];\nvar dependencies = {\n};\nvar devDependencies = {\n\t\"@ohm-js/cli\": \"^1.0.0\",\n\t\"@rollup/plugin-commonjs\": \"^21.0.1\",\n\t\"@rollup/plugin-json\": \"^4.1.0\",\n\t\"@rollup/plugin-node-resolve\": \"^13.1.3\",\n\tava: \"^3.15.0\",\n\t\"ava-spec\": \"^1.1.1\",\n\tdedent: \"^0.7.0\",\n\teslint: \"^7.9.0\",\n\t\"eslint-config-google\": \"^0.14.0\",\n\t\"eslint-plugin-ava\": \"^11.0.0\",\n\t\"eslint-plugin-camelcase-ohm\": \"^0.2.1\",\n\t\"eslint-plugin-no-extension-in-require\": \"^0.2.0\",\n\thusky: \"^4.2.5\",\n\tjsdom: \"^9.9.1\",\n\tjson: \"^9.0.6\",\n\tmarkscript: \"^0.5.0\",\n\t\"node-static\": \"^0.7.11\",\n\t\"ohm-grammar-ecmascript\": \"^1.0.0\",\n\trollup: \"^2.63.0\",\n\t\"ts-loader\": \"^8.0.4\",\n\t\"ts-node\": \"^9.0.0\",\n\ttypescript: \"^4.0.3\",\n\t\"walk-sync\": \"^2.2.0\",\n\twebpack: \"^4.44.2\",\n\t\"webpack-cli\": \"^3.3.12\"\n};\nvar engines = {\n\tnode: \">=0.12.1\"\n};\nvar require$$0 = {\n\tname: name,\n\tversion: version$2,\n\tdescription: description,\n\trepository: repository,\n\tkeywords: keywords,\n\thomepage: homepage,\n\tbugs: bugs,\n\tmain: main,\n\tmodule: module,\n\tfiles: files,\n\ttypes: types,\n\tscripts: scripts,\n\tlicense: license,\n\tauthor: author,\n\tcontributors: contributors,\n\tdependencies: dependencies,\n\tdevDependencies: devDependencies,\n\tengines: engines\n};\n\n/* global __GLOBAL_OHM_VERSION__ */\n\n// When running under Node, read the version from package.json. For the browser,\n// use a special global variable defined in the build process (see webpack.config.js).\nvar version$1 =\n  typeof __GLOBAL_OHM_VERSION__ === 'string' ?\n    __GLOBAL_OHM_VERSION__ :\n    require$$0.version;\n\nvar makeRecipe$5 = {};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Builder$1 = Builder_1;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction makeRecipe$4(recipe) {\n  if (typeof recipe === 'function') {\n    return recipe.call(new Builder$1());\n  } else {\n    if (typeof recipe === 'string') {\n      // stringified JSON recipe\n      recipe = JSON.parse(recipe);\n    }\n    return new Builder$1().fromRecipe(recipe);\n  }\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmakeRecipe$5.makeRecipe = makeRecipe$4;\n\nvar {makeRecipe: makeRecipe$3} = makeRecipe$5;\nvar builtInRules = makeRecipe$3([\"grammar\",{\"source\":\"BuiltInRules {\\n\\n  alnum  (an alpha-numeric character)\\n    = letter\\n    | digit\\n\\n  letter  (a letter)\\n    = lower\\n    | upper\\n    | unicodeLtmo\\n\\n  digit  (a digit)\\n    = \\\"0\\\"..\\\"9\\\"\\n\\n  hexDigit  (a hexadecimal digit)\\n    = digit\\n    | \\\"a\\\"..\\\"f\\\"\\n    | \\\"A\\\"..\\\"F\\\"\\n\\n  ListOf<elem, sep>\\n    = NonemptyListOf<elem, sep>\\n    | EmptyListOf<elem, sep>\\n\\n  NonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  EmptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  listOf<elem, sep>\\n    = nonemptyListOf<elem, sep>\\n    | emptyListOf<elem, sep>\\n\\n  nonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  emptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  // Allows a syntactic rule application within a lexical context.\\n  applySyntactic<app> = app\\n}\"},\"BuiltInRules\",null,null,{\"alnum\":[\"define\",{\"sourceInterval\":[18,78]},\"an alpha-numeric character\",[],[\"alt\",{\"sourceInterval\":[60,78]},[\"app\",{\"sourceInterval\":[60,66]},\"letter\",[]],[\"app\",{\"sourceInterval\":[73,78]},\"digit\",[]]]],\"letter\":[\"define\",{\"sourceInterval\":[82,142]},\"a letter\",[],[\"alt\",{\"sourceInterval\":[107,142]},[\"app\",{\"sourceInterval\":[107,112]},\"lower\",[]],[\"app\",{\"sourceInterval\":[119,124]},\"upper\",[]],[\"app\",{\"sourceInterval\":[131,142]},\"unicodeLtmo\",[]]]],\"digit\":[\"define\",{\"sourceInterval\":[146,177]},\"a digit\",[],[\"range\",{\"sourceInterval\":[169,177]},\"0\",\"9\"]],\"hexDigit\":[\"define\",{\"sourceInterval\":[181,254]},\"a hexadecimal digit\",[],[\"alt\",{\"sourceInterval\":[219,254]},[\"app\",{\"sourceInterval\":[219,224]},\"digit\",[]],[\"range\",{\"sourceInterval\":[231,239]},\"a\",\"f\"],[\"range\",{\"sourceInterval\":[246,254]},\"A\",\"F\"]]],\"ListOf\":[\"define\",{\"sourceInterval\":[258,336]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[282,336]},[\"app\",{\"sourceInterval\":[282,307]},\"NonemptyListOf\",[[\"param\",{\"sourceInterval\":[297,301]},0],[\"param\",{\"sourceInterval\":[303,306]},1]]],[\"app\",{\"sourceInterval\":[314,336]},\"EmptyListOf\",[[\"param\",{\"sourceInterval\":[326,330]},0],[\"param\",{\"sourceInterval\":[332,335]},1]]]]],\"NonemptyListOf\":[\"define\",{\"sourceInterval\":[340,388]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[372,388]},[\"param\",{\"sourceInterval\":[372,376]},0],[\"star\",{\"sourceInterval\":[377,388]},[\"seq\",{\"sourceInterval\":[378,386]},[\"param\",{\"sourceInterval\":[378,381]},1],[\"param\",{\"sourceInterval\":[382,386]},0]]]]],\"EmptyListOf\":[\"define\",{\"sourceInterval\":[392,434]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[438,438]}]],\"listOf\":[\"define\",{\"sourceInterval\":[438,516]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[462,516]},[\"app\",{\"sourceInterval\":[462,487]},\"nonemptyListOf\",[[\"param\",{\"sourceInterval\":[477,481]},0],[\"param\",{\"sourceInterval\":[483,486]},1]]],[\"app\",{\"sourceInterval\":[494,516]},\"emptyListOf\",[[\"param\",{\"sourceInterval\":[506,510]},0],[\"param\",{\"sourceInterval\":[512,515]},1]]]]],\"nonemptyListOf\":[\"define\",{\"sourceInterval\":[520,568]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[552,568]},[\"param\",{\"sourceInterval\":[552,556]},0],[\"star\",{\"sourceInterval\":[557,568]},[\"seq\",{\"sourceInterval\":[558,566]},[\"param\",{\"sourceInterval\":[558,561]},1],[\"param\",{\"sourceInterval\":[562,566]},0]]]]],\"emptyListOf\":[\"define\",{\"sourceInterval\":[572,682]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[685,685]}]],\"applySyntactic\":[\"define\",{\"sourceInterval\":[685,710]},null,[\"app\"],[\"param\",{\"sourceInterval\":[707,710]},0]]}]);\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Grammar$1 = Grammar_1;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nGrammar$1.BuiltInRules = builtInRules;\n\nvar {makeRecipe: makeRecipe$2} = makeRecipe$5;\nvar operationsAndAttributes = makeRecipe$2([\"grammar\",{\"source\":\"OperationsAndAttributes {\\n\\n  AttributeSignature =\\n    name\\n\\n  OperationSignature =\\n    name Formals?\\n\\n  Formals\\n    = \\\"(\\\" ListOf<name, \\\",\\\"> \\\")\\\"\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n}\"},\"OperationsAndAttributes\",null,\"AttributeSignature\",{\"AttributeSignature\":[\"define\",{\"sourceInterval\":[29,58]},null,[],[\"app\",{\"sourceInterval\":[54,58]},\"name\",[]]],\"OperationSignature\":[\"define\",{\"sourceInterval\":[62,100]},null,[],[\"seq\",{\"sourceInterval\":[87,100]},[\"app\",{\"sourceInterval\":[87,91]},\"name\",[]],[\"opt\",{\"sourceInterval\":[92,100]},[\"app\",{\"sourceInterval\":[92,99]},\"Formals\",[]]]]],\"Formals\":[\"define\",{\"sourceInterval\":[104,143]},null,[],[\"seq\",{\"sourceInterval\":[118,143]},[\"terminal\",{\"sourceInterval\":[118,121]},\"(\"],[\"app\",{\"sourceInterval\":[122,139]},\"ListOf\",[[\"app\",{\"sourceInterval\":[129,133]},\"name\",[]],[\"terminal\",{\"sourceInterval\":[135,138]},\",\"]]],[\"terminal\",{\"sourceInterval\":[140,143]},\")\"]]],\"name\":[\"define\",{\"sourceInterval\":[147,187]},\"a name\",[],[\"seq\",{\"sourceInterval\":[168,187]},[\"app\",{\"sourceInterval\":[168,177]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[178,187]},[\"app\",{\"sourceInterval\":[178,186]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[191,223]},null,[],[\"alt\",{\"sourceInterval\":[207,223]},[\"terminal\",{\"sourceInterval\":[207,210]},\"_\"],[\"app\",{\"sourceInterval\":[217,223]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[227,257]},null,[],[\"alt\",{\"sourceInterval\":[242,257]},[\"terminal\",{\"sourceInterval\":[242,245]},\"_\"],[\"app\",{\"sourceInterval\":[252,257]},\"alnum\",[]]]]}]);\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Semantics = Semantics_1;\nconst util$1 = util$7;\n\n// ----------------- Deferred initialization -----------------\n\nutil$1.awaitBuiltInRules(builtInRules => {\n  const operationsAndAttributesGrammar = operationsAndAttributes;\n  initBuiltInSemantics(builtInRules);\n  initPrototypeParser(operationsAndAttributesGrammar); // requires BuiltInSemantics\n});\n\nfunction initBuiltInSemantics(builtInRules) {\n  const actions = {\n    empty() {\n      return this.iteration();\n    },\n    nonEmpty(first, _, rest) {\n      return this.iteration([first].concat(rest.children));\n    },\n  };\n\n  Semantics.BuiltInSemantics = Semantics.createSemantics(builtInRules, null).addOperation(\n      'asIteration',\n      {\n        emptyListOf: actions.empty,\n        nonemptyListOf: actions.nonEmpty,\n        EmptyListOf: actions.empty,\n        NonemptyListOf: actions.nonEmpty,\n      }\n  );\n}\n\nfunction initPrototypeParser(grammar) {\n  Semantics.prototypeGrammarSemantics = grammar.createSemantics().addOperation('parse', {\n    AttributeSignature(name) {\n      return {\n        name: name.parse(),\n        formals: [],\n      };\n    },\n    OperationSignature(name, optFormals) {\n      return {\n        name: name.parse(),\n        formals: optFormals.children.map(c => c.parse())[0] || [],\n      };\n    },\n    Formals(oparen, fs, cparen) {\n      return fs.asIteration().children.map(c => c.parse());\n    },\n    name(first, rest) {\n      return this.sourceString;\n    },\n  });\n  Semantics.prototypeGrammar = grammar;\n}\n\nvar {makeRecipe: makeRecipe$1} = makeRecipe$5;\nvar ohmGrammar$1 = makeRecipe$1([\"grammar\",{\"source\":\"Ohm {\\n\\n  Grammars\\n    = Grammar*\\n\\n  Grammar\\n    = ident SuperGrammar? \\\"{\\\" Rule* \\\"}\\\"\\n\\n  SuperGrammar\\n    = \\\"<:\\\" ident\\n\\n  Rule\\n    = ident Formals? ruleDescr? \\\"=\\\"  RuleBody  -- define\\n    | ident Formals?            \\\":=\\\" OverrideRuleBody  -- override\\n    | ident Formals?            \\\"+=\\\" RuleBody  -- extend\\n\\n  RuleBody\\n    = \\\"|\\\"? NonemptyListOf<TopLevelTerm, \\\"|\\\">\\n\\n  TopLevelTerm\\n    = Seq caseName  -- inline\\n    | Seq\\n\\n  OverrideRuleBody\\n    = \\\"|\\\"? NonemptyListOf<OverrideTopLevelTerm, \\\"|\\\">\\n\\n  OverrideTopLevelTerm\\n    = \\\"...\\\"  -- superSplice\\n    | TopLevelTerm\\n\\n  Formals\\n    = \\\"<\\\" ListOf<ident, \\\",\\\"> \\\">\\\"\\n\\n  Params\\n    = \\\"<\\\" ListOf<Seq, \\\",\\\"> \\\">\\\"\\n\\n  Alt\\n    = NonemptyListOf<Seq, \\\"|\\\">\\n\\n  Seq\\n    = Iter*\\n\\n  Iter\\n    = Pred \\\"*\\\"  -- star\\n    | Pred \\\"+\\\"  -- plus\\n    | Pred \\\"?\\\"  -- opt\\n    | Pred\\n\\n  Pred\\n    = \\\"~\\\" Lex  -- not\\n    | \\\"&\\\" Lex  -- lookahead\\n    | Lex\\n\\n  Lex\\n    = \\\"#\\\" Base  -- lex\\n    | Base\\n\\n  Base\\n    = ident Params? ~(ruleDescr? \\\"=\\\" | \\\":=\\\" | \\\"+=\\\")  -- application\\n    | oneCharTerminal \\\"..\\\" oneCharTerminal           -- range\\n    | terminal                                       -- terminal\\n    | \\\"(\\\" Alt \\\")\\\"                                    -- paren\\n\\n  ruleDescr  (a rule description)\\n    = \\\"(\\\" ruleDescrText \\\")\\\"\\n\\n  ruleDescrText\\n    = (~\\\")\\\" any)*\\n\\n  caseName\\n    = \\\"--\\\" (~\\\"\\\\n\\\" space)* name (~\\\"\\\\n\\\" space)* (\\\"\\\\n\\\" | &\\\"}\\\")\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n  ident  (an identifier)\\n    = name\\n\\n  terminal\\n    = \\\"\\\\\\\"\\\" terminalChar* \\\"\\\\\\\"\\\"\\n\\n  oneCharTerminal\\n    = \\\"\\\\\\\"\\\" terminalChar \\\"\\\\\\\"\\\"\\n\\n  terminalChar\\n    = escapeChar\\n      | ~\\\"\\\\\\\\\\\" ~\\\"\\\\\\\"\\\" ~\\\"\\\\n\\\" \\\"\\\\u{0}\\\"..\\\"\\\\u{10FFFF}\\\"\\n\\n  escapeChar  (an escape sequence)\\n    = \\\"\\\\\\\\\\\\\\\\\\\"                                     -- backslash\\n    | \\\"\\\\\\\\\\\\\\\"\\\"                                     -- doubleQuote\\n    | \\\"\\\\\\\\\\\\'\\\"                                     -- singleQuote\\n    | \\\"\\\\\\\\b\\\"                                      -- backspace\\n    | \\\"\\\\\\\\n\\\"                                      -- lineFeed\\n    | \\\"\\\\\\\\r\\\"                                      -- carriageReturn\\n    | \\\"\\\\\\\\t\\\"                                      -- tab\\n    | \\\"\\\\\\\\u{\\\" hexDigit hexDigit? hexDigit?\\n             hexDigit? hexDigit? hexDigit? \\\"}\\\"   -- unicodeCodePoint\\n    | \\\"\\\\\\\\u\\\" hexDigit hexDigit hexDigit hexDigit  -- unicodeEscape\\n    | \\\"\\\\\\\\x\\\" hexDigit hexDigit                    -- hexEscape\\n\\n  space\\n   += comment\\n\\n  comment\\n    = \\\"//\\\" (~\\\"\\\\n\\\" any)* &(\\\"\\\\n\\\" | end)  -- singleLine\\n    | \\\"/*\\\" (~\\\"*/\\\" any)* \\\"*/\\\"  -- multiLine\\n\\n  tokens = token*\\n\\n  token = caseName | comment | ident | operator | punctuation | terminal | any\\n\\n  operator = \\\"<:\\\" | \\\"=\\\" | \\\":=\\\" | \\\"+=\\\" | \\\"*\\\" | \\\"+\\\" | \\\"?\\\" | \\\"~\\\" | \\\"&\\\"\\n\\n  punctuation = \\\"<\\\" | \\\">\\\" | \\\",\\\" | \\\"--\\\"\\n}\"},\"Ohm\",null,\"Grammars\",{\"Grammars\":[\"define\",{\"sourceInterval\":[9,32]},null,[],[\"star\",{\"sourceInterval\":[24,32]},[\"app\",{\"sourceInterval\":[24,31]},\"Grammar\",[]]]],\"Grammar\":[\"define\",{\"sourceInterval\":[36,83]},null,[],[\"seq\",{\"sourceInterval\":[50,83]},[\"app\",{\"sourceInterval\":[50,55]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[56,69]},[\"app\",{\"sourceInterval\":[56,68]},\"SuperGrammar\",[]]],[\"terminal\",{\"sourceInterval\":[70,73]},\"{\"],[\"star\",{\"sourceInterval\":[74,79]},[\"app\",{\"sourceInterval\":[74,78]},\"Rule\",[]]],[\"terminal\",{\"sourceInterval\":[80,83]},\"}\"]]],\"SuperGrammar\":[\"define\",{\"sourceInterval\":[87,116]},null,[],[\"seq\",{\"sourceInterval\":[106,116]},[\"terminal\",{\"sourceInterval\":[106,110]},\"<:\"],[\"app\",{\"sourceInterval\":[111,116]},\"ident\",[]]]],\"Rule_define\":[\"define\",{\"sourceInterval\":[131,181]},null,[],[\"seq\",{\"sourceInterval\":[131,170]},[\"app\",{\"sourceInterval\":[131,136]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[137,145]},[\"app\",{\"sourceInterval\":[137,144]},\"Formals\",[]]],[\"opt\",{\"sourceInterval\":[146,156]},[\"app\",{\"sourceInterval\":[146,155]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[157,160]},\"=\"],[\"app\",{\"sourceInterval\":[162,170]},\"RuleBody\",[]]]],\"Rule_override\":[\"define\",{\"sourceInterval\":[188,248]},null,[],[\"seq\",{\"sourceInterval\":[188,235]},[\"app\",{\"sourceInterval\":[188,193]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[194,202]},[\"app\",{\"sourceInterval\":[194,201]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[214,218]},\":=\"],[\"app\",{\"sourceInterval\":[219,235]},\"OverrideRuleBody\",[]]]],\"Rule_extend\":[\"define\",{\"sourceInterval\":[255,305]},null,[],[\"seq\",{\"sourceInterval\":[255,294]},[\"app\",{\"sourceInterval\":[255,260]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[261,269]},[\"app\",{\"sourceInterval\":[261,268]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[281,285]},\"+=\"],[\"app\",{\"sourceInterval\":[286,294]},\"RuleBody\",[]]]],\"Rule\":[\"define\",{\"sourceInterval\":[120,305]},null,[],[\"alt\",{\"sourceInterval\":[131,305]},[\"app\",{\"sourceInterval\":[131,170]},\"Rule_define\",[]],[\"app\",{\"sourceInterval\":[188,235]},\"Rule_override\",[]],[\"app\",{\"sourceInterval\":[255,294]},\"Rule_extend\",[]]]],\"RuleBody\":[\"define\",{\"sourceInterval\":[309,362]},null,[],[\"seq\",{\"sourceInterval\":[324,362]},[\"opt\",{\"sourceInterval\":[324,328]},[\"terminal\",{\"sourceInterval\":[324,327]},\"|\"]],[\"app\",{\"sourceInterval\":[329,362]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[344,356]},\"TopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[358,361]},\"|\"]]]]],\"TopLevelTerm_inline\":[\"define\",{\"sourceInterval\":[385,408]},null,[],[\"seq\",{\"sourceInterval\":[385,397]},[\"app\",{\"sourceInterval\":[385,388]},\"Seq\",[]],[\"app\",{\"sourceInterval\":[389,397]},\"caseName\",[]]]],\"TopLevelTerm\":[\"define\",{\"sourceInterval\":[366,418]},null,[],[\"alt\",{\"sourceInterval\":[385,418]},[\"app\",{\"sourceInterval\":[385,397]},\"TopLevelTerm_inline\",[]],[\"app\",{\"sourceInterval\":[415,418]},\"Seq\",[]]]],\"OverrideRuleBody\":[\"define\",{\"sourceInterval\":[422,491]},null,[],[\"seq\",{\"sourceInterval\":[445,491]},[\"opt\",{\"sourceInterval\":[445,449]},[\"terminal\",{\"sourceInterval\":[445,448]},\"|\"]],[\"app\",{\"sourceInterval\":[450,491]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[465,485]},\"OverrideTopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[487,490]},\"|\"]]]]],\"OverrideTopLevelTerm_superSplice\":[\"define\",{\"sourceInterval\":[522,543]},null,[],[\"terminal\",{\"sourceInterval\":[522,527]},\"...\"]],\"OverrideTopLevelTerm\":[\"define\",{\"sourceInterval\":[495,562]},null,[],[\"alt\",{\"sourceInterval\":[522,562]},[\"app\",{\"sourceInterval\":[522,527]},\"OverrideTopLevelTerm_superSplice\",[]],[\"app\",{\"sourceInterval\":[550,562]},\"TopLevelTerm\",[]]]],\"Formals\":[\"define\",{\"sourceInterval\":[566,606]},null,[],[\"seq\",{\"sourceInterval\":[580,606]},[\"terminal\",{\"sourceInterval\":[580,583]},\"<\"],[\"app\",{\"sourceInterval\":[584,602]},\"ListOf\",[[\"app\",{\"sourceInterval\":[591,596]},\"ident\",[]],[\"terminal\",{\"sourceInterval\":[598,601]},\",\"]]],[\"terminal\",{\"sourceInterval\":[603,606]},\">\"]]],\"Params\":[\"define\",{\"sourceInterval\":[610,647]},null,[],[\"seq\",{\"sourceInterval\":[623,647]},[\"terminal\",{\"sourceInterval\":[623,626]},\"<\"],[\"app\",{\"sourceInterval\":[627,643]},\"ListOf\",[[\"app\",{\"sourceInterval\":[634,637]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[639,642]},\",\"]]],[\"terminal\",{\"sourceInterval\":[644,647]},\">\"]]],\"Alt\":[\"define\",{\"sourceInterval\":[651,685]},null,[],[\"app\",{\"sourceInterval\":[661,685]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[676,679]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[681,684]},\"|\"]]]],\"Seq\":[\"define\",{\"sourceInterval\":[689,704]},null,[],[\"star\",{\"sourceInterval\":[699,704]},[\"app\",{\"sourceInterval\":[699,703]},\"Iter\",[]]]],\"Iter_star\":[\"define\",{\"sourceInterval\":[719,736]},null,[],[\"seq\",{\"sourceInterval\":[719,727]},[\"app\",{\"sourceInterval\":[719,723]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[724,727]},\"*\"]]],\"Iter_plus\":[\"define\",{\"sourceInterval\":[743,760]},null,[],[\"seq\",{\"sourceInterval\":[743,751]},[\"app\",{\"sourceInterval\":[743,747]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[748,751]},\"+\"]]],\"Iter_opt\":[\"define\",{\"sourceInterval\":[767,783]},null,[],[\"seq\",{\"sourceInterval\":[767,775]},[\"app\",{\"sourceInterval\":[767,771]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[772,775]},\"?\"]]],\"Iter\":[\"define\",{\"sourceInterval\":[708,794]},null,[],[\"alt\",{\"sourceInterval\":[719,794]},[\"app\",{\"sourceInterval\":[719,727]},\"Iter_star\",[]],[\"app\",{\"sourceInterval\":[743,751]},\"Iter_plus\",[]],[\"app\",{\"sourceInterval\":[767,775]},\"Iter_opt\",[]],[\"app\",{\"sourceInterval\":[790,794]},\"Pred\",[]]]],\"Pred_not\":[\"define\",{\"sourceInterval\":[809,824]},null,[],[\"seq\",{\"sourceInterval\":[809,816]},[\"terminal\",{\"sourceInterval\":[809,812]},\"~\"],[\"app\",{\"sourceInterval\":[813,816]},\"Lex\",[]]]],\"Pred_lookahead\":[\"define\",{\"sourceInterval\":[831,852]},null,[],[\"seq\",{\"sourceInterval\":[831,838]},[\"terminal\",{\"sourceInterval\":[831,834]},\"&\"],[\"app\",{\"sourceInterval\":[835,838]},\"Lex\",[]]]],\"Pred\":[\"define\",{\"sourceInterval\":[798,862]},null,[],[\"alt\",{\"sourceInterval\":[809,862]},[\"app\",{\"sourceInterval\":[809,816]},\"Pred_not\",[]],[\"app\",{\"sourceInterval\":[831,838]},\"Pred_lookahead\",[]],[\"app\",{\"sourceInterval\":[859,862]},\"Lex\",[]]]],\"Lex_lex\":[\"define\",{\"sourceInterval\":[876,892]},null,[],[\"seq\",{\"sourceInterval\":[876,884]},[\"terminal\",{\"sourceInterval\":[876,879]},\"#\"],[\"app\",{\"sourceInterval\":[880,884]},\"Base\",[]]]],\"Lex\":[\"define\",{\"sourceInterval\":[866,903]},null,[],[\"alt\",{\"sourceInterval\":[876,903]},[\"app\",{\"sourceInterval\":[876,884]},\"Lex_lex\",[]],[\"app\",{\"sourceInterval\":[899,903]},\"Base\",[]]]],\"Base_application\":[\"define\",{\"sourceInterval\":[918,979]},null,[],[\"seq\",{\"sourceInterval\":[918,963]},[\"app\",{\"sourceInterval\":[918,923]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[924,931]},[\"app\",{\"sourceInterval\":[924,930]},\"Params\",[]]],[\"not\",{\"sourceInterval\":[932,963]},[\"alt\",{\"sourceInterval\":[934,962]},[\"seq\",{\"sourceInterval\":[934,948]},[\"opt\",{\"sourceInterval\":[934,944]},[\"app\",{\"sourceInterval\":[934,943]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[945,948]},\"=\"]],[\"terminal\",{\"sourceInterval\":[951,955]},\":=\"],[\"terminal\",{\"sourceInterval\":[958,962]},\"+=\"]]]]],\"Base_range\":[\"define\",{\"sourceInterval\":[986,1041]},null,[],[\"seq\",{\"sourceInterval\":[986,1022]},[\"app\",{\"sourceInterval\":[986,1001]},\"oneCharTerminal\",[]],[\"terminal\",{\"sourceInterval\":[1002,1006]},\"..\"],[\"app\",{\"sourceInterval\":[1007,1022]},\"oneCharTerminal\",[]]]],\"Base_terminal\":[\"define\",{\"sourceInterval\":[1048,1106]},null,[],[\"app\",{\"sourceInterval\":[1048,1056]},\"terminal\",[]]],\"Base_paren\":[\"define\",{\"sourceInterval\":[1113,1168]},null,[],[\"seq\",{\"sourceInterval\":[1113,1124]},[\"terminal\",{\"sourceInterval\":[1113,1116]},\"(\"],[\"app\",{\"sourceInterval\":[1117,1120]},\"Alt\",[]],[\"terminal\",{\"sourceInterval\":[1121,1124]},\")\"]]],\"Base\":[\"define\",{\"sourceInterval\":[907,1168]},null,[],[\"alt\",{\"sourceInterval\":[918,1168]},[\"app\",{\"sourceInterval\":[918,963]},\"Base_application\",[]],[\"app\",{\"sourceInterval\":[986,1022]},\"Base_range\",[]],[\"app\",{\"sourceInterval\":[1048,1056]},\"Base_terminal\",[]],[\"app\",{\"sourceInterval\":[1113,1124]},\"Base_paren\",[]]]],\"ruleDescr\":[\"define\",{\"sourceInterval\":[1172,1231]},\"a rule description\",[],[\"seq\",{\"sourceInterval\":[1210,1231]},[\"terminal\",{\"sourceInterval\":[1210,1213]},\"(\"],[\"app\",{\"sourceInterval\":[1214,1227]},\"ruleDescrText\",[]],[\"terminal\",{\"sourceInterval\":[1228,1231]},\")\"]]],\"ruleDescrText\":[\"define\",{\"sourceInterval\":[1235,1266]},null,[],[\"star\",{\"sourceInterval\":[1255,1266]},[\"seq\",{\"sourceInterval\":[1256,1264]},[\"not\",{\"sourceInterval\":[1256,1260]},[\"terminal\",{\"sourceInterval\":[1257,1260]},\")\"]],[\"app\",{\"sourceInterval\":[1261,1264]},\"any\",[]]]]],\"caseName\":[\"define\",{\"sourceInterval\":[1270,1338]},null,[],[\"seq\",{\"sourceInterval\":[1285,1338]},[\"terminal\",{\"sourceInterval\":[1285,1289]},\"--\"],[\"star\",{\"sourceInterval\":[1290,1304]},[\"seq\",{\"sourceInterval\":[1291,1302]},[\"not\",{\"sourceInterval\":[1291,1296]},[\"terminal\",{\"sourceInterval\":[1292,1296]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1297,1302]},\"space\",[]]]],[\"app\",{\"sourceInterval\":[1305,1309]},\"name\",[]],[\"star\",{\"sourceInterval\":[1310,1324]},[\"seq\",{\"sourceInterval\":[1311,1322]},[\"not\",{\"sourceInterval\":[1311,1316]},[\"terminal\",{\"sourceInterval\":[1312,1316]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1317,1322]},\"space\",[]]]],[\"alt\",{\"sourceInterval\":[1326,1337]},[\"terminal\",{\"sourceInterval\":[1326,1330]},\"\\n\"],[\"lookahead\",{\"sourceInterval\":[1333,1337]},[\"terminal\",{\"sourceInterval\":[1334,1337]},\"}\"]]]]],\"name\":[\"define\",{\"sourceInterval\":[1342,1382]},\"a name\",[],[\"seq\",{\"sourceInterval\":[1363,1382]},[\"app\",{\"sourceInterval\":[1363,1372]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[1373,1382]},[\"app\",{\"sourceInterval\":[1373,1381]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[1386,1418]},null,[],[\"alt\",{\"sourceInterval\":[1402,1418]},[\"terminal\",{\"sourceInterval\":[1402,1405]},\"_\"],[\"app\",{\"sourceInterval\":[1412,1418]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[1422,1452]},null,[],[\"alt\",{\"sourceInterval\":[1437,1452]},[\"terminal\",{\"sourceInterval\":[1437,1440]},\"_\"],[\"app\",{\"sourceInterval\":[1447,1452]},\"alnum\",[]]]],\"ident\":[\"define\",{\"sourceInterval\":[1456,1489]},\"an identifier\",[],[\"app\",{\"sourceInterval\":[1485,1489]},\"name\",[]]],\"terminal\":[\"define\",{\"sourceInterval\":[1493,1531]},null,[],[\"seq\",{\"sourceInterval\":[1508,1531]},[\"terminal\",{\"sourceInterval\":[1508,1512]},\"\\\"\"],[\"star\",{\"sourceInterval\":[1513,1526]},[\"app\",{\"sourceInterval\":[1513,1525]},\"terminalChar\",[]]],[\"terminal\",{\"sourceInterval\":[1527,1531]},\"\\\"\"]]],\"oneCharTerminal\":[\"define\",{\"sourceInterval\":[1535,1579]},null,[],[\"seq\",{\"sourceInterval\":[1557,1579]},[\"terminal\",{\"sourceInterval\":[1557,1561]},\"\\\"\"],[\"app\",{\"sourceInterval\":[1562,1574]},\"terminalChar\",[]],[\"terminal\",{\"sourceInterval\":[1575,1579]},\"\\\"\"]]],\"terminalChar\":[\"define\",{\"sourceInterval\":[1583,1660]},null,[],[\"alt\",{\"sourceInterval\":[1602,1660]},[\"app\",{\"sourceInterval\":[1602,1612]},\"escapeChar\",[]],[\"seq\",{\"sourceInterval\":[1621,1660]},[\"not\",{\"sourceInterval\":[1621,1626]},[\"terminal\",{\"sourceInterval\":[1622,1626]},\"\\\\\"]],[\"not\",{\"sourceInterval\":[1627,1632]},[\"terminal\",{\"sourceInterval\":[1628,1632]},\"\\\"\"]],[\"not\",{\"sourceInterval\":[1633,1638]},[\"terminal\",{\"sourceInterval\":[1634,1638]},\"\\n\"]],[\"range\",{\"sourceInterval\":[1639,1660]},\"\\u0000\",\"􏿿\"]]]],\"escapeChar_backslash\":[\"define\",{\"sourceInterval\":[1703,1758]},null,[],[\"terminal\",{\"sourceInterval\":[1703,1709]},\"\\\\\\\\\"]],\"escapeChar_doubleQuote\":[\"define\",{\"sourceInterval\":[1765,1822]},null,[],[\"terminal\",{\"sourceInterval\":[1765,1771]},\"\\\\\\\"\"]],\"escapeChar_singleQuote\":[\"define\",{\"sourceInterval\":[1829,1886]},null,[],[\"terminal\",{\"sourceInterval\":[1829,1835]},\"\\\\'\"]],\"escapeChar_backspace\":[\"define\",{\"sourceInterval\":[1893,1948]},null,[],[\"terminal\",{\"sourceInterval\":[1893,1898]},\"\\\\b\"]],\"escapeChar_lineFeed\":[\"define\",{\"sourceInterval\":[1955,2009]},null,[],[\"terminal\",{\"sourceInterval\":[1955,1960]},\"\\\\n\"]],\"escapeChar_carriageReturn\":[\"define\",{\"sourceInterval\":[2016,2076]},null,[],[\"terminal\",{\"sourceInterval\":[2016,2021]},\"\\\\r\"]],\"escapeChar_tab\":[\"define\",{\"sourceInterval\":[2083,2132]},null,[],[\"terminal\",{\"sourceInterval\":[2083,2088]},\"\\\\t\"]],\"escapeChar_unicodeCodePoint\":[\"define\",{\"sourceInterval\":[2139,2243]},null,[],[\"seq\",{\"sourceInterval\":[2139,2221]},[\"terminal\",{\"sourceInterval\":[2139,2145]},\"\\\\u{\"],[\"app\",{\"sourceInterval\":[2146,2154]},\"hexDigit\",[]],[\"opt\",{\"sourceInterval\":[2155,2164]},[\"app\",{\"sourceInterval\":[2155,2163]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2165,2174]},[\"app\",{\"sourceInterval\":[2165,2173]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2188,2197]},[\"app\",{\"sourceInterval\":[2188,2196]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2198,2207]},[\"app\",{\"sourceInterval\":[2198,2206]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2208,2217]},[\"app\",{\"sourceInterval\":[2208,2216]},\"hexDigit\",[]]],[\"terminal\",{\"sourceInterval\":[2218,2221]},\"}\"]]],\"escapeChar_unicodeEscape\":[\"define\",{\"sourceInterval\":[2250,2309]},null,[],[\"seq\",{\"sourceInterval\":[2250,2291]},[\"terminal\",{\"sourceInterval\":[2250,2255]},\"\\\\u\"],[\"app\",{\"sourceInterval\":[2256,2264]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2265,2273]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2274,2282]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2283,2291]},\"hexDigit\",[]]]],\"escapeChar_hexEscape\":[\"define\",{\"sourceInterval\":[2316,2371]},null,[],[\"seq\",{\"sourceInterval\":[2316,2339]},[\"terminal\",{\"sourceInterval\":[2316,2321]},\"\\\\x\"],[\"app\",{\"sourceInterval\":[2322,2330]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2331,2339]},\"hexDigit\",[]]]],\"escapeChar\":[\"define\",{\"sourceInterval\":[1664,2371]},\"an escape sequence\",[],[\"alt\",{\"sourceInterval\":[1703,2371]},[\"app\",{\"sourceInterval\":[1703,1709]},\"escapeChar_backslash\",[]],[\"app\",{\"sourceInterval\":[1765,1771]},\"escapeChar_doubleQuote\",[]],[\"app\",{\"sourceInterval\":[1829,1835]},\"escapeChar_singleQuote\",[]],[\"app\",{\"sourceInterval\":[1893,1898]},\"escapeChar_backspace\",[]],[\"app\",{\"sourceInterval\":[1955,1960]},\"escapeChar_lineFeed\",[]],[\"app\",{\"sourceInterval\":[2016,2021]},\"escapeChar_carriageReturn\",[]],[\"app\",{\"sourceInterval\":[2083,2088]},\"escapeChar_tab\",[]],[\"app\",{\"sourceInterval\":[2139,2221]},\"escapeChar_unicodeCodePoint\",[]],[\"app\",{\"sourceInterval\":[2250,2291]},\"escapeChar_unicodeEscape\",[]],[\"app\",{\"sourceInterval\":[2316,2339]},\"escapeChar_hexEscape\",[]]]],\"space\":[\"extend\",{\"sourceInterval\":[2375,2394]},null,[],[\"app\",{\"sourceInterval\":[2387,2394]},\"comment\",[]]],\"comment_singleLine\":[\"define\",{\"sourceInterval\":[2412,2458]},null,[],[\"seq\",{\"sourceInterval\":[2412,2443]},[\"terminal\",{\"sourceInterval\":[2412,2416]},\"//\"],[\"star\",{\"sourceInterval\":[2417,2429]},[\"seq\",{\"sourceInterval\":[2418,2427]},[\"not\",{\"sourceInterval\":[2418,2423]},[\"terminal\",{\"sourceInterval\":[2419,2423]},\"\\n\"]],[\"app\",{\"sourceInterval\":[2424,2427]},\"any\",[]]]],[\"lookahead\",{\"sourceInterval\":[2430,2443]},[\"alt\",{\"sourceInterval\":[2432,2442]},[\"terminal\",{\"sourceInterval\":[2432,2436]},\"\\n\"],[\"app\",{\"sourceInterval\":[2439,2442]},\"end\",[]]]]]],\"comment_multiLine\":[\"define\",{\"sourceInterval\":[2465,2501]},null,[],[\"seq\",{\"sourceInterval\":[2465,2487]},[\"terminal\",{\"sourceInterval\":[2465,2469]},\"/*\"],[\"star\",{\"sourceInterval\":[2470,2482]},[\"seq\",{\"sourceInterval\":[2471,2480]},[\"not\",{\"sourceInterval\":[2471,2476]},[\"terminal\",{\"sourceInterval\":[2472,2476]},\"*/\"]],[\"app\",{\"sourceInterval\":[2477,2480]},\"any\",[]]]],[\"terminal\",{\"sourceInterval\":[2483,2487]},\"*/\"]]],\"comment\":[\"define\",{\"sourceInterval\":[2398,2501]},null,[],[\"alt\",{\"sourceInterval\":[2412,2501]},[\"app\",{\"sourceInterval\":[2412,2443]},\"comment_singleLine\",[]],[\"app\",{\"sourceInterval\":[2465,2487]},\"comment_multiLine\",[]]]],\"tokens\":[\"define\",{\"sourceInterval\":[2505,2520]},null,[],[\"star\",{\"sourceInterval\":[2514,2520]},[\"app\",{\"sourceInterval\":[2514,2519]},\"token\",[]]]],\"token\":[\"define\",{\"sourceInterval\":[2524,2600]},null,[],[\"alt\",{\"sourceInterval\":[2532,2600]},[\"app\",{\"sourceInterval\":[2532,2540]},\"caseName\",[]],[\"app\",{\"sourceInterval\":[2543,2550]},\"comment\",[]],[\"app\",{\"sourceInterval\":[2553,2558]},\"ident\",[]],[\"app\",{\"sourceInterval\":[2561,2569]},\"operator\",[]],[\"app\",{\"sourceInterval\":[2572,2583]},\"punctuation\",[]],[\"app\",{\"sourceInterval\":[2586,2594]},\"terminal\",[]],[\"app\",{\"sourceInterval\":[2597,2600]},\"any\",[]]]],\"operator\":[\"define\",{\"sourceInterval\":[2604,2669]},null,[],[\"alt\",{\"sourceInterval\":[2615,2669]},[\"terminal\",{\"sourceInterval\":[2615,2619]},\"<:\"],[\"terminal\",{\"sourceInterval\":[2622,2625]},\"=\"],[\"terminal\",{\"sourceInterval\":[2628,2632]},\":=\"],[\"terminal\",{\"sourceInterval\":[2635,2639]},\"+=\"],[\"terminal\",{\"sourceInterval\":[2642,2645]},\"*\"],[\"terminal\",{\"sourceInterval\":[2648,2651]},\"+\"],[\"terminal\",{\"sourceInterval\":[2654,2657]},\"?\"],[\"terminal\",{\"sourceInterval\":[2660,2663]},\"~\"],[\"terminal\",{\"sourceInterval\":[2666,2669]},\"&\"]]],\"punctuation\":[\"define\",{\"sourceInterval\":[2673,2709]},null,[],[\"alt\",{\"sourceInterval\":[2687,2709]},[\"terminal\",{\"sourceInterval\":[2687,2690]},\"<\"],[\"terminal\",{\"sourceInterval\":[2693,2696]},\">\"],[\"terminal\",{\"sourceInterval\":[2699,2702]},\",\"],[\"terminal\",{\"sourceInterval\":[2705,2709]},\"--\"]]]}]);\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Builder = Builder_1;\nconst Grammar = Grammar_1;\nconst Namespace = Namespace_1;\nconst common = common$l;\nconst errors = errors$9;\nconst pexprs = pexprs$6;\nconst util = util$7;\nconst version = version$1;\nconst {makeRecipe} = makeRecipe$5;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// The metagrammar, i.e. the grammar for Ohm grammars. Initialized at the\n// bottom of this file because loading the grammar requires Ohm itself.\nlet ohmGrammar;\n\nconst superSplicePlaceholder = Object.create(pexprs.PExpr.prototype);\n\nconst isBuffer = obj =>\n  !!obj.constructor &&\n  typeof obj.constructor.isBuffer === 'function' &&\n  obj.constructor.isBuffer(obj);\n\n// Returns a Grammar instance (i.e., an object with a `match` method) for\n// `tree`, which is the concrete syntax tree of a user-written grammar.\n// The grammar will be assigned into `namespace` under the name of the grammar\n// as specified in the source.\nfunction buildGrammar(match, namespace, optOhmGrammarForTesting) {\n  const builder = new Builder();\n  let decl;\n  let currentRuleName;\n  let currentRuleFormals;\n  let overriding = false;\n  const metaGrammar = optOhmGrammarForTesting || ohmGrammar;\n\n  // A visitor that produces a Grammar instance from the CST.\n  const helpers = metaGrammar.createSemantics().addOperation('visit', {\n    Grammars(grammarIter) {\n      return grammarIter.children.map(c => c.visit());\n    },\n    Grammar(id, s, _open, rules, _close) {\n      const grammarName = id.visit();\n      decl = builder.newGrammar(grammarName, namespace);\n      s.child(0) && s.child(0).visit();\n      rules.children.map(c => c.visit());\n      const g = decl.build();\n      g.source = this.source.trimmed();\n      if (grammarName in namespace) {\n        throw errors.duplicateGrammarDeclaration(g, namespace);\n      }\n      namespace[grammarName] = g;\n      return g;\n    },\n\n    SuperGrammar(_, n) {\n      const superGrammarName = n.visit();\n      if (superGrammarName === 'null') {\n        decl.withSuperGrammar(null);\n      } else {\n        if (!namespace || !(superGrammarName in namespace)) {\n          throw errors.undeclaredGrammar(superGrammarName, namespace, n.source);\n        }\n        decl.withSuperGrammar(namespace[superGrammarName]);\n      }\n    },\n\n    Rule_define(n, fs, d, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n      // If there is no default start rule yet, set it now. This must be done before visiting\n      // the body, because it might contain an inline rule definition.\n      if (!decl.defaultStartRule && decl.ensureSuperGrammar() !== Grammar.ProtoBuiltInRules) {\n        decl.withDefaultStartRule(currentRuleName);\n      }\n      const body = b.visit();\n      const description = d.children.map(c => c.visit())[0];\n      const source = this.source.trimmed();\n      return decl.define(currentRuleName, currentRuleFormals, body, description, source);\n    },\n    Rule_override(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n\n      const source = this.source.trimmed();\n      decl.ensureSuperGrammarRuleForOverriding(currentRuleName, source);\n\n      overriding = true;\n      const body = b.visit();\n      overriding = false;\n      return decl.override(currentRuleName, currentRuleFormals, body, null, source);\n    },\n    Rule_extend(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n      const body = b.visit();\n      const source = this.source.trimmed();\n      return decl.extend(currentRuleName, currentRuleFormals, body, null, source);\n    },\n    RuleBody(_, terms) {\n      return builder.alt(...terms.visit()).withSource(this.source);\n    },\n    OverrideRuleBody(_, terms) {\n      const args = terms.visit();\n\n      // Check if the super-splice operator (`...`) appears in the terms.\n      const expansionPos = args.indexOf(superSplicePlaceholder);\n      if (expansionPos >= 0) {\n        const beforeTerms = args.slice(0, expansionPos);\n        const afterTerms = args.slice(expansionPos + 1);\n\n        // Ensure it appears no more than once.\n        afterTerms.forEach(t => {\n          if (t === superSplicePlaceholder) throw errors.multipleSuperSplices(t);\n        });\n\n        return new pexprs.Splice(\n            decl.superGrammar,\n            currentRuleName,\n            beforeTerms,\n            afterTerms\n        ).withSource(this.source);\n      } else {\n        return builder.alt(...args).withSource(this.source);\n      }\n    },\n    Formals(opointy, fs, cpointy) {\n      return fs.visit();\n    },\n\n    Params(opointy, ps, cpointy) {\n      return ps.visit();\n    },\n\n    Alt(seqs) {\n      return builder.alt(...seqs.visit()).withSource(this.source);\n    },\n\n    TopLevelTerm_inline(b, n) {\n      const inlineRuleName = currentRuleName + '_' + n.visit();\n      const body = b.visit();\n      const source = this.source.trimmed();\n      const isNewRuleDeclaration = !(\n        decl.superGrammar && decl.superGrammar.rules[inlineRuleName]\n      );\n      if (overriding && !isNewRuleDeclaration) {\n        decl.override(inlineRuleName, currentRuleFormals, body, null, source);\n      } else {\n        decl.define(inlineRuleName, currentRuleFormals, body, null, source);\n      }\n      const params = currentRuleFormals.map(formal => builder.app(formal));\n      return builder.app(inlineRuleName, params).withSource(body.source);\n    },\n    OverrideTopLevelTerm_superSplice(_) {\n      return superSplicePlaceholder;\n    },\n\n    Seq(expr) {\n      return builder.seq(...expr.children.map(c => c.visit())).withSource(this.source);\n    },\n\n    Iter_star(x, _) {\n      return builder.star(x.visit()).withSource(this.source);\n    },\n    Iter_plus(x, _) {\n      return builder.plus(x.visit()).withSource(this.source);\n    },\n    Iter_opt(x, _) {\n      return builder.opt(x.visit()).withSource(this.source);\n    },\n\n    Pred_not(_, x) {\n      return builder.not(x.visit()).withSource(this.source);\n    },\n    Pred_lookahead(_, x) {\n      return builder.lookahead(x.visit()).withSource(this.source);\n    },\n\n    Lex_lex(_, x) {\n      return builder.lex(x.visit()).withSource(this.source);\n    },\n\n    Base_application(rule, ps) {\n      const params = ps.children.map(c => c.visit())[0] || [];\n      return builder.app(rule.visit(), params).withSource(this.source);\n    },\n    Base_range(from, _, to) {\n      return builder.range(from.visit(), to.visit()).withSource(this.source);\n    },\n    Base_terminal(expr) {\n      return builder.terminal(expr.visit()).withSource(this.source);\n    },\n    Base_paren(open, x, close) {\n      return x.visit();\n    },\n\n    ruleDescr(open, t, close) {\n      return t.visit();\n    },\n    ruleDescrText(_) {\n      return this.sourceString.trim();\n    },\n\n    caseName(_, space1, n, space2, end) {\n      return n.visit();\n    },\n\n    name(first, rest) {\n      return this.sourceString;\n    },\n    nameFirst(expr) {},\n    nameRest(expr) {},\n\n    terminal(open, cs, close) {\n      return cs.children.map(c => c.visit()).join('');\n    },\n\n    oneCharTerminal(open, c, close) {\n      return c.visit();\n    },\n\n    escapeChar(c) {\n      try {\n        return common.unescapeCodePoint(this.sourceString);\n      } catch (err) {\n        if (err instanceof RangeError && err.message.startsWith('Invalid code point ')) {\n          throw errors.invalidCodePoint(c);\n        }\n        throw err; // Rethrow\n      }\n    },\n\n    NonemptyListOf(x, _, xs) {\n      return [x.visit()].concat(xs.children.map(c => c.visit()));\n    },\n    EmptyListOf() {\n      return [];\n    },\n\n    _terminal() {\n      return this.sourceString;\n    },\n  });\n  return helpers(match).visit();\n}\n\nfunction compileAndLoad(source, namespace) {\n  const m = ohmGrammar.match(source, 'Grammars');\n  if (m.failed()) {\n    throw errors.grammarSyntaxError(m);\n  }\n  return buildGrammar(m, namespace);\n}\n\nfunction grammar(source, optNamespace) {\n  const ns = grammars(source, optNamespace);\n\n  // Ensure that the source contained no more than one grammar definition.\n  const grammarNames = Object.keys(ns);\n  if (grammarNames.length === 0) {\n    throw new Error('Missing grammar definition');\n  } else if (grammarNames.length > 1) {\n    const secondGrammar = ns[grammarNames[1]];\n    const interval = secondGrammar.source;\n    throw new Error(\n        util.getLineAndColumnMessage(interval.sourceString, interval.startIdx) +\n        'Found more than one grammar definition -- use ohm.grammars() instead.'\n    );\n  }\n  return ns[grammarNames[0]]; // Return the one and only grammar.\n}\n\nfunction grammars(source, optNamespace) {\n  const ns = Namespace.extend(Namespace.asNamespace(optNamespace));\n  if (typeof source !== 'string') {\n    // For convenience, detect Node.js Buffer objects and automatically call toString().\n    if (isBuffer(source)) {\n      source = source.toString();\n    } else {\n      throw new TypeError(\n          'Expected string as first argument, got ' + common.unexpectedObjToString(source)\n      );\n    }\n  }\n  compileAndLoad(source, ns);\n  return ns;\n}\n\nfunction grammarFromScriptElement(optNode) {\n  throw new Error(\n      'grammarFromScriptElement was removed in Ohm v16.0. See https://git.io/Jwow5 for more info.'\n  );\n}\n\nfunction grammarsFromScriptElements(optNodeOrNodeList) {\n  throw new Error(\n      'grammarsFromScriptElements was removed in Ohm v16.0. See https://git.io/Jwow5 for more info.'\n  );\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\n// Stuff that users should know about\nmain$1.exports = {\n  createNamespace: Namespace.createNamespace,\n  grammar,\n  grammars,\n  grammarFromScriptElement,\n  grammarsFromScriptElements,\n  makeRecipe,\n  ohmGrammar: null, // Initialized below, after Grammar.BuiltInRules.\n  pexprs,\n  util,\n  version,\n};\n\n// Stuff for testing, etc.\nmain$1.exports._buildGrammar = buildGrammar;\n\n// Late initialization for stuff that is bootstrapped.\n\n\nutil.announceBuiltInRules(Grammar.BuiltInRules);\n\nmain$1.exports.ohmGrammar = ohmGrammar = ohmGrammar$1;\nGrammar.initApplicationParser(ohmGrammar, buildGrammar);\n\nvar ohm = main$1.exports;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst {assert} = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Helpers\n\nfunction getProp(name, thing, fn) {\n  return fn(thing[name]);\n}\n\nfunction mapProp(name, thing, fn) {\n  return thing[name].map(fn);\n}\n\n// Returns a function that will walk a single property of a node.\n// `descriptor` is a string indicating the property name, optionally ending\n// with '[]' (e.g., 'children[]').\nfunction getPropWalkFn(descriptor) {\n  const parts = descriptor.split(/ ?\\[\\]/);\n  if (parts.length === 2) {\n    return mapProp.bind(null, parts[0]);\n  }\n  return getProp.bind(null, descriptor);\n}\n\nfunction getProps(walkFns, thing, fn) {\n  return walkFns.map(walkFn => walkFn(thing, fn));\n}\n\nfunction getWalkFn(shape) {\n  if (typeof shape === 'string') {\n    return getProps.bind(null, [getPropWalkFn(shape)]);\n  } else if (Array.isArray(shape)) {\n    return getProps.bind(null, shape.map(getPropWalkFn));\n  } else {\n    assert(typeof shape === 'function', 'Expected a string, Array, or function');\n    assert(shape.length === 2, 'Expected a function of arity 2, got ' + shape.length);\n    return shape;\n  }\n}\n\nfunction isRestrictedIdentifier(str) {\n  return /^[a-zA-Z_][0-9a-zA-Z_]*$/.test(str);\n}\n\nfunction trim(s) {\n  return s.trim();\n}\n\nfunction parseSignature(sig) {\n  const parts = sig.split(/[()]/).map(trim);\n  if (parts.length === 3 && parts[2] === '') {\n    const name = parts[0];\n    let params = [];\n    if (parts[1].length > 0) {\n      params = parts[1].split(',').map(trim);\n    }\n    if (isRestrictedIdentifier(name) && params.every(isRestrictedIdentifier)) {\n      return {name, formals: params};\n    }\n  }\n  throw new Error('Invalid operation signature: ' + sig);\n}\n\n/*\n  A VisitorFamily contains a set of recursive operations that are defined over some kind of\n  tree structure. The `config` parameter specifies how to walk the tree:\n  - 'getTag' is function which, given a node in the tree, returns the node's 'tag' (type)\n  - 'shapes' an object that maps from a tag to a value that describes how to recursively\n    evaluate the operation for nodes of that type. The value can be:\n    * a string indicating the property name that holds that node's only child\n    * an Array of property names (or an empty array indicating a leaf type), or\n    * a function taking two arguments (node, fn), and returning an Array which is the result\n      of apply `fn` to each of the node's children.\n */\nfunction VisitorFamily(config) {\n  this._shapes = config.shapes;\n  this._getTag = config.getTag;\n\n  this.Adapter = function(thing, family) {\n    this._adaptee = thing;\n    this._family = family;\n  };\n  this.Adapter.prototype.valueOf = function() {\n    throw new Error('heeey!');\n  };\n  this.operations = {};\n\n  this._arities = Object.create(null);\n  this._getChildren = Object.create(null);\n\n  Object.keys(this._shapes).forEach(k => {\n    const shape = this._shapes[k];\n    this._getChildren[k] = getWalkFn(shape);\n\n    // A function means the arity isn't fixed, so don't put an entry in the arity map.\n    if (typeof shape !== 'function') {\n      this._arities[k] = Array.isArray(shape) ? shape.length : 1;\n    }\n  });\n  this._wrap = thing => new this.Adapter(thing, this);\n}\n\nVisitorFamily.prototype.wrap = function(thing) {\n  return this._wrap(thing);\n};\n\nVisitorFamily.prototype._checkActionDict = function(dict) {\n  Object.keys(dict).forEach(k => {\n    assert(k in this._getChildren, \"Unrecognized action name '\" + k + \"'\");\n    const action = dict[k];\n    assert(typeof action === 'function', \"Key '\" + k + \"': expected function, got \" + action);\n    if (k in this._arities) {\n      const expected = this._arities[k];\n      const actual = dict[k].length;\n      assert(\n          actual === expected,\n          \"Action '\" + k + \"' has the wrong arity: expected \" + expected + ', got ' + actual\n      );\n    }\n  });\n};\n\nVisitorFamily.prototype.addOperation = function(signature, actions) {\n  const sig = parseSignature(signature);\n  const {name} = sig;\n  this._checkActionDict(actions);\n  this.operations[name] = {\n    name,\n    formals: sig.formals,\n    actions,\n  };\n\n  const family = this;\n  this.Adapter.prototype[name] = function(...args) {\n    const tag = family._getTag(this._adaptee);\n    assert(tag in family._getChildren, \"getTag returned unrecognized tag '\" + tag + \"'\");\n    assert(tag in actions, \"No action for '\" + tag + \"' in operation '\" + name + \"'\");\n\n    // Create an \"arguments object\" from the arguments that were passed to this\n    // operation / attribute.\n    const argsObj = Object.create(null);\n    for (const [i, val] of Object.entries(args)) {\n      argsObj[sig.formals[i]] = val;\n    }\n\n    const oldArgs = this.args;\n    this.args = argsObj;\n    const ans = actions[tag].apply(\n        this,\n        family._getChildren[tag](this._adaptee, family._wrap)\n    );\n    this.args = oldArgs;\n    return ans;\n  };\n  return this;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar VisitorFamily_1 = VisitorFamily;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nconst defaultOperation = {\n  _terminal() {\n    return this.sourceString;\n  },\n\n  _nonterminal(...children) {\n    const {ctorName} = this._node;\n    const {mapping} = this.args;\n\n    // without customization\n    if (!Object.prototype.hasOwnProperty.call(mapping, ctorName)) {\n      // lexical rule\n      if (this.isLexical()) {\n        return this.sourceString;\n      }\n\n      // singular node (e.g. only surrounded by literals or lookaheads)\n      const realChildren = children.filter(child => !child.isTerminal());\n      if (realChildren.length === 1) {\n        return realChildren[0].toAST(mapping);\n      }\n\n      // rest: terms with multiple children\n    }\n\n    // direct forward\n    if (typeof mapping[ctorName] === 'number') {\n      return children[mapping[ctorName]].toAST(mapping);\n    }\n\n    // named/mapped children or unnamed children ('0', '1', '2', ...)\n    const propMap = mapping[ctorName] || children;\n    const node = {\n      type: ctorName,\n    };\n    // eslint-disable-next-line guard-for-in\n    for (const prop in propMap) {\n      const mappedProp = mapping[ctorName] && mapping[ctorName][prop];\n      if (typeof mappedProp === 'number') {\n        // direct forward\n        node[prop] = children[mappedProp].toAST(mapping);\n      } else if (\n        typeof mappedProp === 'string' ||\n        typeof mappedProp === 'boolean' ||\n        mappedProp === null\n      ) {\n        // primitive value\n        node[prop] = mappedProp;\n      } else if (typeof mappedProp === 'object' && mappedProp instanceof Number) {\n        // primitive number (must be unboxed)\n        node[prop] = Number(mappedProp);\n      } else if (typeof mappedProp === 'function') {\n        // computed value\n        node[prop] = mappedProp.call(this, children);\n      } else if (mappedProp === undefined) {\n        if (children[prop] && !children[prop].isTerminal()) {\n          node[prop] = children[prop].toAST(mapping);\n        } else {\n          // delete predefined 'type' properties, like 'type', if explicitely removed\n          delete node[prop];\n        }\n      }\n    }\n    return node;\n  },\n\n  _iter(...children) {\n    if (this._node.isOptional()) {\n      if (this.numChildren === 0) {\n        return null;\n      } else {\n        return children[0].toAST(this.args.mapping);\n      }\n    }\n\n    return children.map(function(child) {\n      return child.toAST(this.args.mapping);\n    }, this);\n  },\n\n  NonemptyListOf(first, sep, rest) {\n    return [first.toAST(this.args.mapping)].concat(rest.toAST(this.args.mapping));\n  },\n\n  EmptyListOf() {\n    return [];\n  },\n};\n\n// Returns a plain JavaScript object that includes an abstract syntax tree (AST)\n// for the given match result `res` containg a concrete syntax tree (CST) and grammar.\n// The optional `mapping` parameter can be used to customize how the nodes of the CST\n// are mapped to the AST (see /doc/extras.md#toastmatchresult-mapping).\nfunction toAST(res, mapping) {\n  if (typeof res.failed !== 'function' || res.failed()) {\n    throw new Error('toAST() expects a succesful MatchResult as first parameter');\n  }\n\n  mapping = Object.assign({}, mapping);\n  const operation = Object.assign({}, defaultOperation);\n  for (const termName in mapping) {\n    if (typeof mapping[termName] === 'function') {\n      operation[termName] = mapping[termName];\n      delete mapping[termName];\n    }\n  }\n  const g = res._cst.grammar;\n  const s = g.createSemantics().addOperation('toAST(mapping)', operation);\n  return s(res).toAST(mapping);\n}\n\n// Returns a semantics containg the toAST(mapping) operation for the given grammar g.\nfunction semanticsForToAST(g) {\n  if (typeof g.createSemantics !== 'function') {\n    throw new Error('semanticsToAST() expects a Grammar as parameter');\n  }\n\n  return g.createSemantics().addOperation('toAST(mapping)', defaultOperation);\n}\n\nvar semanticsToAST = {\n  helper: toAST,\n  semantics: semanticsForToAST,\n};\n\nvar extras = {\n  VisitorFamily: VisitorFamily_1,\n  semanticsForToAST: semanticsToAST.semantics,\n  toAST: semanticsToAST.helper,\n};\n\nexport { ohm as default, extras };\n","import UUID from './lib/UUID.mjs'\nimport Decimal from './lib/Decimal.mjs'\nimport Money from './lib/Money.mjs'\nimport Null from './lib/Null.mjs'\nimport * as attr from './lib/functions.mjs'\nimport parse from './lib/parse.mjs'\n\nwindow.JSONTag = {\n\tUUID: UUID,\n\tDecimal: Decimal,\n\tMoney: Money,\n\tNull: Null,\n\tstringify: attr.stringify,\n\tparse: parse,\n\tgetType: attr.getType,\n\tsetType: attr.setType,\n\tgetTypeString: attr.getTypeString,\n\tsetAttribute: attr.setAttribute,\n\tgetAttribute: attr.getAttribute,\n\taddAttribute: attr.addAttribute,\n\tgetAttributes: attr.getAttributes,\n\tsetAttributes: attr.setAttributes,\n\tgetAttributesString: attr.getAttributesString,\n\tisNull: attr.isNull\n}","import * as JSONTag from './functions.mjs'\nimport JSONTagTypes from './types.mjs'\nimport ohm from 'ohm-js'\n\nexport default function parse(text, reviver) {\n\t// adapted from https://github.com/jwmerrill/ohm-grammar-json/\n\tlet refs = {}\n\tlet unresolved = []\n\n\tlet JSONT = ohm.grammar(`\nJSONT {\n  Start = Value\n\n  Value =  \n    ( ObjectType? Object\n    | ArrayType? Array\n    | StringType? String\n    | UUIDType? UUID\n    | NumberType? Number\n    | IntType? Integer\n    | FloatType? Float\n    | DecimalType? Decimal\n    | MoneyType? Money\n    | StringyType? String\n    | BooleanType? True\n    | BooleanType? False\n    | Type? Null\n  ) -- nonNull\n  | \"null\" -- bareNull\n\n  ObjectType = \n    \"<\" \"object\" Attributes \">\"\n\n  ArrayType = \n    \"<\" \"array\" Attributes \">\"\n\n  StringType = \n    \"<\" \"string\" Attributes \">\"\n\n  UUIDType = \n    \"<\" \"uuid\" Attributes \">\"\n\n  NumberType = \n    \"<\" \"number\" Attributes \">\"\n\n  IntType = \n    \"<\" IntTypeName Attributes \">\"\n\n  FloatType = \n    \"<\" FloatTypeName Attributes \">\"\n\n  DecimalType =\n  \t\"<\" \"decimal\" Attributes \">\"\n\n  BooleanType = \n    \"<\" \"boolean\" Attributes \">\"\n\n  MoneyType =\n    \"<\" \"money\" Attributes \">\"\n\n  StringyType =\n\t\t\"<\" StringyTypeNames Attributes \">\"\n\n  Type = \n  \t\"<\" TypeName Attributes \">\"\n\n  TypeName = \n    \"object\" | \"array\" | \"string\" | \"number\" | \"boolean\" | \"decimal\" | \"money\" | \"uuid\" | \n\t\tStringyTypeNames | IntTypeName | FloatTypeName |  \n    \"timestamp\" \n\n  StringyTypeNames =\n    \"link\" | \"text\" | \"blob\" | \"color\" | \"date\" | \"email\" | \"hash\" | \"interval\" | \"phone\" | \"range\" | \"time\" | \"url\" \n\n  IntTypeName = \n\t\t\"int\" | \"uint\" | \"int8\" | \"uint8\" | \"int16\" | \"uint16\" | \"int32\" |\n    \"uint32\" | \"int64\" | \"uint64\" \n\n  FloatTypeName = \n    \"float\" | \"float32\" | \"float64\"\n\n  Attributes =\n  \tAttribute*\n\n  Attribute =\n  \tName \"=\" stringLiteral\n\n  Name =\n  \tletter alnum*\n\n  Object =\n    \"{\" \"}\" -- empty\n    | \"{\" Pair (\",\" Pair)* \"}\" -- nonEmpty\n\n  Pair =\n    String \":\" Value\n\n  Array =\n    \"[\" \"]\" -- empty\n    | \"[\" Value (\",\" Value)* \"]\" -- nonEmpty\n\n  UUID = \"\\\\\"\" uuidLiteral \"\\\\\"\"\n\n  uuidLiteral = \n \t  hex hex hex hex hex hex hex hex \"-\" \n\t\thex hex hex hex \"-\"\n\t\t\"0\"..\"8\" hex hex hex \"-\"\n\t\t( \"0\" | \"8\" | \"9\" | \"a\" | \"A\" | \"b\" | \"B\" )\n\t\thex hex hex \"-\"\n\t\thex hex hex hex hex hex hex hex hex hex hex hex\n  \t\n  hex = \"0\"..\"9\" | \"a\"..\"f\" | \"A\"..\"F\"\n\n  Money =\n  \t\"\\\\\"\" upper* \"$\" decimal \"\\\\\"\"\n\n  String (String) =\n    stringLiteral\n\n  stringLiteral =\n    \"\\\\\"\" doubleStringCharacter* \"\\\\\"\"\n\n  doubleStringCharacter (character) =\n    ~(\"\\\\\"\" | \"\\\\\\\\\") any -- nonEscaped\n    | \"\\\\\\\\\" escapeSequence -- escaped\n\n  escapeSequence =\n    \"\\\\\"\" -- doubleQuote\n    | \"\\\\\\\\\" -- reverseSolidus\n    | \"/\" -- solidus\n    | \"b\" -- backspace\n    | \"f\" -- formfeed\n    | \"n\" -- newline\n    | \"r\" -- carriageReturn\n    | \"t\" -- horizontalTab\n    | \"u\" fourHexDigits -- codePoint\n\n  fourHexDigits = hexDigit hexDigit hexDigit hexDigit\n\n  Integer = wholeNumber\n\n  Decimal = \"\\\\\"\" decimal \"\\\\\"\"\n\n  Float = \n  \tnumberLiteral\n\n  Number (Number) =\n    numberLiteral\n\n  numberLiteral =\n    decimal exponent -- withExponent\n    | decimal -- withoutExponent\n\n  decimal =\n    wholeNumber \".\" digit+ -- withFract\n    | wholeNumber -- withoutFract\n\n  wholeNumber =\n    \"-\" unsignedWholeNumber -- negative\n    | unsignedWholeNumber -- nonNegative\n\n  unsignedWholeNumber =\n    \"0\" -- zero\n    | nonZeroDigit digit* -- nonZero\n\n  nonZeroDigit = \"1\"..\"9\"\n\n  exponent =\n    exponentMark (\"+\"|\"-\") digit+ -- signed\n    | exponentMark digit+ -- unsigned\n\n  exponentMark = \"e\" | \"E\"\n\n  True = \"true\"\n  False = \"false\"\n  Null = \"Null\"\n}\n\t`)\n\n\tfunction parseType(_1, n, a, _2) {\n\t\tlet meta = {}\n\t\tlet type = n.source.contents\n\t\tif (type) {\n\t\t\tmeta.type = type\n\t\t}\n\t\tlet attributes = a.parse()\n\t\tif (attributes) {\n\t\t\tmeta.attributes = attributes\n\t\t}\n\t\treturn meta\t\t\n\t}\n\n\tconst actions = {\n\t\tValue_nonNull: function(t, v) {\n\t\t\tlet JSONTagType = {};\n\t\t\tif (t.children[0]) {\n\t\t\t\tJSONTagType = t.children[0].parse()\n\t\t\t}\n\t\t\tlet value = v.parse()\n\t\t\tif (JSONTagType?.type || JSONTagType?.attributes) {\n\t\t\t\tif (JSONTagType.type === 'link' && typeof value === 'string' && value[0]==='#') {\n\t\t\t\t\tlet reference = value.substring(1)\n\t\t\t\t\tif (refs[reference]) {\n\t\t\t\t\t\tvalue = refs[reference]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!JSONTagType.type) {\n\t\t\t\t\tJSONTagType.type = typeof value\n\t\t\t\t}\n\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\tvalue = new String(value)\n\t\t\t\t}\n\t\t\t\tif (typeof value === \"number\") {\n\t\t\t\t\tvalue = new Number(value)\n\t\t\t\t}\n\t\t\t\tif (typeof value === \"boolean\") {\n\t\t\t\t\tvalue = new Boolean(value)\n\t\t\t\t}\n\t\t\t\tJSONTag.setType(value, JSONTagType.type)\n\t\t\t\tJSONTag.setAttributes(value, JSONTagType.attributes)\n\t\t\t\tif (JSONTagType.attributes?.id) {\n\t\t\t\t\trefs[JSONTagType.attributes.id] = value\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value\n\t\t},\n\t\tValue_bareNull: function(v) {\n\t\t\treturn null;\n\t\t},\n\t\tType: parseType,\n\t\tObjectType: parseType,\n\t\tArrayType: parseType,\n\t\tStringyType: parseType,\n\t\tUUIDType: parseType,\n\t\tNumberType: parseType,\n\t\tIntType: parseType,\n\t\tFloatType: parseType,\n\t\tDecimalType: parseType,\n\t\tMoneyType: parseType,\n\t\tBooleanType: parseType,\n\t\tName: function(l, a) {\n\t\t\treturn l.source.contents + a.children.map(c => c.source.contents).join(\"\")\n\t\t},\n\t\tAttributes: function(a) {\n\t\t\tlet attrs = {}\n\t\t\ta.children.map(c => {\n\t\t\t\tlet attr = c.parse()\n\t\t\t\tattrs[attr.name] = attr.value\n\t\t\t})\n\t\t\treturn attrs\n\t\t},\n\t\tAttribute: function(n, _, v) {\n\t\t\tlet name = n.source.contents\n\t\t\tlet value = v.parse()\n\t\t\treturn {\n\t\t\t\tname: name,\n\t\t\t\tvalue: value\n\t\t\t}\n\t\t},\n\t\tObject_empty: function (_1, _2) { return {}; },\n\t\tObject_nonEmpty: function (_1, x, _3, xs, _5) {\n\t\t\tvar out = {};\n\t\t\tvar k = x.children[0].parse();\n\t\t\tvar v = x.children[2].parse();\n\t\t\tout[k] = v;\n\t\t\tif (JSONTag.getType(v)==='link') {\n\t\t\t\tunresolved.push({\n\t\t\t\t\tsrc: out,\n\t\t\t\t\tkey: k,\n\t\t\t\t\tval: v\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor (var i = 0; i < xs.children.length; i++) {\n\t\t\t\tvar c = xs.children[i];\n\t\t\t\tk = c.children[0].parse();\n\t\t\t\tv = c.children[2].parse();\n\t\t\t\tout[k] = v;\n\t\t\t\tif (JSONTag.getType(v)==='link') {\n\t\t\t\t\tunresolved.push({\n\t\t\t\t\t\tsrc: out,\n\t\t\t\t\t\tkey: k,\n\t\t\t\t\t\tval: v\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\tArray_empty: function (_1, _2) {\n\t\t\treturn [];\n\t\t},\n\t\tArray_nonEmpty: function (_1, x, _3, xs, _5) {\n\t\t\tvar out = [x.parse()];\n\t\t\tfor (var i = 0; i < xs.children.length; i++) {\n\t\t\t\tlet c = xs.children[i].parse()\n\t\t\t\tout.push(c);\n\t\t\t\tif (JSONTag.getType(c)==='link') {\n\t\t\t\t\tunresolved.push({\n\t\t\t\t\t\tsrc: out,\n\t\t\t\t\t\tkey: out.length-1,\n\t\t\t\t\t\tval: c\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\tstringLiteral: function (_1, e, _3) {\n\t\t// TODO would it be more efficient to try to capture runs of unescaped\n\t\t// characters directly?\n\t\t\treturn e.children.map(function (c) { return c.parse(); }).join(\"\");\n\t\t},\n\t\tdoubleStringCharacter_nonEscaped: function (e) {\n\t\t\treturn e.source.contents;\n\t\t},\n\t\tdoubleStringCharacter_escaped: function (_, e) {\n\t\t\treturn e.parse();\n\t\t},\n\t\tescapeSequence_doubleQuote: function (e) { return '\"'; },\n\t\tescapeSequence_reverseSolidus: function (e) { return '\\\\'; },\n\t\tescapeSequence_solidus: function (e) { return '/'; },\n\t\tescapeSequence_backspace: function (e) { return '\\b'; },\n\t\tescapeSequence_formfeed: function (e) { return '\\f'; },\n\t\tescapeSequence_newline: function (e) { return '\\n'; },\n\t\tescapeSequence_carriageReturn: function (e) { return '\\r'; },\n\t\tescapeSequence_horizontalTab: function (e) { return '\\t'; },\n\t\tescapeSequence_codePoint: function (_, e) {\n\t\t\treturn String.fromCharCode(parseInt(e.source.contents, 16));\n\t\t},\n\t\tNumber: function (e) { return parseFloat(e.source.contents); },\n\t\tUUID: function(_1, e, _2) { return e.source.contents },\n\t\tTrue: function (e) { return true; },\n\t\tFalse: function (e) { return false; },\n\t\tNull: function (e) { return new JSONTagTypes.Null(); }\n\t}\n\tconst match = JSONT.match(text);\n\tif (match.failed()) {\n\t\tthrow new Error(match.message)\n\t}\n\t// see https://github.com/jwmerrill/ohm-grammar-json/blob/master/src/parser.js (en bijbehorende grammar)\n\tconst semantics = JSONT.createSemantics()\n\tsemantics.addOperation('parse', actions)\n\tconst adapter = semantics(match)\n\tlet result = adapter.parse()\n\n\tunresolved.forEach((u,i) => {\n\t\tif (JSONTag.getType(u.val)==='link' && u.val[0]==='#') {\n\t\t\tlet id = u.val.substring(1)\n\t\t\tif (typeof refs[id] !== 'undefined') {\n\t\t\t\tu.src[u.key] = refs[id]\n\t\t\t\tdelete unresolved[i]\n\t\t\t}\n\t\t}\n\t})\n\tif (typeof reviver === 'function') {\n\t\tfunction walk(holder, key) {\n\t      var k;\n\t      var v;\n\t      var value = holder[key];\n\t      if (value \n\t      \t\t&& typeof value === \"object\" \n\t      \t\t&& !(value instanceof String \n\t      \t\t|| value instanceof Number\n\t      \t\t|| value instanceof Boolean)\n\t      ) {\n\t          for (k in value) {\n\t              if (Object.prototype.hasOwnProperty.call(value, k)) {\n\t                  v = walk(value, k);\n\t                  if (v !== undefined) {\n\t                      value[k] = v;\n\t                  } else {\n\t                      delete value[k];\n\t                  }\n\t              }\n\t          }\n\t      }\n\t      return reviver.call(holder, key, value, { ids: refs, unresolved: unresolved });\n    }\n\t\treturn walk({\"\":result}, \"\")\n\t}\n\treturn result\n}"],"names":["$d0da4566d2fd20fe$var$getRandomValues","$d0da4566d2fd20fe$var$rnds8","Uint8Array","$d0da4566d2fd20fe$export$2e2bcd8739ae039","crypto","getRandomValues","bind","msCrypto","Error","$e8c673fd2604883f$export$2e2bcd8739ae039","$7d240e1718cbe118$export$2e2bcd8739ae039","uuid","test","$8fb7ad22aed8f433$var$byteToHex","$8fb7ad22aed8f433$var$i","push","toString","substr","$8fb7ad22aed8f433$export$2e2bcd8739ae039","arr","offset","arguments","length","undefined","toLowerCase","TypeError","$27d7069422be255c$export$2e2bcd8739ae039","options","buf","rnds","random","rng","i","$8e1f6d594b3b3e33$var$jsonStringify","JSON","stringify","$8e1f6d594b3b3e33$var$typeInfo","WeakMap","$8e1f6d594b3b3e33$export$e2b5c5db9e2009fd","obj","has","info","get","type","Array","isArray","$8e1f6d594b3b3e33$export$b14ad400b1d09e0f","$8e1f6d594b3b3e33$export$1bf7f05044e9c5cb","includes","attributes","set","$8e1f6d594b3b3e33$export$9fec4d97f1922e0b","attr","value","join","indexOf","split","$8e1f6d594b3b3e33$export$74da2cba014bdc09","Object","keys","forEach","key","$8e1f6d594b3b3e33$export$735ee1799fd02602","$8e1f6d594b3b3e33$export$fe94072fee8a6976","assign","$8e1f6d594b3b3e33$export$f4cc4d0befd5def7","entries","map","attrValue","$8e1f6d594b3b3e33$export$e8bbf06ddab4542c","attributesString","filter","Boolean","$03bca843cdc090a2$export$2e2bcd8739ae039","constructor","this","toJSON","toJSONTag","String","prototype","padStart","targetLength","padString","repeat","slice","$eeabf6c2057de2ca$export$2e2bcd8739ae039","e","isNaN","static","oi","substring","parseInt","replace","getAttributesString","hoist","a","b","from","ai","ae","toExp","bi","be","s","d","multiplyWith","n","ni","ne","divideBy","add","t","nn","ti","te","subtract","compareWith","isLessThan","compare","isMoreThan","isEqualTo","toPrecision","round","floor","ceil","$32925ad39ca868c1$export$2e2bcd8739ae039","c","console","log","Math","pow","getCurrency","Dt","Dn","$5bb19b6c90f503ab$export$2e2bcd8739ae039","Proxy","target","name","error","newValue","isNull","$ce6e26cd791972b0$export$2e2bcd8739ae039","UUID","Decimal","Money","Null","$52f572feac6e709f$var$main$1","exports","$52f572feac6e709f$var$Failure$2","pexpr","text","$52f572feac6e709f$var$isValidType","fluffy","getPExpr","getText","getType","isDescription","isStringTerminal","isCode","isFluffy","makeFluffy","clearFluffy","subsumes","that","clone","failure","toKey","$52f572feac6e709f$var$Failure_1","$52f572feac6e709f$var$common$l","escapeStringFor","fromCharCode","charCodeAt","abstract","optMethodName","methodName","assert","cond","message","defineLazyProperty","propName","getterFn","memo","defineProperty","call","repeatFn","fn","repeatStr","str","x","getDuplicates","array","duplicates","idx","lastIndexOf","copyWithoutDuplicates","noDuplicates","entry","isSyntactic","ruleName","firstChar","toUpperCase","isLexical","padLeft","len","optChar","ch","StringBuffer","strings","append","contents","escapeUnicode","fromCodePoint","unescapeCodePoint","charAt","unexpectedObjToString","baseToString","typeName","$52f572feac6e709f$var$common$k","$52f572feac6e709f$var$Node","matchLength","ctorName","numChildren","children","childAt","indexOfChild","arg","hasChildren","hasNoChildren","onlyChild","firstChild","lastChild","childBefore","child","childIdx","childAfter","isTerminal","isNonterminal","isIteration","isOptional","$52f572feac6e709f$var$nodes$1","Node","TerminalNode","primitiveValue","NonterminalNode","childOffsets","super","IterationNode","optional","$52f572feac6e709f$var$pexprsMain","$52f572feac6e709f$var$UnicodeCategories","Lu","Ll","Lt","Lm","Lo","Nl","Nd","Mn","Mc","Pc","Zs","L","Ltmo","$52f572feac6e709f$var$common$j","$52f572feac6e709f$var$PExpr$1","withSource","interval","source","trimmed","$52f572feac6e709f$var$any","create","$52f572feac6e709f$var$end","$52f572feac6e709f$var$Alt","terms","$52f572feac6e709f$var$Iter","expr","$52f572feac6e709f$var$Star","$52f572feac6e709f$var$Plus","$52f572feac6e709f$var$Opt","operator","minNumMatches","maxNumMatches","Number","POSITIVE_INFINITY","PExpr","any","end","Terminal","Range","to","matchCodePoint","Param","index","Alt","Extend","superGrammar","body","rules","Splice","beforeTerms","afterTerms","origBody","expansionPos","Seq","factors","Iter","Star","Plus","Opt","Not","Lookahead","Lex","Apply","args","toMemoKey","_memoKey","UnicodeChar","category","pattern","$52f572feac6e709f$var$common$i","$52f572feac6e709f$var$pexprs$l","$52f572feac6e709f$var$Namespace$2","allowsSkippingPrecedingSpace","asNamespace","objOrNamespace","createNamespace","optProps","extend","namespace","ns","enumerable","writable","configurable","$52f572feac6e709f$var$Namespace_1","$52f572feac6e709f$var$assert$3","$52f572feac6e709f$var$Namespace$1","$52f572feac6e709f$var$pexprs$k","$52f572feac6e709f$var$createError","optInterval","getLineAndColumnMessage","shortMessage","$52f572feac6e709f$var$errors$9","applicationOfSyntacticRuleFromLexicalContext","applyExpr","applySyntacticWithLexicalRuleApplication","cannotExtendUndeclaredRule","grammarName","optSource","cannotOverrideUndeclaredRule","duplicateGrammarDeclaration","grammar","duplicateParameterNames","duplicatePropertyNames","duplicateRuleDeclaration","declGrammarName","inconsistentArity","expected","actual","incorrectArgumentType","expectedType","intervalSourcesDontMatch","invalidCodePoint","applyWrapper","node","_node","digitIntervals","fullInterval","coverageWith","invalidConstructorCall","invalidParameter","getArity","grammarSyntaxError","matchFailure","getExpectedText","getInterval","kleeneExprHasNullableOperand","kleeneExpr","applicationStack","actuals","substituteParams","app","missingSemanticAction","stack","stackTrace","ans","moreInfo","multipleSuperSplices","undeclaredGrammar","undeclaredRule","unnecessaryExperimentalApplySyntactic","wrongNumberOfArguments","wrongNumberOfParameters","throwErrors","errors","messages","concat","$52f572feac6e709f$var$multipleErrors","$52f572feac6e709f$var$util$7","common","strcpy","dest","src","origDestLen","lineAndColumnToMessage","ranges","lineAndCol","sb","lineNum","colNum","lineNumbers","maxLen","max","padNumbersToEqualLength","prevLine","nextLine","appendLine","num","content","prefix","line","lineLen","indicationLine","startIdx","endIdx","lineStartOffset","min","gutterWidth","builtInRulesCallbacks","awaitBuiltInRules","cb","announceBuiltInRules","getLineAndColumn","currOffset","prevLineStartOffset","lineEndOffset","nextLineEndOffset","uniqueId","idCounter","$52f572feac6e709f$var$abstract","$52f572feac6e709f$var$isSyntactic","$52f572feac6e709f$var$errors$8","$52f572feac6e709f$var$pexprs$j","$52f572feac6e709f$var$BuiltInRules","$52f572feac6e709f$var$lexifyCount","g","assertAllApplicationsAreValid","_assertAllApplicationsAreValid","skipSyntacticCheck","ruleInfo","isContextSyntactic","formals","isBuiltInApplySyntactic","applySyntactic","caseInsensitive","$52f572feac6e709f$var$common$h","$52f572feac6e709f$var$errors$7","$52f572feac6e709f$var$pexprs$i","assertChoicesHaveUniformArity","arity","term","otherArity","actualArity","expectedArity","$52f572feac6e709f$var$common$g","$52f572feac6e709f$var$errors$6","$52f572feac6e709f$var$pexprs$h","assertIteratedExprsAreNotNullable","isNullable","$52f572feac6e709f$var$assert$2","$52f572feac6e709f$var$errors$5","$52f572feac6e709f$var$util$5","$52f572feac6e709f$var$Interval$3","sourceString","coverage","firstInterval","intervals","collapsedLeft","collapsedRight","range","minus","relativeTo","match","subInterval","newStartIdx","defineProperties","_contents","$52f572feac6e709f$var$Interval_1","$52f572feac6e709f$var$Interval$2","$52f572feac6e709f$var$common$f","$52f572feac6e709f$var$Flags","succeeded","isRootNode","isImplicitSpaces","isMemoized","isHeadOfLeftRecursion","terminatesLR","$52f572feac6e709f$var$asEscapedString","$52f572feac6e709f$var$Trace$2","input","pos1","pos2","bindings","optChildren","pos","terminatingLREntry","_flags","SKIP","toDisplayString","mask","val","cloneWithExpr","recordLRTermination","ruleBodyTrace","walk","visitorObjOrFn","optThisArg","visitor","_walk","parent","depth","recurse","enter","exit","excerpt","$52f572feac6e709f$var$getInputExcerpt","displayString","$52f572feac6e709f$var$Trace_1","$52f572feac6e709f$var$Trace$1","$52f572feac6e709f$var$common$e","$52f572feac6e709f$var$errors$4","$52f572feac6e709f$var$nodes","$52f572feac6e709f$var$pexprs$g","$52f572feac6e709f$var$TerminalNode$1","$52f572feac6e709f$var$NonterminalNode","$52f572feac6e709f$var$IterationNode$1","eval","state","inputStream","origPos","next","pushBinding","processFailure","atEnd","matchString","cp","nextCodePoint","nextCharCode","codePointAt","currentApplication","enterLexifiedContext","exitLexifiedContext","factor","cols","colOffsets","numMatches","prevPos","_applicationStack","row","_bindings","splice","rowOffsets","_bindingOffsets","posToOffset","lastCol","lastColOffsets","endOffset","pushFailuresInfo","popFailuresInfo","caller","posInfo","getCurrentPosInfo","isActive","handleCycle","memoKey","memoRec","shouldUseMemoizedResult","hasNecessaryInfo","useMemoizedResult","reallyEval","currentLeftRecursion","headApplication","updateInvolvedApplicationMemoKeys","memoize","examinedLength","rightmostFailureOffset","startLeftRecursion","origPosInfo","description","enterApplication","origInputStreamExaminedLength","evalOnce","currentLR","growSeedResult","endLeftRecursion","_getRightmostFailureOffset","isInvolved","failuresAtRightmostPosition","cloneRecordedFailures","isTracing","getTraceEntry","traceEntry","exitApplication","offsets","lrMemoRec","seedTrace","trace","pop","$52f572feac6e709f$var$common$d","$52f572feac6e709f$var$pexprs$f","$52f572feac6e709f$var$common$c","$52f572feac6e709f$var$pexprs$e","$52f572feac6e709f$var$getMetaInfo","grammarInterval","metaInfo","adjusted","sourceInterval","outputRecipe","$52f572feac6e709f$var$common$b","$52f572feac6e709f$var$pexprs$d","introduceParams","$52f572feac6e709f$var$common$a","$52f572feac6e709f$var$pexprs$c","_isNullable","some","every","hasOwnProperty","inlined","$52f572feac6e709f$var$common$9","$52f572feac6e709f$var$pexprs$b","$52f572feac6e709f$var$common$8","$52f572feac6e709f$var$pexprs$a","$52f572feac6e709f$var$copyWithoutDuplicates","$52f572feac6e709f$var$isRestrictedJSIdentifier","$52f572feac6e709f$var$resolveDuplicatedNames","argumentNameList","count","argName","dupArgName","subscript","toArgumentNameList","firstArgIndex","noDupCheck","termArgNameLists","numArgs","colIdx","col","rowIdx","uniqueNames","factorArgumentNameList","exprArgumentString","$52f572feac6e709f$var$common$7","$52f572feac6e709f$var$pexprs$9","ps","$52f572feac6e709f$var$Failure$1","$52f572feac6e709f$var$common$6","$52f572feac6e709f$var$pexprs$8","toFailure","f","$52f572feac6e709f$var$common$5","$52f572feac6e709f$var$pexprs$7","$52f572feac6e709f$var$pexprs$6","$52f572feac6e709f$var$Failure","$52f572feac6e709f$var$TerminalNode","$52f572feac6e709f$var$assert$1","$52f572feac6e709f$var$PExpr","$52f572feac6e709f$var$Terminal","$52f572feac6e709f$var$CaseInsensitiveTerminal$1","param","_getString","terminal","matchStr","$52f572feac6e709f$var$CaseInsensitiveTerminal_1","$52f572feac6e709f$var$Interval$1","$52f572feac6e709f$var$InputStream$3","nextChar","optIgnoreCase","sourceSlice","optEndIdx","$52f572feac6e709f$var$InputStream_1","$52f572feac6e709f$var$common$4","$52f572feac6e709f$var$util$4","$52f572feac6e709f$var$Interval","$52f572feac6e709f$var$MatchResult$2","matcher","startExpr","cst","cstOffset","rightmostFailurePosition","optRecordedFailures","_cst","_cstOffset","_rightmostFailurePosition","_rightmostFailures","failed","detail","getRightmostFailurePosition","errorInfo","getRightmostFailures","setInput","matchResultWithFailures","_match","failures","$52f572feac6e709f$var$MatchResult_1","$52f572feac6e709f$var$PosInfo$1","applicationMemoKeyStack","maxExaminedLength","maxRightmostFailureOffset","application","isLeftRecursion","nextLeftRecursion","indexOfFirstInvolvedRule","involvedApplicationMemoKeys","applicationMemoKey","clearObsoleteEntries","invalidatedIdx","k","$52f572feac6e709f$var$InputStream$2","$52f572feac6e709f$var$MatchResult$1","$52f572feac6e709f$var$PosInfo","$52f572feac6e709f$var$Trace","$52f572feac6e709f$var$pexprs$5","$52f572feac6e709f$var$builtInApplySyntacticBody","builtInRules","$52f572feac6e709f$var$applySpaces","$52f572feac6e709f$var$MatchState$1","optPositionToRecordFailures","memoTable","_posStack","inLexifiedContextStack","_rightmostFailurePositionStack","_recordedFailuresStack","positionToRecordFailures","recordedFailures","optNode","inSyntacticContext","inLexifiedContext","skipSpaces","popBinding","skipSpacesIfInSyntacticContext","maybeSkipSpacesBefore","numBindings","truncateBindings","newLength","getPosInfo","recordFailure","shouldCloneIfNew","recordFailures","getMemoizedTraceEntry","memoRecRightmostFailurePosition","origNumBindings","origRecordedFailures","memoPos","origTrace","getMatchResult","rightmostFailures","getTrace","matchResult","rootTrace","result","$52f572feac6e709f$var$MatchState","$52f572feac6e709f$var$pexprs$4","$52f572feac6e709f$var$Matcher$1","getInput","replaceInputRange","currentInput","restOfMemoTable","optStartApplicationStr","_getStartExpr","tracing","applicationStr","defaultStartRule","startApp","parseApplication","$52f572feac6e709f$var$Matcher_1","$52f572feac6e709f$var$InputStream$1","$52f572feac6e709f$var$IterationNode","$52f572feac6e709f$var$MatchResult","$52f572feac6e709f$var$common$3","$52f572feac6e709f$var$errors$3","$52f572feac6e709f$var$util$2","$52f572feac6e709f$var$globalActionStack","$52f572feac6e709f$var$hasOwnProperty","prop","$52f572feac6e709f$var$Wrapper","baseInterval","_baseInterval","_childWrappers","_forgetMemoizedResultFor","attributeName","_semantics","attributeKeys","childWrapper","childNode","base","wrap","_children","iteration","optChildWrappers","childWrappers","childNodes","iter","wrapper","$52f572feac6e709f$var$Semantics$2","superSemantics","self","checkedActionDicts","Wrapper","checkActionDictsIfHaventAlready","equals","_inheritsFrom","operations","$52f572feac6e709f$var$parseSignature$1","signature","prototypeGrammar","r","prototypeGrammarSemantics","parse","checkActionDicts","checkActionDict","toRecipe","semanticsOnly","hasSuperSemantics","BuiltInSemantics","_getSemantics","superSemanticsGrammar","relatedGrammar","semanticOperations","actionDict","builtInDefault","method","srcArray","actionName","trim","addOperationOrAttribute","typePlural","parsedNameAndFormalArgs","name1","assertNewName","doIt","formal","apply","$52f572feac6e709f$var$newDefaultAction","realActionDict","_default","$52f572feac6e709f$var$Operation","$52f572feac6e709f$var$Attribute","thisThing","argsObj","oldArgs","execute","extendOperationOrAttribute","name2","inheritedFormals","inheritedActionDict","newActionDict","optBaseInterval","createSemantics","optSuperSemantics","proxy","addOperation","extendOperation","addAttribute","extendAttribute","_getActionDict","operationOrAttributeName","action","_remove","semantic","getOperationNames","getAttributeNames","getGrammar","_checkTopDownActionDict","semantics","nodeWrapper","actionFn","_nonterminal","$52f572feac6e709f$var$Semantics_1","$52f572feac6e709f$var$CaseInsensitiveTerminal","$52f572feac6e709f$var$Matcher","$52f572feac6e709f$var$Semantics$1","$52f572feac6e709f$var$common$2","$52f572feac6e709f$var$errors$2","$52f572feac6e709f$var$pexprs$3","$52f572feac6e709f$var$SPECIAL_ACTION_NAMES","$52f572feac6e709f$var$getSortedRuleValues","sort","$52f572feac6e709f$var$Grammar$4","optDefaultStartRule","$52f572feac6e709f$var$ohmGrammar$2","$52f572feac6e709f$var$buildGrammar$1","initApplicationParser","builderFn","isBuiltIn","ProtoBuiltInRules","BuiltInRules","myRules","otherRules","rule","optStartApplication","m","extendSemantics","what","problems","v","_topDownActionArity","details","prettyProblems","problem","superGrammarExpr","metaInfo1","startRule","isDefinition","operation","bodyRecipe","superGrammarOutput","recipeElements","toOperationActionDictionaryTemplate","_toOperationOrAttributeActionDictionaryTemplate","toAttributeActionDictionaryTemplate","first","addSemanticActionTemplate","primitive","lower","upper","unicodeLtmo","spaces","space","$52f572feac6e709f$var$Grammar_1","$52f572feac6e709f$var$Grammar$3","$52f572feac6e709f$var$InputStream","$52f572feac6e709f$var$common$1","$52f572feac6e709f$var$errors$1","$52f572feac6e709f$var$pexprs$2","$52f572feac6e709f$var$GrammarDecl$1","ensureSuperGrammar","withSuperGrammar","ensureSuperGrammarRuleForOverriding","installOverriddenOrExtendedRule","expectedFormals","expectedNumFormals","install","withDefaultStartRule","build","grammarErrors","grammarHasInvalidApplications","e1","define","override","descIgnored","fragment","$52f572feac6e709f$var$Grammar$2","$52f572feac6e709f$var$GrammarDecl","$52f572feac6e709f$var$pexprs$1","$52f572feac6e709f$var$Builder$2","currentDecl","currentRuleName","newGrammar","metaInfo2","gDecl","fromRecipe","ruleRecipe","alt","termArgs","seq","factorArgs","star","plus","opt","not","la","lookahead","lex","optParams","recipe","$52f572feac6e709f$var$Builder_1","$52f572feac6e709f$var$version$1","__GLOBAL_OHM_VERSION__","$52f572feac6e709f$var$makeRecipe$5","$52f572feac6e709f$var$Builder$1","makeRecipe","$52f572feac6e709f$var$makeRecipe$3","$52f572feac6e709f$var$builtInRules","alnum","letter","digit","hexDigit","ListOf","NonemptyListOf","EmptyListOf","listOf","nonemptyListOf","emptyListOf","$52f572feac6e709f$var$makeRecipe$2","$52f572feac6e709f$var$operationsAndAttributes","AttributeSignature","OperationSignature","Formals","nameFirst","nameRest","$52f572feac6e709f$var$Semantics","operationsAndAttributesGrammar","actions","empty","nonEmpty","_","rest","$52f572feac6e709f$var$initBuiltInSemantics","optFormals","oparen","fs","cparen","asIteration","$52f572feac6e709f$var$makeRecipe$1","$52f572feac6e709f$var$ohmGrammar$1","Grammars","Grammar","SuperGrammar","Rule_define","Rule_override","Rule_extend","Rule","RuleBody","TopLevelTerm_inline","TopLevelTerm","OverrideRuleBody","OverrideTopLevelTerm_superSplice","OverrideTopLevelTerm","Params","Iter_star","Iter_plus","Iter_opt","Pred_not","Pred_lookahead","Pred","Lex_lex","Base_application","Base_range","Base_terminal","Base_paren","Base","ruleDescr","ruleDescrText","caseName","ident","oneCharTerminal","terminalChar","escapeChar_backslash","escapeChar_doubleQuote","escapeChar_singleQuote","escapeChar_backspace","escapeChar_lineFeed","escapeChar_carriageReturn","escapeChar_tab","escapeChar_unicodeCodePoint","escapeChar_unicodeEscape","escapeChar_hexEscape","escapeChar","comment_singleLine","comment_multiLine","comment","tokens","token","punctuation","$52f572feac6e709f$var$Builder","$52f572feac6e709f$var$Grammar","$52f572feac6e709f$var$Namespace","$52f572feac6e709f$var$common","$52f572feac6e709f$var$errors","$52f572feac6e709f$var$pexprs","$52f572feac6e709f$var$util","$52f572feac6e709f$var$version","$52f572feac6e709f$var$makeRecipe","$52f572feac6e709f$var$ohmGrammar","$52f572feac6e709f$var$superSplicePlaceholder","$52f572feac6e709f$var$buildGrammar","optOhmGrammarForTesting","builder","decl","currentRuleFormals","overriding","grammarIter","visit","id","_open","_close","superGrammarName","opointy","cpointy","seqs","inlineRuleName","isNewRuleDeclaration","params","open","close","space1","space2","cs","err","RangeError","startsWith","xs","_terminal","helpers","$52f572feac6e709f$var$grammars","optNamespace","isBuffer","$52f572feac6e709f$var$compileAndLoad","grammarNames","grammars","grammarFromScriptElement","grammarsFromScriptElements","optNodeOrNodeList","ohmGrammar","pexprs","util","version","_buildGrammar","$52f572feac6e709f$export$2e2bcd8739ae039","$52f572feac6e709f$var$assert","$52f572feac6e709f$var$getProp","thing","$52f572feac6e709f$var$mapProp","$52f572feac6e709f$var$getPropWalkFn","descriptor","parts","$52f572feac6e709f$var$getProps","walkFns","walkFn","$52f572feac6e709f$var$isRestrictedIdentifier","$52f572feac6e709f$var$trim","$52f572feac6e709f$var$VisitorFamily","config","_shapes","shapes","_getTag","getTag","Adapter","family","_adaptee","_family","valueOf","_arities","_getChildren","shape","$52f572feac6e709f$var$getWalkFn","_wrap","_checkActionDict","dict","sig","$52f572feac6e709f$var$parseSignature","tag","window","JSONTag","value1","replacer","references","indent","gap","encodeEntries","mind","gapstart","gapend","holder","$8e1f6d594b3b3e33$var$createId","encodeProperties","reviver","refs","unresolved","JSONT","parseType","_1","_2","meta","Value_nonNull","JSONTagType","reference","Value_bareNull","Type","ObjectType","ArrayType","StringyType","UUIDType","NumberType","IntType","FloatType","DecimalType","MoneyType","BooleanType","Name","l","Attributes","attrs","Attribute","Object_empty","Object_nonEmpty","_3","_5","out","Array_empty","Array_nonEmpty","stringLiteral","doubleStringCharacter_nonEscaped","doubleStringCharacter_escaped","escapeSequence_doubleQuote","escapeSequence_reverseSolidus","escapeSequence_solidus","escapeSequence_backspace","escapeSequence_formfeed","escapeSequence_newline","escapeSequence_carriageReturn","escapeSequence_horizontalTab","escapeSequence_codePoint","parseFloat","True","False","u","ids","setType","getTypeString","setAttribute","getAttribute","getAttributes","setAttributes"],"version":3,"file":"browser.js.map"}